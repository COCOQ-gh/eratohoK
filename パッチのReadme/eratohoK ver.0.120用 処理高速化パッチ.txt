§eratohoK ver.0.120用 処理高速化パッチ

§§概要
・総合スレにてTMP_CREATE_COUNTRY_NEIBORING_MAPの回しすぎで無限ループになるという話を聞いたので気になって関数を覗いてみる・都市総当りを勢力数だけ回すぐらいなら都市総当りの時点で勢力を見ているのを利用してチェックしたら１周で済むんでね？
・ついでに総当り式にするなら一方からは隣接してももう一方からは隣接していない状態が起こる構造にしてもいいよね？
　これができると一方通行式ワープ開通などの（システム負担的な意味でも）ひどいことができそうだなって、思うわけです
・上の方針で完成後、ふと思うところがあって高みを目指したらたどり着いてしまう（やっちまったZE）
・高みを目指している間におかしなところを見つけたので修正


§§使い方
・新マップ（MAP拡張パッチ）利用時
　MAP_OLD.ERBを削除して残りを上書きしてください。
・旧マップ利用時
　MAP.ERBを削除した上でMAP_OLD.ERBのファイル名をMAP.ERBに変更した上で本体に上書きしてください。


§§処理数の変化
ざっくり言えば
（中継でない都市数）^2×存在する勢力数
→（中立でない都市数）^2
→（中立でない都市数）×121（全都市が11都市に接続時、実際は3分の1程度と思われる）
と削減されているはずです。


§§処理内容
・番号順に中継点でも中立でもない都市（A）を検索
・（A）に隣接する都市（CITY_ROOT:A:n）を順に参照
　＋参照した都市（B）が中継点でなければ両都市の支配勢力（CITY_OWNER）を比較
　　一致していなければTMP_COUNTRY_IS_NEIBORING:A:Bのフラグを立てる（TMP_COUNTRY_IS_NEIBORING:B:Aは立てないでおく）
　＋参照した都市が中継点であればその中継点に隣接する都市を参照して上記のチェックを行う
詳細については関数側にコメントを残していますので参照ください。

§§MAP.ERB側の変更点
REGISTER_ROOTにおいてルート登録時の格納箇所がおかしかったのを修正
配列の参照場所ではなく引数の参照場所

§§システム上の抜け道について
中継点と隣接する都市を参照した際、起点の都市も参照されますが支配勢力が一致して弾かれるので多分問題はありません。

現在のシステムでは複数の中継点が隣接しても経路探索関数側が対処できない仕様になっています。
このため「中継点に隣接する都市は全て中継点ではない」ようにマップ側で設定する必要があります（設定しなくてもエラーは出ないが経路関係で不具合が生じる）。

今後経路探索関数が見直され複数の中継点がつながっても経路が正しく参照されるようになる場合、
CITY_ROOTを参照するのではなく都市を総当りでチェックする方法が適切となるでしょう。
なお、この関数については関数本体の下にコメントアウトの形で残しています。


§§当パッチの移植などについて
パッチ内容の変更、修正などはご自由に行ってください。
別バリアントへの移植などもオッケーです。


§§イベントの予定
あきらめました。
まじめにK0.120パッチまとめでも作ろうかと思いましたが、
どう考えても「イベント当日にメジャーアップデートする」と思われるので保留。
TW側のほうでなにか新しい仕込みでも考えようかな？


§§今までにKでやらかしたこと（あるいは製作パッチリスト）
eratohoK0110_スキマ埋めパッチ
eratohoK ver0.116用反乱フラグ関数＆二人が一緒に反乱パッチ
eratohoK ver0.116用行動順等乱数化＆反乱フラグ修正パッチ
eratohoK ver0.120用各種修正＆調整パッチ
eratohoK ver0.120用君主は謀反しないでくださいパッチ
eratohoK ver.0.120用 処理高速化パッチ＜これ

