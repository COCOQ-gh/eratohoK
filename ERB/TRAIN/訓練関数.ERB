@COM_SLG_TRAIN_MAIN_PROCESS(能力, 育児フラグ)
#DIM 能力
#DIM 育児フラグ
#DIM 乱数基準値, 2
#DIM ボーナス, 2
;コマンドの成否をTFLAG:18にセット
CALL JUDGE_COM_RESULT(MTAR:0, 5, 5)

乱数基準値:0 = MAX(100 - ABL:(MPLY:0):能力 / 2, 30)
乱数基準値:1 = MAX(100 - ABL:(MTAR:0):能力 / 2, 30)
ボーナス:0 = 乱数基準値:0 / 5
ボーナス:1 = 乱数基準値:1 / 5
IF ABL:(MPLY:0):能力 > ABL:(MTAR:0):能力 + 10
	乱数基準値:0 -= 10
	乱数基準値:1 += 10
	ボーナス:0 = 0
	ボーナス:1 += 5
ELSEIF ABL:(MTAR:0):能力 > ABL:(MPLY:0):能力 + 10
	乱数基準値:1 += 10
	乱数基準値:0 -= 10
	ボーナス:1 = 0
	ボーナス:0 += 5
ENDIF

SELECTCASE TFLAG:18
	CASE -1
		乱数基準値:0 -= 10
		乱数基準値:1 -= 10
		ボーナス:0 = 0
		ボーナス:1 = 0
	CASE 0
	CASEELSE
		乱数基準値:0 += 10
		乱数基準値:1 += 10
		ボーナス:0 += 10
		ボーナス:1 += 10
ENDSELECT

乱数基準値:0 += (GROWTYPE_RATE(MPLY:0, ABLNAME:能力) - 100) / 10
乱数基準値:1 += (GROWTYPE_RATE(MTAR:0, ABLNAME:能力) - 100) / 10

IF ABL:(MPLY:0):能力 > ランク閾値:ランク_ＳＬＧ:ランク_B
	TIMES 乱数基準値:0, 0.75
ELSEIF ABL:(MPLY:0):能力 < ランク閾値:ランク_ＳＬＧ:ランク_D
	TIMES 乱数基準値:0, 1.3
ENDIF
IF ABL:(MTAR:0):能力 > ランク閾値:ランク_ＳＬＧ:ランク_B
	TIMES 乱数基準値:0, 0.75
ELSEIF ABL:(MTAR:0):能力 < ランク閾値:ランク_ＳＬＧ:ランク_D
	TIMES 乱数基準値:0, 1.3
ENDIF

IF 育児フラグ == 0
	;適性がなく好感度・従属度が低いと恐怖と反感のソースを得る
	IF LOCAL:0 < 100
		SOURCE:(MTAR:0):歓楽 = 0
		SOURCE:(MTAR:0):恐怖 = MAX(0, 100 - MAX(CFLAG:(MTAR:0):2, CFLAG:(MTAR:0):4) * 100 / 800)
		SOURCE:(MTAR:0):不安 = MAX(0, 200 - MAX(CFLAG:(MTAR:0):2, CFLAG:(MTAR:0):4) * 200 / 500)
	ENDIF

	SOURCE:(MTAR:0):歓楽 = 20 * LOCAL:1 / 100

	;親密に応じた歓楽のソース追加
	CALL ADD_SOURCE_KANRAKU(MTAR:0, LOCAL:2 /2)

	;主導権に応じたソースの追加
	CALL ADD_SOURCE_INITIATIVE_N(MPLY:0, 100, 100)
	CALL ADD_SOURCE_INITIATIVE_N(MTAR:0, 100, 100)

	;ターゲットがサボり魔なら効果減少
	IF TALENT:(MTAR:0):サボり魔
		TIMES SOURCE:(MTAR:0):歓楽, 0.80
		SOURCE:(MTAR:0):反感 = 70 - SOURCE:(MTAR:0):歓楽 / 3
	ENDIF

	;失敗
	IF TFLAG:18 == -1
		TIMES SOURCE:(MTAR:0):歓楽, 0.20
		TIMES SOURCE:(MTAR:0):不安, 1.50
		SOURCE:(MTAR:0):不満 += 300
	;	LOCAL:2 = 1
	;成功
	ELSEIF TFLAG:18 == 0
	;	LOCAL:2 = 1
	;大成功
	ELSE
		TIMES SOURCE:(MTAR:0):歓楽, 2.00
		TIMES SOURCE:(MTAR:0):不安, 0.50
	;	LOCAL:2 = 2
	ENDIF

	;精神力の強化
	SIF MAXBASE:(MTAR:0):精神力 < 3000 || (MAXBASE:(MTAR:0):精神力 < 3500 && RAND:5 == 0)
		MAXBASE:(MTAR:0):精神力 = MIN(MAXBASE:(MTAR:0):精神力 + 2, 3500)


	;体力の強化
	IF MAXBASE:(MTAR:0):体力 < 1600
		MAXBASE:(MTAR:0):体力 += 2
	ELSEIF MAXBASE:(MTAR:0):体力 < 2000
		MAXBASE:(MTAR:0):体力 += 1
	ELSEIF MAXBASE:(MTAR:0):体力 < 3000 && RAND:5 == 0
		MAXBASE:(MTAR:0):体力 += 1
	ENDIF

	;気力の強化
	IF MAXBASE:(MTAR:0):気力 < 1600
		MAXBASE:(MTAR:0):気力 += 1
	ELSEIF MAXBASE:(MTAR:0):気力 < 2000 && RAND:2 == 0
		MAXBASE:(MTAR:0):気力 += 1
	ELSEIF MAXBASE:(MTAR:0):気力 < 2500 && RAND:6 == 0
		MAXBASE:(MTAR:0):気力 += 1
	ENDIF
	;主導度変化基準値
	TFLAG:49 = 2

	;倒錯度変化基準値
	TFLAG:50 = -1
ENDIF

IF !TALENT:(MTAR:0):幼児
	LOCAL = (RAND:100 < 乱数基準値:0)
	SIF ABL:(MPLY:0):能力 < ランク閾値:ランク_ＳＬＧ:ランク_D
		LOCAL *= RAND:2 + 1
	EXP:(MPLY:0):GET_EXP(能力) += LOCAL
	LOCAL = (RAND:100 < 乱数基準値:1)
	SIF ABL:(MTAR:0):能力 < ランク閾値:ランク_ＳＬＧ:ランク_D
		LOCAL *= RAND:2 + 1
	EXP:(MTAR:0):GET_EXP(能力) += LOCAL
	SIF ボーナス:0
		EXP:(MPLY:0):GET_EXP(能力) += RAND:100 < ボーナス:0
	SIF ボーナス:1
		EXP:(MTAR:0):GET_EXP(能力) += RAND:100 < ボーナス:1
ELSE
	FOR LOCAL, 0, 10
		EXP:(MTAR:0):GET_EXP(能力) += (RAND:100 < 乱数基準値:1)
		SIF ボーナス:1
			EXP:(MTAR:0):GET_EXP(能力) += RAND:100 < ボーナス:1
	NEXT
ENDIF



;------------------------------------------------------------
;訓練者ARG:0が 訓練相手ARG:1と　ARG:2（種類：50なら武闘。ABL.csvに対応する番号）を訓練する
;効果的な訓練かどうか％倍率のイメージのRETURN（訓練倍率）を返す
;TALENT(「怠け者」「超成長」)、GROWTYPE(成長タイプ)は 必要EXPのほうに考慮されているのでここでは扱わない
;歌唱・料理についてはABLUPの設定をみるに 武知政と差別化するのがよい？  歌30=武80？ 歌50=武90のイメージ？
;------------------------------------------------------------
@EXP_TRAIN_SLG(ARG:0, ARG:1, ARG:2)
#FUNCTION
#DIM 訓練者 	;経験値を得る人
#DIM 訓練者能力	;訓練対象の能力値
#DIM 相手 		;訓練相手
#DIM 種類 　	;50=武闘　51=知略　52=政治　60=歌唱　61=料理
#DIM 訓練倍率	;リターン項目

訓練者		= ARG:0
相手		= ARG:1
種類		= ARG:2
訓練者能力	= ABL:(訓練者):(種類)
訓練倍率	= 100

;歌唱・料理は効果絶大のためあがりにくくする
IF (種類) == 60 || (種類) == 61
	訓練者能力 += 30		;成長抑制をこの数値分早くから掛ける
ENDIF


	;成長抑制　現在能力が高いと経験になりにくい
	;能力50（3200)を基準として成長しにくく　減少傾向要調整
	;根本的に必要経験値が低いので苦肉の策
	IF 訓練者能力 >= (60 + (GETBIT(TALENT:訓練者:ＳＬＧ素質, 素質_ＳＬＧ_努力家) || GETBIT(TALENT:相手:ＳＬＧ素質, 素質_ＳＬＧ_努力家)) * 20)
		訓練倍率 = 訓練倍率 * ( 100 - (訓練者能力 - 50 ) ) / 100
		訓練倍率 = MAX( 訓練倍率 , 50 )
	ENDIF

IF !GETBIT(TALENT:訓練者:ＳＬＧ素質, 素質_ＳＬＧ_超成長力)	;超成長力を有するとこれらの抑制を受けない
	SIF 訓練者 == MASTER		;MASTERは1期に何人とも訓練できるので抑制
		TIMES 訓練倍率 , 0.66
ENDIF

;訓練相手との力量差による効率 ;能力＋１０でパワー倍、の時期作成
SELECTCASE ABL:(訓練者):(種類) - ABL:(相手):(種類)
	CASE IS < -10			;離れすぎ
			訓練倍率 *= 115
	CASE -10 TO -4			;格上を相手
			訓練倍率 *= 130
	CASE -3 TO 3			;同格の相手と訓練
			訓練倍率 *= 100	;基準
	CASE 4 TO 10			;格下を指導
			訓練倍率 *= 80
	CASEELSE				;離れすぎ
			訓練倍率 *= 70
ENDSELECT


IF 相手 == MASTER			;MASTER相手の訓練ならソース追加
	SELECTCASE ABL:(訓練者):(種類) - ABL:(相手):(種類)
		CASE IS < -10			;離れすぎ
				SOURCE:(訓練者):屈従 = 60
		CASE -10 TO -4			;格上を相手
				SOURCE:(訓練者):屈従 = 20
		CASE -3 TO 3			;同格の相手と訓練
				SOURCE:(訓練者):歓楽 += 20
		CASE 4 TO 10			;格下を指導
				SOURCE:(訓練者):優越 = 20
		CASEELSE				;離れすぎ
				SOURCE:(訓練者):優越 = 60
	ENDSELECT
ENDIF

訓練倍率 /= 100

RETURNF 訓練倍率
