;-------------------------------------------------
;戦略フェイズ終了時の処理
;-------------------------------------------------
@SLG_TURNEND
;国家関係マップの作成(処理の高速化)
CALL TMP_CREATE_RELATION_MAP

;野盗は都市をもってたら外交できる
LOCAL = GET_COUNTRY_FROM_ID(SP_COUNTRY_ID:(特殊勢力_野盗))
IF LOCAL > 0 && GET_OWN_CITY(LOCAL) > 0
	COUNTRY_IS_CLOSED:LOCAL = 0
ELSEIF LOCAL > 0 && GET_OWN_CITY(LOCAL) == 0
	;ここでフラグたてても、戦略ターン中に野盗が都市全ロスト→野盗対象の外交　でエラー落ちする
	;ねんのため勃てておくが、信頼性はない
	COUNTRY_IS_CLOSED:LOCAL = 1
ENDIF


CALL FISHER_YATES_SHAFFLE(MAX_COUNTRY)


;各国軍の部隊処理、上で混ぜ込んだ配列を使って行動する勢力の順序を変更しています
FOR LOCAL:99, 0, MAX_COUNTRY
	LOCAL:(LOCAL:99 + 1) = SHAFFLE_ARRAY:(LOCAL:99)
NEXT

;国家間の隣接関係マップの作成(処理の高速化)
CALL TMP_CREATE_COUNTRY_NEIBORING_MAP
;接続マップの作成
CALL TMP_CREATE_CONNECTION_MAP
;飛び地マップの作成
CALL TMP_CREATE_ENCLAVE_MAP

DRAWLINE
PRINTFORML ---国家内政・外交フェイズ---
DRAWLINE
FOR LOCAL, 1, MAX_COUNTRY + 1
	IF IS_COUNTRY(LOCAL:LOCAL) && (LOCAL:LOCAL != CFLAG:MASTER:1 || CONFIG:302 == 1)
		IF !FLAG:戦死エンドフラグ && (COUNTRY_EVENT_ID:(LOCAL:LOCAL) != SP_COUNTRY_ID:(特殊勢力_野盗) || GET_OWN_CITY(LOCAL:LOCAL) > 0)
			CALL AI_ACTION(LOCAL:LOCAL)
		ENDIF
	ENDIF
NEXT

FOR LOCAL, 0, MAX_COUNTRY
	IF COUNTRY_EVENT_ID:LOCAL == SP_COUNTRY_ID:(特殊勢力_野盗) && GET_OWN_CITY(LOCAL) == 0
		CALL BANDIT_AI(LOCAL)
	ENDIF
NEXT

;自軍のクールタイム減少処理と、このターンに割り当てたフラグ削除処理
FOR LOCAL, 0, CHARANUM
	IF CFLAG:LOCAL:所属 == CFLAG:MASTER:所属
		COOLTIME:LOCAL:0 = MAX(COOLTIME:LOCAL:0 - 1 , 0)
		ASSIGNED_THIS_TURN:LOCAL:0 = 0
	ENDIF
NEXT

IF DAY >= SLG_PP:1
	DRAWLINE
	PRINTFORML ---部隊行動フェイズ---
	DRAWLINE
	;自軍の部隊処理
	IF CFLAG:MASTER:1 >= 1
		CALL COUNTRY_TURNEND(CFLAG:MASTER:1)
	ENDIF
	FOR LOCAL, 1, MAX_COUNTRY + 1
		IF IS_COUNTRY(LOCAL:LOCAL) && LOCAL:LOCAL != CFLAG:MASTER:1
			IF !FLAG:戦死エンドフラグ && (COUNTRY_EVENT_ID:(LOCAL:LOCAL) != SP_COUNTRY_ID:(特殊勢力_野盗) || GET_OWN_CITY(LOCAL:LOCAL) > 0)
				CALL COUNTRY_TURNEND(LOCAL:LOCAL)
			ENDIF
		ENDIF
	NEXT
ENDIF

IF !FLAG:戦死エンドフラグ
	;同盟・連合の期限チェック
	CALL TREATY_TURNEND
	
	;風説流布
	CALL SPREAD_OF_RUMORS

	;特殊勢力の蜂起判定
	;まず呼び出し用文字列を用意
	;用意できれば確率判定を呼び、判定関数があって通っていれば蜂起
	FOR LOCAL, 0, MAX_SP_COUNTRY
		LOCALS = %SP_COUNTRY_NAME_ENG:LOCAL%
		IF LOCALS != ""
			TRYCCALLFORM %LOCALS%_RISE_RATE()
				SIF RESULT
					TRYCALLFORM %LOCALS%_RISE()
			CATCH
			ENDCATCH
		ENDIF
	NEXT

	;特殊勢力によるターンエンド
	FOR LOCAL, 0, MAX_COUNTRY
		TRYCALLFORM TURNEND_%SP_COUNTRY_NAME_ENG:SP_COUNTRY_TO_CONST(LOCAL)%
	NEXT

	;特殊勢力による調教
	FOR LOCAL, 0, MAX_COUNTRY
		CALL SP_TRAIN(LOCAL)
	NEXT
	
	;シナリオ固有のイベント
	TRYCALLFORM SCENARIO_EVENT_%SCENARIOID%
	
	;ランダムな謀反処理
	IF !DCONFIG:DCON_ランダム謀反
		CALL SLG_RANDOM_INDEPENDENCE
		CALL SLG_RANDOM_RISE
	ENDIF
	
ENDIF

;解放カウンタに基づいて解放
CALL RELEASE_PRISONERS

;捕虜になったときの解放カウンタを加算
;ただし、特殊勢力は自然解放しない
FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:(LOCAL:0):捕虜先 && !IS_SP_COUNTRY(CFLAG:(LOCAL:0):捕虜先)
		CFLAG:(LOCAL:0):解放カウンタ ++
	ELSE
		CFLAG:(LOCAL:0):解放カウンタ = 0
	ENDIF
NEXT

;人気もちによる部隊兵数増加処理
FOR LOCAL:0, 0, MAX_COUNTRY
	FOR LOCAL:1, 0, MAX_UNIT
		IF UNIT_SOLDIER:(LOCAL:0):(LOCAL:1) > 0
			CALL IDOL_GATHER_SOLDIER(LOCAL:0, LOCAL:1)
		ENDIF
	NEXT
NEXT

;放浪士官で自国に誘ったキャラがいれば主人公勢力へ加入
CALL GO_TO_MASTERS_COUNTRY(0)

;エンディング・ゲームオーバーのチェック
CALL ENDING_CHECK

;デッドエンディングなら戻る
SIF FLAG:処刑エンドフラグ
	RETURN

;終了フラグが立っていないなら外交処理
IF !FLAG:クリアフラグ
	;連合の発議
	CALL UNION_CONFERENCE

	;敗将の逃走処理
	CALL TURNEND_ESCAPE
ENDIF

;各国軍の徴兵処理
FOR LOCAL:0, 0, MAX_COUNTRY
	SIF IS_COUNTRY(LOCAL:0)
		CALL COUNTRY_ADD_SOLDIER(LOCAL:0)
NEXT

;戦闘済みフラグの解除
FOR LOCAL:0, 0, MAX_COUNTRY
	FOR LOCAL:1, 0, 10
		UNIT_FBATTLE:(LOCAL:0):(LOCAL:1) = 0
	NEXT
NEXT

;統計情報の記憶
CALL STATS_SAVE

;外交済みフラグの解除
VARSET DONE_DIPLOMACY_FRIENDSHIP, 0
VARSET DONE_DIPLOMACY_REQUEST, 0
VARSET DONE_DIPLOMACY_SCANDAL, 0

;特別訓練フラグを折る
VARSET DONE_SPECIAL_TRAIN, 0

;領地探索フラグを折る
VARSET DONE_TERRITORYSEARCH, 0

;計略によるパワー1フラグの解除
CVARSET CFLAG, 34, 0

;強要行為によるヘイトのクールダウン
FLAG:99 = MAX(FLAG:99 - MAX(10 - CONFIG:300 * 2, 0), 0)

;-------------------------------------------------
;ARG:0番の勢力の部隊処理
;-------------------------------------------------
@COUNTRY_TURNEND(ARG:0)
#DIM LCOUNT, 3
SETCOLOR COUNTRY_COLOR:(ARG:0)
PRINTFORML %NAME:GET_COUNTRY_BOSS(ARG:0)%軍行動中...
RESETCOLOR

[IF_DEBUG]
;DEBUGPRINTFORM この時点で存在する部隊:
;FOR LOCAL, 0, 10
;	SIF UNIT_SOLDIER:(ARG:0):(LOCAL:0) > 0
;		DEBUGPRINTFORM {LOCAL} 
;NEXT
;DEBUGPRINTFORML
[ENDIF]

;■部隊の移動
FOR LCOUNT:0, 0, MAX_UNIT
	;都市ID=0での行動を禁ずる
	SIF UNIT_POSITION:(ARG:0):(LCOUNT:0) == 0
		CONTINUE
	IF UNIT_SOLDIER:(ARG:0):(LCOUNT:0) > 0
		;DEBUGPRINTFORML %ANAME(GET_COUNTRY_BOSS(ARG:0))%勢力{LCOUNT:0}部隊の行動
		LOCAL:2 = UNIT_POSITION:(ARG:0):(LCOUNT:0)
		LOCAL:3 = UNIT_TARGET:(ARG:0):(LCOUNT:0)
		IF LOCAL:3 > 0 && LOCAL:2 != LOCAL:3
			;停戦中の都市が目標になっている場合

			IF TMP_COUNTRY_RELATION:(ARG:0):(CITY_OWNER:(LOCAL:3)) == 1
				UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
			ELSE
				;経路の存在判定
				LOCAL:4 = IS_ROOT(LOCAL:2, LOCAL:3)
				;敵対国家の部隊が同じ位置にいるフラグ
				LOCAL:5 = 0
				FOR LCOUNT:1, 0, MAX_COUNTRY
					;敵対国家の部隊について探索
					IF IS_COUNTRY(LCOUNT:1) && !TMP_COUNTRY_RELATION:(ARG:0):(LCOUNT:1) && ARG:0 != LCOUNT:1 
						FOR LCOUNT:2, 0, MAX_UNIT
							;敵対国家の部隊がいたらフラグ立て
							IF LOCAL:2 == UNIT_POSITION:(LCOUNT:1):(LCOUNT:2)
								LOCAL:5 = 1
							ENDIF
						NEXT
					ENDIF
				NEXT
				;中継点を通る場合、部隊に疾風迅雷所持者がいれば、30%の確率で中継点をすっとばす
				IF LOCAL:4 == 2
					FOR LCOUNT:1, 0, MAX_UNIT_COMMANDER
						LOCAL:6 = GET_UNIT_COMMANDER(ARG:0, LCOUNT:0, LCOUNT:1)
						IF LOCAL:6 >= 0 && GETBIT(TALENT:(LOCAL:6):ＳＬＧ素質, 素質_ＳＬＧ_疾風迅雷) && 30 > RAND:100
							SETCOLOR COLOR("素質発動")
							PRINTFORML %ANAME(LOCAL:6)%は迅速な部隊行動を見せる！
							PRINTFORML 一気に目的地に移動した！
							RESETCOLOR
							;LOCAL:5は折らなくていい気がするんだけど、一応
							LOCAL:5 = 0
							LOCAL:4 = 0
							UNIT_POSITION:(ARG:0):(LCOUNT:0) = LOCAL:3
							SIF ARG:0 == CFLAG:MASTER:1
								UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
							BREAK
						ENDIF
					NEXT
				ENDIF
				IF !LOCAL:5	
					;直通
					IF LOCAL:4 == 1
						;移動させて目標を解除
						UNIT_POSITION:(ARG:0):(LCOUNT:0) = LOCAL:3
						UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
					;中継地点を経由
					ELSEIF LOCAL:4 == 2
						;中継地点の取得
						LOCAL:5 = GET_RELAYPOINT(LOCAL:2, LOCAL:3)
						IF LOCAL:5 > 0
							UNIT_POSITION:(ARG:0):(LCOUNT:0) = LOCAL:5
						ELSE
							UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
						ENDIF
					;直接の移動経路なし
					ELSEIF ARG:0 == CFLAG:MASTER:1
						UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT

;部隊マップの作成(処理の高速化)
CALL TMP_CREATE_UNIT_MAP

;■戦闘処理
LOCAL:20 = 0
FOR LOCAL:0, 0, 10
	;都市ID=0での行動を禁ずる
	SIF UNIT_POSITION:(ARG:0):(LOCAL:0) == 0
		CONTINUE
	;LOCAL:0番の部隊が存在する場合
	IF UNIT_SOLDIER:(ARG:0):(LOCAL:0) > 0
		;同一の都市に存在する敵性部隊をリスト化
		LOCAL:10 = UNIT_POSITION:(ARG:0):(LOCAL:0)
		LOCAL:13 = 0
		FOR LOCAL:1, 0, 20
			LOCAL:11 = TMP_UNIT_ONCITY_CNT:(LOCAL:10):(LOCAL:1)
			LOCAL:12 = TMP_UNIT_ONCITY_NUM:(LOCAL:10):(LOCAL:1)
			IF LOCAL:11 > 0 && TMP_COUNTRY_RELATION:(ARG:0):(LOCAL:11) == 0 && UNIT_SOLDIER:(LOCAL:11):(LOCAL:12) > 0
				LOCAL:(LOCAL:13 + 30) = LOCAL:11
				LOCAL:(LOCAL:13 + 50) = LOCAL:12
				LOCAL:13 ++
			ENDIF
		NEXT
		;一つ以上の敵性部隊が存在する場合
		IF LOCAL:13 >= 1
			;行動済みなら敵の遊撃部隊とは戦わない
			IF !UNIT_FBATTLE:(ARG:0):(LOCAL:0)
				;●侵攻部隊-侵攻部隊の戦闘判定
				LOCAL:14 = 0
				;複数の敵性部隊が存在する場合
				IF LOCAL:13 >= 2
					;自勢力の場合
					IF ARG:0 == CFLAG:MASTER:1
						PRINTFORM 我が軍の第{LOCAL:0 + 1}部隊
						LOCALS:0 = %GET_UNIT_COMMANDER_NAME(ARG:0, LOCAL:0)%
						IF LOCALS:0 != ""
							PRINTFORM (%LOCALS:0%隊)
						ENDIF
						PRINTFORML の現在地である%GET_RELAYNAME(LOCAL:10)%には複数の敵部隊が存在します
						PRINTL 攻撃する部隊を選択して下さい
						FOR LOCAL:1, 0, LOCAL:13
							LOCAL:16 = LOCAL:(LOCAL:1 + 30)
							LOCAL:17 = LOCAL:(LOCAL:1 + 50)
							PRINTFORM [{LOCAL:1, 2}] %NAME:GET_COUNTRY_BOSS(LOCAL:16), 6%軍 第{LOCAL:17 + 1}部隊  兵数:{UNIT_SOLDIER:(LOCAL:16):(LOCAL:17)}
							LOCALS:0 = %GET_UNIT_COMMANDER_NAME(LOCAL:16, LOCAL:17)%
							IF LOCALS:0 != ""
								PRINTFORM   将:%LOCALS:0%
							ENDIF
							PRINTL
						NEXT
						PRINTL [99] 攻撃しない

						$INPUT_LOOP_SETTARGET
						INPUT

						IF RESULT >= 0 && RESULT < LOCAL:13
							LOCAL:14 = RESULT
						ELSEIF RESULT == 99
							LOCAL:14 = -1
						ELSE
							GOTO INPUT_LOOP_SETTARGET
						ENDIF
					;CPU勢力の場合
					ELSE
						;最も兵数の少ない部隊を自動選択
						LOCAL:15 = 0
						FOR LOCAL:1, 0, LOCAL:13
							LOCAL:16 = LOCAL:(LOCAL:1 + 30)
							LOCAL:17 = LOCAL:(LOCAL:1 + 50)
							IF UNIT_SOLDIER:(LOCAL:16):(LOCAL:17) < LOCAL:15 || LOCAL:15 == 0
								LOCAL:14 = LOCAL:1
								LOCAL:15 = UNIT_SOLDIER:(LOCAL:16):(LOCAL:17)
							ENDIF
						NEXT
					ENDIF
				ENDIF
				;LOCAL:14に指定された敵部隊を攻撃
				IF LOCAL:14 >= 0
					LOCAL:16 = LOCAL:(LOCAL:14 + 30)
					LOCAL:17 = LOCAL:(LOCAL:14 + 50)
					;戦闘処理本体
					CALL BATTLE_UNIT_TO_UNIT(ARG:0, LOCAL:0, LOCAL:16, LOCAL:17)

					;敵性部隊が１部隊だった場合、その部隊を撃破すれば続けて防衛部隊との戦闘に入る
					IF LOCAL:13 == 1 && UNIT_SOLDIER:(LOCAL:16):(LOCAL:17) <= 0
						;●侵攻部隊-防衛部隊の戦闘判定
						LOCAL:5 = UNIT_POSITION:(ARG:0):(LOCAL:0)
						LOCAL:6 = CITY_OWNER:(LOCAL:5)
						IF LOCAL:5 > 0 && CITY_TYPE:(LOCAL:5) == 0 && LOCAL:6 != ARG:0 && TMP_COUNTRY_RELATION:(ARG:0):(LOCAL:6) == 0
							;戦闘処理本体
							CALL BATTLE_UNIT_TO_CITY(ARG:0, LOCAL:0, LOCAL:5)
						ENDIF
					ENDIF
				ENDIF
			ENDIF

		;敵性部隊が存在しない場合
		ELSE
			;●侵攻部隊-防衛部隊の戦闘判定
			LOCAL:5 = UNIT_POSITION:(ARG:0):(LOCAL:0)
			LOCAL:6 = CITY_OWNER:(LOCAL:5)
			IF LOCAL:5 > 0 && CITY_TYPE:(LOCAL:5) == 0 && LOCAL:6 != ARG:0 && TMP_COUNTRY_RELATION:(ARG:0):(LOCAL:6) == 0
				;戦闘処理本体
				CALL BATTLE_UNIT_TO_CITY(ARG:0, LOCAL:0, LOCAL:5)
			ENDIF
		ENDIF
	ENDIF
NEXT

;部隊の強制解散の処理
FOR LOCAL:0, 0, 10
	IF UNIT_BREAK_TERM:(ARG:0):(LOCAL:0) == 1
		CALL CLEAR_UNIT(ARG:0, LOCAL:0)
	ELSEIF UNIT_BREAK_TERM:(ARG:0):(LOCAL:0) >= 2
		UNIT_BREAK_TERM:(ARG:0):(LOCAL:0) --
	ENDIF
NEXT

PRINTL 

;-------------------------------------------------
;同盟・連合の期限チェック
;-------------------------------------------------
@TREATY_TURNEND
;★
;FOR LOCAL:0, 0, MAX_TREATY_A
;	PRINTFORM No.{LOCAL:0, 2, LEFT} 期間:{TREATY_A_TERM:(LOCAL:0)} 
;	FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
;		IF TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) >= 1
;			PRINTFORM {LOCAL:1}-{TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1)} 
;		ENDIF
;	NEXT
;	PRINTL 
;NEXT

;同盟のチェック
FOR LOCAL:0, 0, MAX_TREATY_A
	IF TREATY_A_TERM:(LOCAL:0) >= 1 && TREATY_A_TERM:(LOCAL:0) != 9999
		TREATY_A_TERM:(LOCAL:0) --
		;期限切れによる解散
		IF TREATY_A_TERM:(LOCAL:0) == 0
			SETCOLOR COLOR("注意")
			PRINT 期限切れにより
			LOCAL:5 = 0
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				LOCAL:3 = TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1)
				IF LOCAL:3 > 0
					LOCAL:4 = GET_COUNTRY_BOSS(LOCAL:3)
					IF LOCAL:4 >= 0
						IF LOCAL:5
							PRINT ・
						ENDIF
						PRINTFORM %NAME:(LOCAL:4)%
						LOCAL:5 = 1
					ENDIF
					;ついでに部隊の解散もここで行う
					CALL CLEAR_ALL_UNIT(LOCAL:3, 1)
				ENDIF
			NEXT
			PRINTL 同盟は解散しました
			PRINTL 同盟の解散に伴い、参加していた勢力の全部隊は解散されます
			RESETCOLOR
			;移動処理対象の検索
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				IF TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) >= 1 && TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) != CFLAG:MASTER:1
					;その同盟にプレイヤー勢力がいたか検索
					FOR LOCAL:2, 0, MAX_TREATY_COUNTRY
						IF TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:2) == CFLAG:MASTER:1
							;いたら、自国へ誘った士官の移動処理
							CALL GO_TO_MASTERS_COUNTRY(TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1))
						ENDIF
					NEXT
				ENDIF
			NEXT
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) = 0
			NEXT
			TREATY_A_TERM:(LOCAL:0) = 0
			PRINTL 
		ENDIF
	ENDIF
NEXT

;連合のチェック
FOR LOCAL:0, 0, MAX_TREATY_U
	IF TREATY_U_TERM:(LOCAL:0) > 0 && TREATY_U_TERM:(LOCAL:0) != 9999
		TREATY_U_TERM:(LOCAL:0) --
		;期限切れによる解散
		IF TREATY_U_TERM:(LOCAL:0) == 0
			SETCOLOR COLOR("注意")
			PRINT 期限切れにより
			LOCAL:3 = GET_COUNTRY_BOSS(TREATY_U_TARGET:(LOCAL:0))
			IF LOCAL:3 >= 0
				PRINTFORM 反%NAME:(LOCAL:3)%
			ENDIF
			PRINTL 連合は解散しました
			PRINTL 連合の解散に伴い、参加していた勢力の全部隊は解散されます
			RESETCOLOR
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				LOCAL:4 = TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1)
				IF LOCAL:4 > 0
					CALL CLEAR_ALL_UNIT(LOCAL:4, 1)
				ENDIF
			NEXT
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				IF TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1) >= 1 && TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1) != CFLAG:MASTER:1
					;その同盟にプレイヤー勢力がいたか検索
					FOR LOCAL:2, 0, MAX_TREATY_COUNTRY
						IF TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:2) == CFLAG:MASTER:1
							;いたら、自国へ誘った士官の移動処理
							CALL GO_TO_MASTERS_COUNTRY(TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1))
						ENDIF
					NEXT
				ENDIF
			NEXT
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1) = 0
			NEXT
			TREATY_U_TERM:(LOCAL:0) = 0
			TREATY_U_TARGET:(LOCAL:0) = 0
			PRINTL 
		ENDIF
	ENDIF
NEXT

;停戦のチェック
FOR LOCAL:0, 0, MAX_TREATY_C
	IF TREATY_C_TERM:(LOCAL:0) > 0 && TREATY_C_TERM:(LOCAL:0) != 9999
		TREATY_C_TERM:(LOCAL:0) --
		;期限切れによる解散
		IF TREATY_C_TERM:(LOCAL:0) == 0
			SETCOLOR COLOR("注意")
			PRINT 期限切れにより
			LOCAL:5 = 0
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				LOCAL:3 = TREATY_C_COUNTRY:(LOCAL:0):(LOCAL:1)
				IF LOCAL:3 > 0
					LOCAL:4 = GET_COUNTRY_BOSS(LOCAL:3)
					IF LOCAL:4 >= 0
						IF LOCAL:5
							PRINT ・
						ENDIF
						PRINTFORM %NAME:(LOCAL:4)%
						LOCAL:5 = 1
					ENDIF
				ENDIF
			NEXT
			PRINTL の停戦条約は失効しました
			PRINTL 
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				TREATY_C_COUNTRY:(LOCAL:0):(LOCAL:1) = 0
			NEXT
			TREATY_C_TERM:(LOCAL:0) = 0
			RESETCOLOR
		ENDIF
	ENDIF
NEXT



;連合の討伐対象にならない期間を減少
SETCOLOR COLOR("注意")
FOR LOCAL:0, 0, MAX_COUNTRY
	COUNTRY_NOTARGET_TERM:(LOCAL:0) = MAX(COUNTRY_NOTARGET_TERM:(LOCAL:0) - 1, 0)
;外交ペナルティ用処理
	SIF COUNTRY_NOTDIPLOMACY_TERM:(LOCAL:0) == 1
		PRINTFORML %NAME:GET_COUNTRY_BOSS(LOCAL:0)%に対する各勢力の外交封鎖は解除されました
	COUNTRY_NOTDIPLOMACY_TERM:(LOCAL:0) = MAX(COUNTRY_NOTDIPLOMACY_TERM:(LOCAL:0) - 1, 0)
;改めて外交ペナルティの判定処理
	CALL DIPLOMACY_BACKFIRE(LOCAL:0)
NEXT
RESETCOLOR

;-------------------------------------------------
;ARG:0番の勢力の徴兵処理
;-------------------------------------------------
@COUNTRY_ADD_SOLDIER(ARG:0)
;増加する兵数は経済規模×0.5(警邏・歌唱などによる補正あり)
;最大兵数は経済規模×10

;士官が部隊に所属しているかどうかのリストを作成
CALL TMP_CREATE_IS_FREE_MAP

;歌唱パワー・政治パワーを取得
LOCAL:7 = 0
LOCAL:8 = 0
FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:(LOCAL:0):1 == ARG:0 && TMP_IS_FREE:(LOCAL:0):0 == 0
		;政治の補正
		LOCAL:7 += ABL_POWER_X((ABL:(LOCAL:0):政治 * 7 + ABL:(LOCAL:0):武闘 * 3) / 10, LOCAL:0)
		LOCAL:8 += MAX(ABL_POWER_X(ABL:(LOCAL:0):歌唱, LOCAL:0) - ABL_50_POWER, 0)
	ENDIF
NEXT
LOCAL:7 = SQRT(LOCAL:7) * 3 / 2 + SQRT(LOCAL:8) * 5 / 4

LOCAL:0 = GET_SUM_ECONOMY(ARG:0) / 100
LOCAL:1 = GET_SUM_SOLDIER(ARG:0)
LOCAL:2 = LOCAL:0 * (( ARG:0 == CFLAG:MASTER:1 ? FLAG:43 # 0) + LOCAL:7 + 10) * 5 / 10000
LOCAL:3 = MAX(LOCAL:0 * 10 - LOCAL:1, 0)

;政策による補正
SELECTCASE COUNTRY_POLICY:(ARG:0)
;軍事ランク3
CASE 7
		TIMES LOCAL:2, 3.00
;軍事ランク2
CASE 4
		TIMES LOCAL:2, 2.20
;軍事ランク1
CASE 1
		TIMES LOCAL:2, 1.50
;軍事ランク-1
CASE 5, 6
		TIMES LOCAL:2, 0.90
;軍事ランク-2
CASE 8
		TIMES LOCAL:2, 0.75
CASEELSE
		TIMES LOCAL:2, 1.00
ENDSELECT


;VER1.25より、NPCのみ徴兵数増加
IF ARG:0 != CFLAG:MASTER:1
	SELECTCASE CONFIG:300
		CASE 0
			TIMES LOCAL:2, 0.90
		CASE 1
			TIMES LOCAL:2, 1.00
		CASE 2
			TIMES LOCAL:2, 1.25
		CASE 3
			TIMES LOCAL:2, 2.00
	ENDSELECT
ENDIF

;AIタイプに応じた兵数の増減
;IF ARG:0 != CFLAG:MASTER:1
;	SELECTCASE COUNTRY_AI_TYPE:(ARG:0)
;		CASE AI_好戦
;			TIMES LOCAL:2, 1.10
;		CASE AI_内政
;			TIMES LOCAL:2, 0.90
;	ENDSELECT
;ENDIF

LOCAL:4 = MIN(LOCAL:2, LOCAL:3)
COUNTRY_SOLDIER:(ARG:0) += LOCAL:4

IF ARG:0 == CFLAG:MASTER:1 && LOCAL:4 > 0
	PRINTFORMW 我が国の兵数が{LOCAL:4}だけ増加しました
ENDIF

;防衛兵数が最低数を割っている都市があるなら自動配分
LOCAL:5 = 0
FOR LOCAL:0, 0, MAX_CITY
	IF CITY_OWNER:(LOCAL:0) == ARG:0 && CITY_SOLDIER:(LOCAL:0) < 500 && COUNTRY_SOLDIER:(ARG:0) > 0
		;敵部隊のいる都市は増減不可
		CALL GET_STAY_ENEMY_UNIT(LOCAL:0)
		IF RESULT:0 < 0
			LOCAL:6 = MIN(500 - CITY_SOLDIER:(LOCAL:0), COUNTRY_SOLDIER:(ARG:0))
			CITY_SOLDIER:(LOCAL:0) += LOCAL:6
			COUNTRY_SOLDIER:(ARG:0) -= LOCAL:6
			LOCAL:5 = 1
			IF ARG:0 == CFLAG:MASTER:1
				PRINTFORML %GET_CITYNAME(LOCAL:0)%の防衛兵数を{LOCAL:6}だけ補充しました
			ENDIF
		ENDIF
	ENDIF
NEXT
IF ARG:0 == CFLAG:MASTER:1 && LOCAL:5
	WAIT
ENDIF

;-------------------------------------------------
;各勢力都市の経済規模変動(実際の呼び出しはTURNEND.ERB)
;-------------------------------------------------
@VARY_ECONOMY
#DIM CITY_DAMAGE, 3
#DIM ECONOMY_POWER, MAX_COUNTRY, 3

FOR LOCAL:0, 0, MAX_CITY
VARSET CITY_DAMAGE
VARSET ECONOMY_POWER
	;攻撃を受けた都市の経済規模を減少させる
	CITY_DAMAGE:0 = CITY_IS_ATTACKED:(LOCAL:0) - PAST_CITY_IS_ATTACKED:(LOCAL:0)
	IF CITY_DAMAGE:0 > 0
		FOR CITY_DAMAGE:1, 0, MAX(CITY_DAMAGE:0 / 2, 1)
			CITY_DAMAGE:2 += RAND:3
			SIF CITY_DAMAGE:2 >= 20
				BREAK
		NEXT
		CITY_ECONOMY:(LOCAL:0) = MAX(CITY_ECONOMY:(LOCAL:0) - (CITY_ECONOMY:(LOCAL:0) * MIN(CITY_DAMAGE:2, 20) / 400), 500)
		CITY_ECONOMY_LIMIT:(LOCAL:0) = MAX(CITY_ECONOMY_LIMIT:(LOCAL:0) - (CITY_ECONOMY_LIMIT:(LOCAL:0) * MIN(CITY_DAMAGE:2, 20) / 800), 500)
	;このターン攻撃を受けなければフラグはリセットされる
	ELSE
		CITY_IS_ATTACKED:(LOCAL:0) = 0
	ENDIF
NEXT
;変数リセット
ARRAYCOPY "CITY_IS_ATTACKED" , "PAST_CITY_IS_ATTACKED"

;各士官が行動可能な状態にあるかどうかのマップ作成(高速化用)
CALL TMP_CREATE_IS_FREE_MAP

;キャラごとの補正計算を勢力ごとに集約
FOR LOCAL, 0, CHARANUM
	IF CFLAG:(LOCAL:0):1 && TMP_IS_FREE:(LOCAL:0):0 == 0
		;政治の補正
		ECONOMY_POWER:(CFLAG:(LOCAL:0):1):0 += ABL_POWER_X((ABL:(LOCAL:0):政治 * 7 + ABL:(LOCAL:0):知略 * 3) / 10, LOCAL:0)
		
		;料理の補正／能力50以下は切り捨てる
		ECONOMY_POWER:(CFLAG:(LOCAL:0):1):1 += MAX(ABL_POWER_X(ABL:(LOCAL:0):料理, LOCAL:0) - ABL_50_POWER, 0)
	ENDIF
NEXT

IF CFLAG:MASTER:1
	ECONOMY_POWER:(CFLAG:MASTER:1):0 += FLAG:42
	ECONOMY_POWER:(CFLAG:MASTER:1):1 += FLAG:42
ENDIF

;勢力ごとに計算
FOR LOCAL:0, 0, MAX_COUNTRY
	IF IS_COUNTRY(LOCAL:0) && GET_SUM_ECONOMY(LOCAL:0)
		LOCAL:5 = SQRT(ECONOMY_POWER:(LOCAL:0):0) * 50 + SQRT(ECONOMY_POWER:(LOCAL:0):1) * 30

		;増加率に応じて減衰
		SELECTCASE LOCAL:5 * 100 / GET_SUM_ECONOMY(LOCAL:0)
		CASE  0 TO 5
		CASE  6 TO 10
			TIMES LOCAL:5, 0.95
		CASE 11 TO 20
			TIMES LOCAL:5, 0.90
		CASE 21 TO 35
			TIMES LOCAL:5, 0.85
		CASE 36 TO 50
			TIMES LOCAL:5, 0.80
		CASE IS > 51
			TIMES LOCAL:5, 0.75
		CASEELSE
			TIMES LOCAL:5, 0.50
		ENDSELECT

		;政策補正
		SELECTCASE COUNTRY_POLICY:(LOCAL:0)
		;経済ランク3
		CASE 6
				TIMES LOCAL:5, 2.50
		;経済ランク2
		CASE 3
				TIMES LOCAL:5, 1.70
		;経済ランク1
		CASE 0
				TIMES LOCAL:5, 1.20
		;経済ランク-1
		CASE 4, 8
				TIMES LOCAL:5, 0.875
		;経済ランク-2
		CASE 7
				TIMES LOCAL:5, 0.65
		CASEELSE
		ENDSELECT

;		;内政型だとさらに1.1倍
;		SELECTCASE COUNTRY_AI_TYPE:(LOCAL:0)
;		CASE AI_内政
;			SIF LOCAL != CFLAG:MASTER:1
;				TIMES LOCAL:5, 1.10
;		CASEELSE
;		ENDSELECT
		
		;成長値に所有都市数の補正を掛けて都市を成長させる
		LOCAL:6 = GET_OWN_CITY(LOCAL:0)
		CALL GROW_COUNTRY_ECONOMY(LOCAL:0, LOCAL:5 * LOCAL:6 / (LOCAL:6 + 3))
	ENDIF
NEXT

;-------------------------------------------------
;税収処理関数
;-------------------------------------------------
@GAIN_COUNTRY_TAX
#DIM TAX_VALUE
#DIM POLICY
#DIM TAX_COUNT, 10
#DIM TAX, 2

VARSET TAX_COUNT
VARSET TAX_VALUE
VARSET POLICY
VARSET TAX

FOR TAX_COUNT:0, 0, MAX_CITY
	SIF CITY_TYPE:(TAX_COUNT:0) || CITY_OWNER:(TAX_COUNT:0) == 0
		CONTINUE
	;政策による税率調整
	SELECTCASE COUNTRY_POLICY:(CITY_OWNER:(TAX_COUNT:0))
	CASE 0
		TAX_VALUE = 80
	CASE 2, 3
		TAX_VALUE = 70
	CASE 1, 5, 6
		TAX_VALUE = 60
	CASE 4, 8
		TAX_VALUE = 50
	CASE 7
		TAX_VALUE = 40
	CASEELSE
		TAX_VALUE = 50
	ENDSELECT
	TAX = CITY_ECONOMY:(TAX_COUNT:0) * TAX_VALUE / (100 * 100)
	SIF CITY_OWNER:(TAX_COUNT:0) == CFLAG:MASTER:1
		TAX:1 += TAX
	MONEY:(CITY_OWNER:(TAX_COUNT:0)) += TAX
NEXT

SIF TAX:1
	PRINTFORML 徴税により{TAX:1}が国庫に納められました（現在値:{MONEY:(CFLAG:MASTER:1)}）


;-------------------------------------------------
;ARG:0勢力の都市の経済規模を合計ARG:1だけ成長させる関数
;-------------------------------------------------
@GROW_COUNTRY_ECONOMY(ARG:0, ARG:1)
;乱数制御に使用
#DIM CUT_POS, MAX_CITY

;所有都市ごとの成長率を、合計成長量を一定にしつつランダムに設定
LOCAL:12 = GET_OWN_CITY(ARG:0)
LOCAL:13 = LOCAL:12 * 70
CUT_POS:0 = 0
CUT_POS:(LOCAL:12) = LOCAL:13
FOR LOCAL:1, 1, LOCAL:12
	CUT_POS:(LOCAL:1) = RAND:(LOCAL:13)
	FOR LOCAL:2, 1, LOCAL:1
		IF CUT_POS:(LOCAL:1) < CUT_POS:(LOCAL:2)
			FOR LOCAL:3, LOCAL:1, LOCAL:2, -1
				SWAP CUT_POS:(LOCAL:3 - 1), CUT_POS:(LOCAL:3)
			NEXT
		ENDIF
	NEXT
NEXT

;成長値に応じて都市を成長させる
LOCAL:14 = 0
FOR LOCAL:1, 0, MAX_CITY
	IF CITY_OWNER:(LOCAL:1) == ARG:0
		CITY_ECONOMY:(LOCAL:1) += ARG:1 * (CUT_POS:(LOCAL:14 + 1) - CUT_POS:(LOCAL:14) + 30) / (LOCAL:12 * 100)

		;経済規模が限界値を超えていれば限界値が上昇
		IF CITY_ECONOMY:(LOCAL:1) > CITY_ECONOMY_LIMIT:(LOCAL:1)
			CITY_ECONOMY_LIMIT:(LOCAL:1) += (CITY_ECONOMY:(LOCAL:1) - CITY_ECONOMY_LIMIT:(LOCAL:1)) / 20
			CITY_ECONOMY_LIMIT:(LOCAL:1) = MIN(CITY_ECONOMY_LIMIT:(LOCAL:1), 999900)
			CITY_ECONOMY:(LOCAL:1) = CITY_ECONOMY_LIMIT:(LOCAL:1)
		ENDIF
		LOCAL:14 ++
	ENDIF
NEXT

;-------------------------------------------------
;自国へ誘った士官の移動 ARG:0は移動元の勢力番号
;-------------------------------------------------
@GO_TO_MASTERS_COUNTRY(ARG:0)
FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:(LOCAL:0):1 == ARG:0 && CFLAG:(LOCAL:0):自国勧誘成功フラグ
		;死亡状態ならフラグをクリア
		IF CFLAG:(LOCAL:0):特殊状態フラグ == 2
			CFLAG:(LOCAL:0):自国勧誘成功フラグ = 0
		;現時点で他国の捕虜になっている場合は一時保留
		ELSEIF CFLAG:(LOCAL:0):捕虜先 >= 1 && CFLAG:(LOCAL:0):捕虜先 != CFLAG:MASTER:1
		;現時点で主人公が放浪状態ならフラグをクリア
		ELSEIF CFLAG:MASTER:1 == 0
			CFLAG:(LOCAL:0):自国勧誘成功フラグ = 0
		;それ以外なら主人公の国家へ移動
		ELSE
			LOCAL:2 = GET_COUNTRY_BOSS(CFLAG:(LOCAL:0):1)
			SETCOLOR COLOR("オレンジ")
			IF LOCAL:2 >= 0
				PRINTFORMW %NAME:(LOCAL:0)%は%NAME:(LOCAL:2)%勢力を抜けだし、%ANAME(MASTER)%の元に駆け付けました
			ELSE
				PRINTFORMW %NAME:(LOCAL:0)%は%ANAME(MASTER)%の元に駆け付けました
			ENDIF
			RESETCOLOR
			CFLAG:(LOCAL:0):1 = CFLAG:MASTER:1
			CFLAG:(LOCAL:0):特殊状態フラグ = 0
			CFLAG:(LOCAL:0):自国勧誘成功フラグ = 0
			;対象国家との関係が悪化
			CALL CHANGE_RELATION_C_TO_C(ARG:0, CFLAG:MASTER:1, -125)
			;君主から主人公への印象はさらに悪化
			CALL CHANGE_RELATION_O_TO_O(ARG:0, CFLAG:MASTER:1, -125)
		ENDIF
	ENDIF
NEXT



;-------------------------------------------------
;ARG:0勢力のARG:1番の部隊に「人気」もちの武将が存在する場合、その部隊の兵数を増加させる処理
;-------------------------------------------------
@IDOL_GATHER_SOLDIER(ARG:0, ARG:1)
#DIM LCOUNT
#DIM 武将
#DIM 増加数
FOR LCOUNT, 0, 3
	武将 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LCOUNT)
	IF 武将 >= 0 && TALENT:武将:人気
		増加数 = GET_SUM_ECONOMY(ARG:0) / 100
		TIMES 増加数, 0.10
		IF ARG:0 == CFLAG:MASTER:1
			PRINTFORML
			PRINTFORML %ANAME(武将)%の人気っぷりが、部隊に人を集めているようだ……
			PRINTFORM {ARG:1+1}番の部隊に
			PRINTFORM {増加数}
			PRINTFORML の義勇兵が集まりました
			PRINTFORML 兵数:{UNIT_SOLDIER:(ARG:0):(ARG:1)} → {UNIT_SOLDIER:(ARG:0):(ARG:1) + 増加数}
		ENDIF
		UNIT_SOLDIER:(ARG:0):(ARG:1) += 増加数
	ENDIF
NEXT
