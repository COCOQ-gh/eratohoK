;-------------------------------------------------
;戦略フェイズ終了時の処理
;-------------------------------------------------
@SLG_TURNEND
;国家関係マップの作成(処理の高速化)
CALL TMP_CREATE_RELATION_MAP

;クールタイム減少処理
FOR LOCAL:99, 0, CHARANUM
	SLG_COOLTIME:(LOCAL:99):0 = MAX(SLG_COOLTIME:(LOCAL:99):0 - 1 , 0)
NEXT


;自軍の部隊処理
IF CFLAG:MASTER:1 >= 1
	CALL COUNTRY_TURNEND(CFLAG:MASTER:1)
ENDIF

CALL FISHER_YATES_SHAFFLE(MAX_COUNTRY)


;各国軍の部隊処理、上で混ぜ込んだ配列を使って行動する勢力の順序を変更しています
FOR LOCAL:99, 0, MAX_COUNTRY
	LOCAL:(LOCAL:99 + 1) = SHAFFLE_ARRAY:(LOCAL:99)
NEXT

FOR LOCAL, 1, MAX_COUNTRY + 1
	IF IS_COUNTRY(LOCAL:LOCAL) && LOCAL:LOCAL != CFLAG:MASTER:1
		IF !FLAG:34 && COUNTRY_EVENT_ID:(LOCAL:LOCAL) != COUNTRY_BANDIT
			CALL COUNTRY_TURNEND(LOCAL:LOCAL)
		ENDIF
	ENDIF
NEXT

FOR LOCAL, 0, MAX_COUNTRY
	IF COUNTRY_EVENT_ID:LOCAL == COUNTRY_BANDIT
		CALL BANDIT_TURNEND(LOCAL)
	ENDIF
NEXT

IF !FLAG:34
	;同盟・連合の期限チェック
	CALL TREATY_TURNEND

	;シナリオ固有のイベント
	TRYCALLFORM SCENARIO_EVENT_%SCENARIOID%
	
	;野盗による調教
	CALL TRAIN_BY_BANDIT

ENDIF

;解放カウンタに基づいて解放
CALL RELEASE_PRISONERS

;捕虜になったときの解放カウンタを加算
;ただし、外来人とホフゴブリンは自然解放しない
FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:(LOCAL:0):9 && CFLAG:(LOCAL:0):9 != GET_COUNTRY_FROM_ID(299) && CFLAG:(LOCAL:0):9 != GET_COUNTRY_FROM_ID(300)
		CFLAG:(LOCAL:0):43 ++
	ELSE
		CFLAG:(LOCAL:0):43 = 0
	ENDIF
NEXT

;人気もちによる部隊兵数増加処理
FOR LOCAL:0, 0, MAX_COUNTRY
	FOR LOCAL:1, 0, MAX_UNIT
		IF UNIT_SOLDIER:(LOCAL:0):(LOCAL:1) > 0
			CALL IDOL_GATHER_SOLDIER(LOCAL:0, LOCAL:1)
		ENDIF
	NEXT
NEXT

;放浪士官で自国に誘ったキャラがいれば主人公勢力へ加入
CALL GO_TO_MASTERS_COUNTRY(0)

;エンディング・ゲームオーバーのチェック
CALL ENDING_CHECK

;デッドエンディングなら戻る
SIF FLAG:27 == 9999
	RETURN

;終了フラグが立っていないなら外交処理
IF !FLAG:28
	;連合の発議
	CALL UNION_CONFERENCE

	;敗将の逃走処理
	CALL TURNEND_ESCAPE
ENDIF

;各国軍の徴兵処理
FOR LOCAL:0, 0, MAX_COUNTRY
	SIF IS_COUNTRY(LOCAL:0)
		CALL COUNTRY_ADD_SOLDIER(LOCAL:0)
NEXT

;戦闘済みフラグの解除
FOR LOCAL:0, 0, MAX_COUNTRY
	FOR LOCAL:1, 0, 10
		UNIT_FBATTLE:(LOCAL:0):(LOCAL:1) = 0
	NEXT
NEXT

;統計情報の記憶
CALL STATS_SAVE

;外交済みフラグの解除
VARSET DONE_DIPLOMACY_FRIENDSHIP, 0
VARSET DONE_DIPLOMACY_REQUEST, 0

;計略によるパワー1フラグの解除
CVARSET CFLAG, 34, 0

FLAG:99 = MAX(FLAG:99 - MAX(6 - CONFIG:300, 0), 0)
;-------------------------------------------------
;ARG:0番の勢力の部隊処理
;-------------------------------------------------
@COUNTRY_TURNEND(ARG:0)
#DIM LCOUNT, 3
SETCOLOR 0x808080
PRINTFORML %NAME:GET_COUNTRY_BOSS(ARG:0)%軍行動中...
RESETCOLOR

;コンフィグで自動行動が設定されていれば主人公勢力もAI行動
IF ARG:0 != CFLAG:MASTER:1 || CONFIG:302 == 1
	;敵AIの行動
	CALL AI_ACTION(ARG:0)
ENDIF

[IF_DEBUG]
;DEBUGPRINTFORM この時点で存在する部隊:
;FOR LOCAL, 0, 10
;	SIF UNIT_SOLDIER:(ARG:0):(LOCAL:0) > 0
;		DEBUGPRINTFORM {LOCAL} 
;NEXT
;DEBUGPRINTFORML
[ENDIF]

;■部隊の移動
FOR LCOUNT:0, 0, MAX_UNIT
	IF UNIT_SOLDIER:(ARG:0):(LCOUNT:0) > 0
		;DEBUGPRINTFORML %ANAME(GET_COUNTRY_BOSS(ARG:0))%勢力{LCOUNT:0}部隊の行動
		LOCAL:2 = UNIT_POSITION:(ARG:0):(LCOUNT:0)
		LOCAL:3 = UNIT_TARGET:(ARG:0):(LCOUNT:0)
		IF LOCAL:3 > 0 && LOCAL:2 != LOCAL:3
			;停戦中の都市が目標になっている場合
			IF TMP_COUNTRY_RELATION:(ARG:0):(CITY_OWNER:(LOCAL:3)) == 1
				UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
			ELSE
				;経路の存在判定
				LOCAL:4 = IS_ROOT(LOCAL:2, LOCAL:3)
				;敵対国家の部隊が同じ位置にいるフラグ
				LOCAL:5 = 0
				FOR LCOUNT:1, 0, MAX_COUNTRY
					;敵対国家の部隊について探索
					IF IS_COUNTRY(LCOUNT:1) && !TMP_COUNTRY_RELATION:(ARG:0):(LCOUNT:1) && ARG:0 != LCOUNT:1 
						FOR LCOUNT:2, 0, MAX_UNIT
							;敵対国家の部隊がいたらフラグ立て
							IF LOCAL:2 == UNIT_POSITION:(LCOUNT:1):(LCOUNT:2)
								LOCAL:5 = 1
							ENDIF
						NEXT
					ENDIF
				NEXT
				IF !LOCAL:5	
					;直通
					IF LOCAL:4 == 1
						;移動させて目標を解除
						UNIT_POSITION:(ARG:0):(LCOUNT:0) = LOCAL:3
						UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
					;中継地点を経由
					ELSEIF LOCAL:4 == 2
						;中継地点の取得
						LOCAL:5 = GET_RELAYPOINT(LOCAL:2, LOCAL:3)
						IF LOCAL:5 > 0
							UNIT_POSITION:(ARG:0):(LCOUNT:0) = LOCAL:5
						ELSE
							UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
						ENDIF
					;直接の移動経路なし
					ELSEIF ARG:0 == CFLAG:MASTER:1
						UNIT_TARGET:(ARG:0):(LCOUNT:0) = 0
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT

;部隊マップの作成(処理の高速化)
CALL TMP_CREATE_UNIT_MAP

;■戦闘処理
LOCAL:20 = 0
FOR LOCAL:0, 0, 10
	;LOCAL:0番の部隊が存在する場合
	IF UNIT_SOLDIER:(ARG:0):(LOCAL:0) > 0
		;同一の都市に存在する敵性部隊をリスト化
		LOCAL:10 = UNIT_POSITION:(ARG:0):(LOCAL:0)
		LOCAL:13 = 0
		FOR LOCAL:1, 0, 20
			LOCAL:11 = TMP_UNIT_ONCITY_CNT:(LOCAL:10):(LOCAL:1)
			LOCAL:12 = TMP_UNIT_ONCITY_NUM:(LOCAL:10):(LOCAL:1)
			IF LOCAL:11 > 0 && TMP_COUNTRY_RELATION:(ARG:0):(LOCAL:11) == 0 && UNIT_SOLDIER:(LOCAL:11):(LOCAL:12) > 0
				LOCAL:(LOCAL:13 + 30) = LOCAL:11
				LOCAL:(LOCAL:13 + 50) = LOCAL:12
				LOCAL:13 ++
			ENDIF
		NEXT
		;一つ以上の敵性部隊が存在する場合
		IF LOCAL:13 >= 1
			;行動済みなら敵の遊撃部隊とは戦わない
			IF !UNIT_FBATTLE:(ARG:0):(LOCAL:0)
				;●侵攻部隊-侵攻部隊の戦闘判定
				LOCAL:14 = 0
				;複数の敵性部隊が存在する場合
				IF LOCAL:13 >= 2
					;自勢力の場合
					IF ARG:0 == CFLAG:MASTER:1
						PRINTFORM 我が軍の第{LOCAL:0 + 1}部隊
						LOCALS:0 = %GET_UNIT_COMMANDER_NAME(ARG:0, LOCAL:0)%
						IF LOCALS:0 != ""
							PRINTFORM (%LOCALS:0%隊)
						ENDIF
						PRINTFORML の現在地である%GET_RELAYNAME(LOCAL:10)%には複数の敵部隊が存在します
						PRINTL 攻撃する部隊を選択して下さい
						FOR LOCAL:1, 0, LOCAL:13
							LOCAL:16 = LOCAL:(LOCAL:1 + 30)
							LOCAL:17 = LOCAL:(LOCAL:1 + 50)
							PRINTFORM [{LOCAL:1, 2}] %NAME:GET_COUNTRY_BOSS(LOCAL:16), 6%軍 第{LOCAL:17 + 1}部隊  兵数:{UNIT_SOLDIER:(LOCAL:16):(LOCAL:17)}
							LOCALS:0 = %GET_UNIT_COMMANDER_NAME(LOCAL:16, LOCAL:17)%
							IF LOCALS:0 != ""
								PRINTFORM   将:%LOCALS:0%
							ENDIF
							PRINTL
						NEXT
						PRINTL [99] 攻撃しない

						$INPUT_LOOP_SETTARGET
						INPUT

						IF RESULT >= 0 && RESULT < LOCAL:13
							LOCAL:14 = RESULT
						ELSEIF RESULT == 99
							LOCAL:14 = -1
						ELSE
							GOTO INPUT_LOOP_SETTARGET
						ENDIF
					;CPU勢力の場合
					ELSE
						;最も兵数の少ない部隊を自動選択
						LOCAL:15 = 0
						FOR LOCAL:1, 0, LOCAL:13
							LOCAL:16 = LOCAL:(LOCAL:1 + 30)
							LOCAL:17 = LOCAL:(LOCAL:1 + 50)
							IF UNIT_SOLDIER:(LOCAL:16):(LOCAL:17) < LOCAL:15 || LOCAL:15 == 0
								LOCAL:14 = LOCAL:1
								LOCAL:15 = UNIT_SOLDIER:(LOCAL:16):(LOCAL:17)
							ENDIF
						NEXT
					ENDIF
				ENDIF
				;LOCAL:14に指定された敵部隊を攻撃
				IF LOCAL:14 >= 0
					LOCAL:16 = LOCAL:(LOCAL:14 + 30)
					LOCAL:17 = LOCAL:(LOCAL:14 + 50)
					;戦闘処理本体
					CALL BATTLE_UNIT_TO_UNIT(ARG:0, LOCAL:0, LOCAL:16, LOCAL:17)

					;敵性部隊が１部隊だった場合、その部隊を撃破すれば続けて防衛部隊との戦闘に入る
					IF LOCAL:13 == 1 && UNIT_SOLDIER:(LOCAL:16):(LOCAL:17) <= 0
						;●侵攻部隊-防衛部隊の戦闘判定
						LOCAL:5 = UNIT_POSITION:(ARG:0):(LOCAL:0)
						LOCAL:6 = CITY_OWNER:(LOCAL:5)
						IF LOCAL:5 > 0 && CITY_TYPE:(LOCAL:5) == 0 && LOCAL:6 != ARG:0 && TMP_COUNTRY_RELATION:(ARG:0):(LOCAL:6) == 0
							;戦闘処理本体
							CALL BATTLE_UNIT_TO_CITY(ARG:0, LOCAL:0, LOCAL:5)
						ENDIF
					ENDIF
				ENDIF
			ENDIF

		;敵性部隊が存在しない場合
		ELSE
			;●侵攻部隊-防衛部隊の戦闘判定
			LOCAL:5 = UNIT_POSITION:(ARG:0):(LOCAL:0)
			LOCAL:6 = CITY_OWNER:(LOCAL:5)
			IF LOCAL:5 > 0 && CITY_TYPE:(LOCAL:5) == 0 && LOCAL:6 != ARG:0 && TMP_COUNTRY_RELATION:(ARG:0):(LOCAL:6) == 0
				;戦闘処理本体
				CALL BATTLE_UNIT_TO_CITY(ARG:0, LOCAL:0, LOCAL:5)
			ENDIF
		ENDIF
	ENDIF
NEXT

;部隊の強制解散の処理
FOR LOCAL:0, 0, 10
	IF UNIT_BREAK_TERM:(ARG:0):(LOCAL:0) == 1
		CALL CLEAR_UNIT(ARG:0, LOCAL:0)
	ELSEIF UNIT_BREAK_TERM:(ARG:0):(LOCAL:0) >= 2
		UNIT_BREAK_TERM:(ARG:0):(LOCAL:0) --
	ENDIF
NEXT

PRINTL 

;-------------------------------------------------
;侵攻部隊(ARG:0勢力、ARG:1部隊) vs 侵攻部隊(ARG:2勢力、ARG:3部隊)の戦闘
;-------------------------------------------------
@BATTLE_UNIT_TO_UNIT(ARG:0, ARG:1, ARG:2, ARG:3)
LOCAL:5 = UNIT_POSITION:(ARG:0):(ARG:1)
BATTLE_NAME:0 = %NAME:GET_COUNTRY_BOSS(ARG:0)%
BATTLE_NAME:1 = %NAME:GET_COUNTRY_BOSS(ARG:2)%

PRINTFORM %GET_RELAYNAME(LOCAL:5)%において%BATTLE_NAME:0%軍
LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:0, ARG:1)%
IF LOCALS:2 != ""
	PRINTFORM の<%LOCALS:2%>部隊
ENDIF
PRINTFORM と%BATTLE_NAME:1%軍
LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:2, ARG:3)%
IF LOCALS:2 != ""
	PRINTFORM の<%LOCALS:2%>部隊
ENDIF
PRINTL が衝突しました

;片方が主人公勢力なら口上表示
IF ARG:0 == CFLAG:MASTER:1 || ARG:2 == CFLAG:MASTER:1
	FOR LOCAL:0, 0, 3
		LOCAL:1 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 300)
		ENDIF
	NEXT
	FOR LOCAL:0, 0, 3
		LOCAL:1 = GET_UNIT_COMMANDER(ARG:2, ARG:3, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 300)
		ENDIF
	NEXT
ENDIF

;■戦闘の計算
CALL BATTLE_CALC(ARG:0, ARG:1, ARG:2, ARG:3)

;■ダメージの適用
UNIT_SOLDIER:(ARG:0):(ARG:1) -= BATTLE_DMG:0
UNIT_SOLDIER:(ARG:2):(ARG:3) -= BATTLE_DMG:1

;自勢力のみ詳細を表示(ただし捕虜になっていると見られない)
IF FLAG:1 || (CFLAG:MASTER:1 >= 1 && CFLAG:MASTER:9 == 0 && (ARG:0 == CFLAG:MASTER:1 || ARG:2 == CFLAG:MASTER:1))
	PRINTFORML %BATTLE_NAME:0, 10, RIGHT%軍 {BATTLE_SOL:0, 6, RIGHT}→{UNIT_SOLDIER:(ARG:0):(ARG:1), 6, RIGHT}
	PRINTFORML %BATTLE_NAME:1, 10, RIGHT%軍 {BATTLE_SOL:1, 6, RIGHT}→{UNIT_SOLDIER:(ARG:2):(ARG:3), 6, RIGHT}
ENDIF

;好感度・敵対値の変動
IF ARG:2 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:2) == AI_外交
	CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, -3, 15)
ELSEIF ARG:2 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:2) == AI_好戦
	CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, -8, 25)
ELSE
	CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, -5, 20)
ENDIF

IF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_外交
	CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, -3, 15)
ELSEIF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_好戦
	CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, -8, 25)
ELSE
	CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, -5, 20)
ENDIF

;攻撃側部隊の兵数が0
IF UNIT_SOLDIER:(ARG:0):(ARG:1) <= 0
	PRINTFORML %BATTLE_NAME:0%軍は潰走しました
	IF ARG:2 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:2) == AI_外交
		CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, -5, 40)
	ELSEIF ARG:2 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:2) == AI_好戦
		CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, -15, 60)
	ELSE
		CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, -10, 50)
	ENDIF
	;将の捕獲
	CALL UNIT_BREAK_CAPTURE(ARG:2, ARG:3, ARG:0, ARG:1)
	;壊滅した部隊の後始末
	CALL CLEAR_UNIT(ARG:0, ARG:1)
ELSE
	UNIT_FBATTLE:(ARG:2):(ARG:3) = 1
ENDIF

;防御側部隊の兵数が0
IF UNIT_SOLDIER:(ARG:2):(ARG:3) <= 0
	PRINTFORML %BATTLE_NAME:1%軍は潰走しました
	IF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_外交
		CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, -5, 40)
	ELSEIF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_好戦
		CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, -15, 60)
	ELSE
		CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, -10, 50)
	ENDIF
	;将の捕獲
	CALL UNIT_BREAK_CAPTURE(ARG:0, ARG:1, ARG:2, ARG:3)
	;壊滅した部隊の後始末
	CALL CLEAR_UNIT(ARG:2, ARG:3)
ELSE
	UNIT_FBATTLE:(ARG:0):(ARG:1) = 1
ENDIF

;自勢力のみウェイト
IF (ARG:0 == CFLAG:MASTER:1 || ARG:2 == CFLAG:MASTER:1 || FLAG:1) && !LOCAL:9 && CFLAG:MASTER:9 == 0
	WAIT
ENDIF

;-------------------------------------------------
;侵攻部隊(ARG:0勢力、ARG:1部隊) vs 防衛部隊(都市ARG:2)の戦闘
;-------------------------------------------------
@BATTLE_UNIT_TO_CITY(ARG:0, ARG:1, ARG:2)
LOCAL:9 = 0

LOCAL:6 = CITY_OWNER:(ARG:2)
BATTLE_NAME:0 = %NAME:GET_COUNTRY_BOSS(ARG:0)%

LOCAL:5 = GET_COUNTRY_BOSS(CITY_OWNER:(ARG:2))
IF LOCAL:5 >= 0
	BATTLE_NAME:1 = %NAME:(LOCAL:5)%
ELSE
	BATTLE_NAME:1 = %GET_CITYNAME(ARG:2)%
ENDIF

PRINTFORM %BATTLE_NAME:0%軍
LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:0, ARG:1)%
IF LOCALS:2 != ""
	PRINTFORM の<%LOCALS:2%>部隊
ENDIF
PRINT は
IF LOCAL:5 >= 0
	PRINTFORM %BATTLE_NAME:1%の所領であ
	LOCALS:2 = %GET_CITY_COMMANDER_NAME(ARG:2)%
	IF LOCALS:2 != ""
		PRINTFORM り<%LOCALS:2%>の守る
	ELSE
		PRINT る
	ENDIF
ENDIF
PRINT 
PRINTFORML %GET_CITYNAME(ARG:2)%の防衛部隊に攻撃を仕掛けました
;その都市がその勢力にとって最後の1都市なら、全兵力を傾ける
IF LOCAL:5 >= 0 && GET_OWN_CITY(CITY_OWNER:(ARG:2)) == 1
	PRINTFORML %GET_CITYNAME(ARG:2)%は%BATTLE_NAME:1%にとっての最後の所領です
	SETCOLOR COLOR_CYAN
	PRINTFORML %BATTLE_NAME:1%は%GET_CITYNAME(ARG:2)%防衛に全兵力を注いだ！
	RESETCOLOR
	CITY_SOLDIER:(ARG:2) += COUNTRY_SOLDIER:(CITY_OWNER:(ARG:2))
	COUNTRY_SOLDIER:(CITY_OWNER:(ARG:2)) = 0
ENDIF
;片方が主人公勢力なら口上表示
IF ARG:0 == CFLAG:MASTER:1 || CITY_OWNER:(ARG:2) == CFLAG:MASTER:1
	FOR LOCAL:0, 0, 3
		LOCAL:1 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 301)
		ENDIF
	NEXT
	FOR LOCAL:0, 0, 2
		LOCAL:1 = GET_CITY_COMMANDER(ARG:2, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 302)
		ENDIF
	NEXT
ENDIF

;■戦闘の計算
CALL BATTLE_CALC(ARG:0, ARG:1, ARG:2, -1)

;■ダメージの適用
UNIT_SOLDIER:(ARG:0):(ARG:1) -= BATTLE_DMG:0
CITY_SOLDIER:(ARG:2) -= BATTLE_DMG:1

;自勢力のみ詳細を表示(ただし捕虜になっていると見られない)
IF FLAG:1 || (CFLAG:MASTER:1 >= 1 && CFLAG:MASTER:9 == 0 && (ARG:0 == CFLAG:MASTER:1 || LOCAL:6 == CFLAG:MASTER:1))
	PRINTFORML %BATTLE_NAME:0, 10, RIGHT%軍 {BATTLE_SOL:0, 6, RIGHT}→{UNIT_SOLDIER:(ARG:0):(ARG:1), 6, RIGHT}
	PRINTFORML %BATTLE_NAME:1, 10, RIGHT%軍 {BATTLE_SOL:1, 6, RIGHT}→{CITY_SOLDIER:(ARG:2), 6, RIGHT}
ENDIF

;都市の兵数が0
IF CITY_SOLDIER:(ARG:2) <= 0
	CITY_IS_ATTACKED:(ARG:2) = 0

	;都市占領による略奪
	;LOCAL 10:その都市に備蓄されていた財産
	;無所属の都市は経済規模の30%を備蓄しているとみなす
	IF LOCAL:6 > 0
		LOCAL:10 = MONEY:(LOCAL:6) * CITY_ECONOMY:(ARG:2) / GET_SUM_ECONOMY(LOCAL:6)
		MONEY:(LOCAL:6) -= LOCAL:10
		MONEY:(ARG:0) += LOCAL:10 * 90 / 100
	ELSE
		LOCAL:10 = CITY_ECONOMY:(ARG:2) * 30 / (100 * 10)
		MONEY:(ARG:0) += LOCAL:10 * 90 / 100
	ENDIF
	;DEBUGPRINTFORML {DAY,3}【略奪】\@LOCAL:6 ? %NAME:(GET_COUNTRY_BOSS(LOCAL:6))% # 無所属\@＞%NAME:(GET_COUNTRY_BOSS(ARG:0))%:{LOCAL:10}

	PRINTFORML %BATTLE_NAME:0%軍が%GET_CITYNAME(ARG:2)%を占領しました
	CITY_OWNER:(ARG:2) = ARG:0
	CITY_COMMANDER:(ARG:2) = 0


	;都市の経済変動
	IF CITY_ECONOMY_LIMIT:(ARG:2) > 800
		CITY_ECONOMY_LIMIT:(ARG:2) = MAX(CITY_ECONOMY_LIMIT:(ARG:2) * 93 / 100, 800)
	ENDIF
	CITY_ECONOMY:(ARG:2) = MIN(CITY_ECONOMY:(ARG:2), CITY_ECONOMY_LIMIT:(ARG:2))
	IF CITY_ECONOMY:(ARG:2) > 500
		CITY_ECONOMY:(ARG:2) = MAX(CITY_ECONOMY:(ARG:2) * 80 / 100, 500)
	ENDIF

	;都市占領フラグのセット
	UNIT_CAPTURE_CITY:(ARG:0):(ARG:1) = 1

	;部隊壊滅時の士官の捕獲
	CALL UNIT_BREAK_CAPTURE(ARG:0, ARG:1, ARG:2, -1)

	;共感値・評価値の変動
	IF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_外交
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, -5, 80)
	ELSEIF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_好戦
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, -15, 120)
	ELSE
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, -10, 100)
	ENDIF
	
	;勢力の滅亡判定
	IF IS_COUNTRY(LOCAL:6) && GET_OWN_CITY(LOCAL:6) <= 0
		IF CFLAG:MASTER:1 == LOCAL:6 && CFLAG:(LOCAL:0):9 != 0
			SETCOLOR COLOR_ALERT
			PRINTFORML %NAME:MASTER%の仕えていた%BATTLE_NAME:1%勢力は滅亡してしまいました…
			RESETCOLOR
		ELSE
			SETCOLOR COLOR_ALERT
			PRINTFORML %BATTLE_NAME:1%勢力は滅亡しました
			RESETCOLOR
		ENDIF

		;敗将の処理
		CALL LOSERS_ACTION(LOCAL:6, ARG:0)

		IF ARG:0 == CFLAG:MASTER:1
			LOCAL:9 = 1
		ENDIF

		;後始末
		CALL DESTROY_COUNTRY(LOCAL:6)
	ENDIF

;都市が占拠されなかった場合
ELSE
	CITY_IS_ATTACKED:(ARG:2) ++

	;侵攻部隊の兵数が0
	IF UNIT_SOLDIER:(ARG:0):(ARG:1) <= 0
		PRINTFORML %BATTLE_NAME:0%軍は潰走しました

		;都市所有勢力が居た場合のみ
		IF LOCAL:5 >= 0
			;部隊壊滅時の士官の捕獲
			CALL UNIT_BREAK_CAPTURE(ARG:2, -1, ARG:0, ARG:1)
		ENDIF

		;壊滅した部隊の後始末
		CALL CLEAR_UNIT(ARG:0, ARG:1)

	ELSE
		;共感値・評価値の変動
	IF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_外交
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, -3, 40)
	ELSEIF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_好戦
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, -8, 60)
	ELSE
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, -5, 50)
	ENDIF
	ENDIF
ENDIF

;自勢力のみウェイト
IF (ARG:0 == CFLAG:MASTER:1 || LOCAL:6 == CFLAG:MASTER:1 || FLAG:1) && !LOCAL:9 && CFLAG:MASTER:9 == 0
	WAIT
ENDIF

;-------------------------------------------------
;戦闘の共通計算
;引数 0:攻撃側勢力 1:攻撃側部隊 2:対象勢力 3:対象部隊 ※ARG:3が0未満の場合、防衛部隊とみなし、ARG:2を都市番号として使用
;-------------------------------------------------
@BATTLE_CALC(ARG:0, ARG:1, ARG:2, ARG:3)
;計略判定の基準値
#DIM SCHEME_BASE, 2

;戦闘関連の変数の初期化
VARSET BATTLE_RATE_DMG, 0
VARSET BATTLE_RATE_ATC, 0
VARSET BATTLE_RATE_GRD, 0
VARSET BATTLE_RATE_GRD_B, 0
VARSET SCHEME_BASE, 3200
VARSET BATTLE_FORCE_SCHEME, -1
VARSET SCHEME_BASE, ABL_50_POWER

;優先して発動する特殊計略の処理
CALL BATTLE_SP_SKILL(0, 1, ARG:0, ARG:1, ARG:2, ARG:3)
CALL BATTLE_SP_SKILL(1, 0, ARG:2, ARG:3, ARG:0, ARG:1)

LOCAL:5 = 1
BATTLE_SOL:0 = UNIT_SOLDIER:(ARG:0):(ARG:1)
BATTLE_ATC:0 = UNIT_ATTACK_LEVEL(ARG:0, ARG:1)
BATTLE_DEF:0 = UNIT_DEFENSE_LEVEL(ARG:0, ARG:1)
BATTLE_INT:0 = UNIT_INTELLIGENCE_LEVEL(ARG:0, ARG:1)
BATTLE_MAG:0 = UNIT_MAGIC_LEVEL(ARG:0, ARG:1)
BATTLE_F_UNIT:0 = 1
IF ARG:0 == CFLAG:MASTER:1
	LOCAL:5 = 0
ENDIF

IF ARG:3 >= 0
	BATTLE_SOL:1 = UNIT_SOLDIER:(ARG:2):(ARG:3)
	BATTLE_ATC:1 = UNIT_ATTACK_LEVEL(ARG:2, ARG:3)
	BATTLE_DEF:1 = UNIT_DEFENSE_LEVEL(ARG:2, ARG:3)
	BATTLE_INT:1 = UNIT_INTELLIGENCE_LEVEL(ARG:2, ARG:3)
	BATTLE_MAG:1 = UNIT_MAGIC_LEVEL(ARG:2, ARG:3)
	BATTLE_F_UNIT:1 = 1
	IF ARG:2 == CFLAG:MASTER:1
		LOCAL:5 = 0
	ENDIF
ELSE
	BATTLE_SOL:1 = CITY_SOLDIER:(ARG:2)
	BATTLE_ATC:1 = CITY_ATTACK_LEVEL (ARG:2)
	BATTLE_DEF:1 = CITY_DEFENSE_LEVEL(ARG:2)
	BATTLE_INT:1 = CITY_INTELLIGENCE_LEVEL(ARG:2)
	BATTLE_MAG:1 = CITY_MAGIC_LEVEL(ARG:2)
	BATTLE_F_UNIT:1 = 0
	IF CITY_OWNER:(ARG:2) == CFLAG:MASTER:1
		LOCAL:5 = 0
	ENDIF
ENDIF

;基本値に影響を与える素質発動処理はここに
CALL BATTLE_BASE_SKILL(0, ARG:0, ARG:1)
IF BATTLE_F_UNIT:1 == 1
	CALL BATTLE_BASE_SKILL(1, ARG:2, ARG:3)
ELSE
	CALL BATTLE_BASE_SKILL(1, ARG:2, -1, 1)
ENDIF
;★
;PRINTFORML 攻撃0={BATTLE_ATC:0, 8}   防御0={BATTLE_DEF:0, 8}
;PRINTFORMW 攻撃1={BATTLE_ATC:1, 8}   防御1={BATTLE_DEF:1, 8}

;戦力比計算
;兵数の多い側に兵力比の平方根×10/30/100％のボーナス
;とりあえず攻撃力と防御力のみ。知力や妖術が兵力で伸びてもどうかと思いますし
;兵力が同じなら？両軍にボーナスね
;LOCAL 30:攻撃側の兵数比 31:防御側の兵数比 32:補正倍率
LOCAL:30 = BATTLE_SOL:0 / MAX(BATTLE_SOL:1, 1)
LOCAL:31 = BATTLE_SOL:1 / MAX(BATTLE_SOL:0, 1)

;倍率設定
SELECTCASE CONFIG:312
CASE 1
	LOCAL:32 = 1
CASE 2
	LOCAL:32 = 3
CASE 3
	LOCAL:32 = 10
CASEELSE
	LOCAL:32 = 0

ENDSELECT

;補正計算。MAXはセイフティネット（元の値を割りこまないように）です
	BATTLE_ATC:0 = BATTLE_ATC:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10
	BATTLE_DEF:0 = BATTLE_DEF:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10
;	BATTLE_INT:0 = BATTLE_INT:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10
;	BATTLE_MAG:0 = BATTLE_MAG:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10

	BATTLE_ATC:1 = BATTLE_ATC:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10
	BATTLE_DEF:1 = BATTLE_DEF:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10
;	BATTLE_INT:1 = BATTLE_INT:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10
;	BATTLE_MAG:1 = BATTLE_MAG:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10

;敵軍補正
;主人公の所属する勢力が敵対勢力と戦う際、敵側に補正をかける。
;LOCAL 32:補正倍率(×10%の補正)

SELECTCASE CONFIG:314
;EASY、許されるのは小学生まで
CASE 0
	LOCAL:32 = 5
;NORMAL、変更なし
CASE 1
	LOCAL:32 = 10
;HARD、ちょっと大変
CASE 2
	LOCAL:32 = 25
;LUNATIC、仲間の力を信じましょう
CASE 3
	LOCAL:32 = 50
;EXTRA、この設定を変えずにプレイしてクリアできるのか、当方は関知いたしません
CASE 4
	LOCAL:32 = 150
;EXTRA+、死ぬがよい
CASE 5
	LOCAL:32 = 300
;その他、念のため
CASEELSE
	LOCAL:32 = 10
ENDSELECT

;共に主人公の所属しない勢力であれば補正は計算しない
SIF NOSAMES(CFLAG:MASTER:1, ARG:0, ARG:3 < 0 ? CITY_OWNER:(ARG:2) # ARG:2)
	LOCAL:32 = 10

;補正計算
IF ARG:3 < 0 ? CITY_OWNER:(ARG:2) == CFLAG:MASTER:1 # ARG:2 == CFLAG:MASTER:1
	BATTLE_ATC:0 = BATTLE_ATC:0 * LOCAL:32 / 10
	BATTLE_DEF:0 = BATTLE_DEF:0 * LOCAL:32 / 10
	BATTLE_INT:0 = BATTLE_INT:0 * LOCAL:32 / 10
	BATTLE_MAG:0 = BATTLE_MAG:0 * LOCAL:32 / 10
	SCHEME_BASE:0 = SCHEME_BASE:0 * LOCAL:32 / 10
ELSEIF ARG:0 == CFLAG:MASTER:1
	BATTLE_ATC:1 = BATTLE_ATC:1 * LOCAL:32 / 10
	BATTLE_DEF:1 = BATTLE_DEF:1 * LOCAL:32 / 10
	BATTLE_INT:1 = BATTLE_INT:1 * LOCAL:32 / 10
	BATTLE_MAG:1 = BATTLE_MAG:1 * LOCAL:32 / 10
	SCHEME_BASE:1 = SCHEME_BASE:1 * LOCAL:32 / 10
ENDIF

;疲労度によるペナルティ
;弱めの場合はカウント3毎に、強めの場合は2毎に0.95倍(* 19 / 20)します
;LOCAL 33:ペナルティの重さ 34:攻撃防御側のカウンタ用 35:ペナルティ処理カウンタ

;ペナルティ比重の設定
SELECTCASE CONFIG:313
CASE 1,3
	LOCAL:33 = 3
CASE 2,4
	LOCAL:33 = 2
CASEELSE
	LOCAL:33 = 9999
ENDSELECT

IF UNIT_TIRED_COUNT:(ARG:0):(ARG:1)
	FOR LOCAL:35 , 0 , UNIT_TIRED_COUNT:(ARG:0):(ARG:1) / LOCAL:33
		TIMES BATTLE_ATC:0 , 0.95
		TIMES BATTLE_DEF:0 , 0.95
		TIMES BATTLE_INT:0 , 0.95
		TIMES BATTLE_MAG:0 , 0.95
		TIMES SCHEME_BASE:0, 0.95

	NEXT
ENDIF
IF ARG:3 > 0 && UNIT_TIRED_COUNT:(ARG:2):(ARG:3)
	FOR LOCAL:35 , 0 , UNIT_TIRED_COUNT:(ARG:2):(ARG:3) / LOCAL:33
		TIMES BATTLE_ATC:1 , 0.95
		TIMES BATTLE_DEF:1 , 0.95
		TIMES BATTLE_INT:1 , 0.95
		TIMES BATTLE_MAG:1 , 0.95
		TIMES SCHEME_BASE:1, 0.95
	NEXT
ELSEIF CITY_IS_ATTACKED:(ARG:2)
	FOR LOCAL:35 , 0 , CITY_IS_ATTACKED:(ARG:2) / LOCAL:33
		TIMES BATTLE_ATC:1 , 0.95
		TIMES BATTLE_DEF:1 , 0.95
		TIMES BATTLE_INT:1 , 0.95
		TIMES BATTLE_MAG:1 , 0.95
		TIMES SCHEME_BASE:1, 0.95
	NEXT

ENDIF

IF RAND:(BATTLE_INT:0 + BATTLE_INT:1) >= (SCHEME_BASE:0 + SCHEME_BASE:1) || BATTLE_FORCE_SCHEME != -1
	;BATTLE_FORCE_SCHEMEによる強制策略
	IF BATTLE_FORCE_SCHEME == 0
		CALL TRY_SCHEME(0, 1, ARG:0, ARG:1, ARG:2, ARG:3)
	ELSEIF BATTLE_FORCE_SCHEME == 1
		CALL TRY_SCHEME(1, 0, ARG:2, ARG:3, ARG:0, ARG:1)
	ELSEIF RAND:(BATTLE_INT:0 + BATTLE_INT:1 - (SCHEME_BASE:0 + SCHEME_BASE:1)) < BATTLE_INT:0 - SCHEME_BASE:0
		;計略の発動
		CALL TRY_SCHEME(0, 1, ARG:0, ARG:1, ARG:2, ARG:3)
	;ARG:2勢力部隊の計略発動
	ELSE
		;計略の発動
		CALL TRY_SCHEME(1, 0, ARG:2, ARG:3, ARG:0, ARG:1)
	ENDIF
ENDIF

;■ダメージの計算
BATTLE_RATE_DMG:0 *= 10
BATTLE_RATE_DMG:1 *= 10

;妖術パワーによる割合ダメージの追加
BATTLE_RATE_DMG:0 += POWER_0625(BATTLE_MAG:0 * 10000 / MAX(BATTLE_DEF:1, 1))
BATTLE_RATE_DMG:1 += POWER_0625(BATTLE_MAG:1 * 10000 / MAX(BATTLE_DEF:0, 1))

;割合ダメージの処理
LOCAL:10 = BATTLE_SOL:0 * MAX(0, 1000 - BATTLE_RATE_DMG:1) * 8 / 10
LOCAL:11 = BATTLE_SOL:1 * MAX(0, 1000 - BATTLE_RATE_DMG:0) * 8 / 10

;基本部分の計算
LOCAL:12 = POWER_0625(LOCAL:11 * BATTLE_ATC:1 / MAX(BATTLE_DEF:0, 1)) * (RAND:401 + 800) / 4
LOCAL:13 = POWER_0625(LOCAL:10 * BATTLE_ATC:0 / MAX(BATTLE_DEF:1, 1)) * (RAND:401 + 800) / 4

;与被害倍率と被害軽減率の適用
LOCAL:12 = LOCAL:12 * (BATTLE_RATE_ATC:1 + 100) / 100 * MAX(0, 100 - BATTLE_RATE_GRD:0) / 100000
LOCAL:13 = LOCAL:13 * (BATTLE_RATE_ATC:0 + 100) / 100 * MAX(0, 100 - BATTLE_RATE_GRD:1) / 100000

;ダメージ変数に割合ダメージ分を追加
LOCAL:12 += BATTLE_SOL:0 * BATTLE_RATE_DMG:1 / 1000
LOCAL:13 += BATTLE_SOL:1 * BATTLE_RATE_DMG:0 / 1000

;追加された被害軽減率の適用
LOCAL:12 = LOCAL:12 * (100 - BATTLE_RATE_GRD_B:0) / 100
LOCAL:13 = LOCAL:13 * (100 - BATTLE_RATE_GRD_B:1) / 100

;★
;PRINTFORMW 割合ダメージ0:{BATTLE_RATE_DMG:0}  ダメージ{LOCAL:12}  妖術評価{BATTLE_MAG:0}  防御評価{BATTLE_DEF:0}
;PRINTFORMW 割合ダメージ1:{BATTLE_RATE_DMG:1}  ダメージ{LOCAL:13}  妖術評価{BATTLE_MAG:1}  防御評価{BATTLE_DEF:1}

;どちらかの兵数が0未満になった場合、過剰ダメージの割合だけ相手の被害を軽減
IF BATTLE_SOL:0 < LOCAL:12
	LOCAL:20 = BATTLE_SOL:0 * 10000 / LOCAL:12
	LOCAL:12 = BATTLE_SOL:0
	LOCAL:13 = LOCAL:13 * LOCAL:20 / 10000
ENDIF
IF BATTLE_SOL:1 < LOCAL:13
	LOCAL:20 = BATTLE_SOL:1 * 10000 / LOCAL:13
	LOCAL:13 = BATTLE_SOL:1
	LOCAL:12 = LOCAL:12 * LOCAL:20 / 10000
ENDIF

;疲労度の算出処理
;戦闘数カウント時、戦闘毎に3加算（戦うたびにペナルティは乗る）
;武将数カウント時、相手側の武将数+1が加算値となる（守将は二人分）
;LOCAL 36:武将カウンタ 37:攻撃側の武将数 38:防御側の武将数
LOCAL:37 = 1
LOCAL:38 = 1

SELECTCASE CONFIG:313
CASE 1 , 2
	UNIT_TIRED_COUNT:(ARG:0):(ARG:1) += 4
	IF ARG:3 > 0
		UNIT_TIRED_COUNT:(ARG:2):(ARG:3) += 4
	ELSE
		;防衛成功処理で+1しているのでここでは+3
		CITY_IS_ATTACKED:(ARG:2) += 3
	ENDIF
CASE 3 , 4
	FOR LOCAL:36 , 0 , 3
		SIF GET_UNIT_COMMANDER(ARG:0 , ARG:1 , LOCAL:36) > 0
			LOCAL:37 ++
		SIF GET_UNIT_COMMANDER(ARG:2 , ARG:3 , LOCAL:36) > 0
			LOCAL:38 ++
		IF ARG:3 < 0 && LOCAL:36 < 2
			SIF GET_CITY_COMMANDER(ARG:2 , LOCAL:36) > 0
				LOCAL:38 += 2
		ENDIF
	NEXT
	UNIT_TIRED_COUNT:(ARG:0):(ARG:1) += LOCAL:38
	IF ARG:3 > 0
		UNIT_TIRED_COUNT:(ARG:2):(ARG:3) += LOCAL:37 
	ELSE
		CITY_IS_ATTACKED:(ARG:2) += LOCAL:37
	ENDIF
CASEELSE
	UNIT_TIRED_COUNT:(ARG:0):(ARG:1) = 0
	SIF ARG:3 > 0
	UNIT_TIRED_COUNT:(ARG:2):(ARG:3) = 0
ENDSELECT


BATTLE_DMG:0 = LOCAL:12
BATTLE_DMG:1 = LOCAL:13

;-------------------------------------------------
;優先して発動する特殊計略の処理
;引数0～1には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=受動側
;引数 2:発動側勢力 3:発動側部隊 4:対象勢力 5:対象部隊
;※ARG:3、ARG:5が0未満の場合は防衛部隊とみなし、それぞれARG:3、ARG:5を都市番号として使用
;-------------------------------------------------
@BATTLE_SP_SKILL(ARG:0, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5)
#DIM 発動側, 3
#DIM 対象側, 3
;各部隊の将を取得(発動側 20～22、対象 30～32)
VARSET 発動側, -1
VARSET 対象側, -1
IF ARG:3 >= 0
	FOR LOCAL:0, 0, 3
		発動側:(LOCAL:0) = GET_UNIT_COMMANDER(ARG:2, ARG:3, LOCAL:0)
	NEXT
ELSE
	FOR LOCAL:0, 0, 2
		発動側:(LOCAL:0) = GET_CITY_COMMANDER(ARG:2, LOCAL:0)
	NEXT
ENDIF
IF ARG:5 >= 0
	FOR LOCAL:0, 0, 3
		対象側:(LOCAL:0) = GET_UNIT_COMMANDER(ARG:4, ARG:5, LOCAL:0)
	NEXT
ELSE
	FOR LOCAL:0, 0, 2
		対象側:(LOCAL:0) = GET_CITY_COMMANDER(ARG:4, LOCAL:0)
	NEXT
ENDIF

;[五斗米道]による特殊計略
FOR LOCAL:0, 0, 3
	LOCAL:2 = 発動側:(LOCAL:0)
	IF LOCAL:2 >= 0 && TALENT:(LOCAL:2):五斗米道
		SETCOLOR COLOR_ALERT
		PRINTFORML %NAME:(LOCAL:2)%は<<五斗米道>>の力で自軍の被害を軽減しました！
		BATTLE_RATE_GRD:(ARG:0) = 70
		RESETCOLOR
		BREAK
	ENDIF
NEXT

;[現代兵術]による特殊計略
FOR LOCAL:0, 0, 3
	LOCAL:2 = 発動側:(LOCAL:0)
	IF LOCAL:2 >= 0 && TALENT:(LOCAL:2):現代兵術
		LOCAL:5 = 0
		LOCAL:6 = -1
		LOCAL:7 = -1
		FOR LOCAL:0, 30, 33
			LOCAL:4 = LOCAL:(LOCAL:0)
			IF LOCAL:4 >= 0
				LOCAL:5 ++
			ENDIF
		NEXT
		IF LOCAL:5 >= 1
			LOCAL:8 = RAND:(LOCAL:5)
			LOCAL:6 = LOCAL:(LOCAL:8 + 30)

			IF LOCAL:6 >= 0
				IF ARG:5 >= 0
					LOCAL:4 = ARG:4
				ELSE
					LOCAL:4 = CITY_OWNER:(ARG:4)
				ENDIF
				SETCOLOR 0xFF80C0
				PRINTFORML %NAME:(LOCAL:2)%は%NAME:GET_COUNTRY_BOSS(LOCAL:4)%軍に桃色の霧を吹き掛けた
				FOR LOCAL:0, 30, 33
					LOCAL:4 = LOCAL:(LOCAL:0)
					IF LOCAL:4 >= 0 && (LOCAL:4 == LOCAL:6 || TALENT:(LOCAL:6):研究用奴隷の烙印)
						PRINTFORML %NAME:(LOCAL:4)%は力が抜けてしまった！
						;パワーが1になるフラグ
						CFLAG:(LOCAL:4):34 = 1
					ENDIF
				NEXT
				WAIT
				RESETCOLOR
			ENDIF
		ENDIF
	ENDIF
NEXT

;-------------------------------------------------
;優先して発動する特殊計略の処理
;引数0～1には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=受動側
;※都市フラグが勃っている防衛部隊とみなし、勢力を都市番号として使用
;-------------------------------------------------
@BATTLE_BASE_SKILL(発動側, 勢力, 部隊, 都市フラグ=0)
#DIM 勢力
#DIM 部隊
#DIM 発動側
#DIM 都市フラグ
#DIM 武将, 3
#DIM 受動側
VARSET 武将, -1
IF 発動側 == 0
	受動側 = 1
ELSE
	受動側 = 0
ENDIF
IF !都市フラグ
	FOR LOCAL:0, 0, 3
		武将:(LOCAL) = GET_UNIT_COMMANDER(勢力, 部隊, LOCAL)
	NEXT
ELSE
	FOR LOCAL:0, 0, 2
		武将:(LOCAL) = GET_CITY_COMMANDER(勢力, LOCAL)
	NEXT
ENDIF

SETCOLOR COLOR_CAUTION
FOR LOCAL:0, 0, 3
	IF 武将:LOCAL >= 0
		IF TALENT:(武将:LOCAL):三種の神器 && 20 > RAND:100
			SELECTCASE RAND:3
				CASE 0
					PRINTFORML %ANAME(武将:LOCAL)%の三種の神器・剣！
					PRINTFORML 部隊の攻撃力が上昇する！
					TIMES BATTLE_ATC:発動側, 1.3
				CASE 1
					PRINTFORML %ANAME(武将:LOCAL)%の三種の神器・玉！
					PRINTFORML 部隊の防御力が上昇する！
					TIMES BATTLE_DEF:発動側, 1.3
				CASE 2
					PRINTFORML %ANAME(武将:LOCAL)%の三種の神器・鏡！
					PRINTFORML 部隊が割合ダメージを与える！
					BATTLE_RATE_DMG:発動側 = 10
			ENDSELECT
		ENDIF
		;策士。計略が発動する。
		;相手のBATTLE_INTの1.3倍がこちらのBATTLE_INTより高い場合、そちらを利用する（反計を防止）
		IF TALENT:(武将:LOCAL):策士 && 10 > RAND:100
			PRINTFORML %ANAME(武将:LOCAL)%は策を張り巡らせる……！
			BATTLE_INT:発動側 = MAX(BATTLE_INT:発動側, BATTLE_INT:受動側 * 13 / 10)
			BATTLE_FORCE_SCHEME = 発動側
		ENDIF
		;明察。反計の確定発動。
		;具体的には自軍のBATTLE_INTを敵軍の4倍にしつつ（反計の発動を確実にしつつ）、相手側にFORCE_SCHEMEを入れる
		IF TALENT:(武将:LOCAL):明察 && 7 > RAND:100
			PRINTFORML %ANAME(武将:LOCAL)%は敵部隊の計略を見透かした！
			BATTLE_INT:発動側 = BATTLE_INT:受動側 * 4
			BATTLE_FORCE_SCHEME = 受動側
			
		ENDIF
		;ステゴロ。両軍割合ダメージ。一応自軍に有利。
		IF TALENT:(武将:LOCAL):ステゴロ && 30 > RAND:100
			PRINTFORML %ANAME(武将:LOCAL)%は大暴れしている！
			BATTLE_RATE_DMG:発動側 += RAND(10,15)
			BATTLE_RATE_DMG:受動側 += RAND(5,10)
		ENDIF
		;突貫。攻撃力が増えるが防御力が減る。
		IF TALENT:(武将:LOCAL):突貫 && 10 > RAND:100
			PRINTFORML %ANAME(武将:LOCAL)%は捨て身の陣をしいた！
			TIMES BATTLE_ATC:発動側, 1.2
			TIMES BATTLE_DEF:発動側, 0.7
		ENDIF
		;下克上等。彼我の実力を入れ替える。相手より弱ければ弱いほど発動率は高まる。
		IF TALENT:(武将:LOCAL):下克上等 && BATTLE_F_UNIT:受動側
			LOCAL:1 = 100 - (BATTLE_ATC:発動側 + BATTLE_DEF:発動側 + BATTLE_INT:発動側 + BATTLE_MAG:発動側 + BATTLE_SOL:発動側) * 100  / (BATTLE_ATC:受動側 + BATTLE_DEF:受動側 + BATTLE_INT:受動側 + BATTLE_MAG:受動側 + BATTLE_SOL:受動側)
			IF LOCAL:1 > RAND:100
				PRINTFORML %ANAME(武将:LOCAL)%の下克上等！
				PRINTFORML 両者の実力が入れ替わる！
				SWAP BATTLE_ATC:0, BATTLE_ATC:1
				SWAP BATTLE_DEF:0, BATTLE_DEF:1
				SWAP BATTLE_INT:0, BATTLE_INT:1
				SWAP BATTLE_MAG:0, BATTLE_MAG:1
			ENDIF
		ENDIF
		;魔力転換。攻撃力の2割を割合ダメージ基礎値とする。
		IF TALENT:(武将:LOCAL):魔力転換 && 20 > RAND:100
			PRINTFORML %ANAME(武将:LOCAL)%は攻撃力を魔力に転換した！
			BATTLE_MAG:発動側 += BATTLE_ATC:発動側 * 2 / 10
			BATTLE_ATC:発動側 = BATTLE_ATC:発動側 * 8 / 10
		ENDIF
		IF TALENT:(武将:LOCAL):バンドガール && 5 > RAND:100
			PRINTFORML %ANAME(武将:LOCAL)%は楽器演奏で士気を高めた！
			IF 都市フラグ
				BATTLE_ATC:発動側 = MAX(BATTLE_ATC:発動側, ABL_50_POWER) * CITY_SUPPORT_LEVEL(勢力) / 1000
				BATTLE_DEF:発動側 = MAX(BATTLE_DEF:発動側, ABL_50_POWER) * CITY_SUPPORT_LEVEL(勢力) / 1000
				BATTLE_INT:発動側 = MAX(BATTLE_INT:発動側, ABL_50_POWER) * CITY_SUPPORT_LEVEL(勢力) / 1000
			ELSE
				BATTLE_ATC:発動側 = MAX(BATTLE_ATC:発動側, ABL_50_POWER) * UNIT_SUPPORT_LEVEL(勢力, 部隊) / 1000
				BATTLE_DEF:発動側 = MAX(BATTLE_DEF:発動側, ABL_50_POWER) * UNIT_SUPPORT_LEVEL(勢力, 部隊) / 1000
				BATTLE_INT:発動側 = MAX(BATTLE_INT:発動側, ABL_50_POWER) * UNIT_SUPPORT_LEVEL(勢力, 部隊) / 1000
			ENDIF
		ENDIF
	ENDIF
NEXT
RESETCOLOR
;-------------------------------------------------
;計略の発動
;引数0～1には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=受動側
;引数 2:発動側勢力 3:発動側部隊 4:対象勢力 5:対象部隊
;-------------------------------------------------
@TRY_SCHEME(発動側, 受動側, 発動勢力, 発動部隊, 対象勢力, 対象部隊)
#DIM 発動側
#DIM 受動側
#DIM 発動勢力
#DIM 発動部隊
#DIM 対象勢力
#DIM 対象部隊
SETCOLOR COLOR_CYAN
PRINTFORML %BATTLE_NAME:(発動側)%軍の計略発動！

;対象勢力勢力部隊の《反計》判定
;・受動側知略パワーが発動側知略パワーの半分を超えている
;・「受動側知略パワー＋受動側知略パワー以下の乱数」が「発動側知略パワーの2倍＋発動側の知略パワーの2倍以下の乱数」以上であること
;の2つの条件を満たせば受動側が「反計」計略を発動した扱いになる
;つまり、受動側知略パワーが発動側知略パワーの4倍以上であれば確定で反計が成立する
IF RAND:(BATTLE_INT:(受動側)) + BATTLE_INT:(受動側) >= RAND:(BATTLE_INT:(発動側) * 2) + BATTLE_INT:(発動側) * 2
	PRINTFORM %BATTLE_NAME:(発動側)%軍は
	SETCOLOR COLOR_ALERT
	PRINT 《反計》
	RESETCOLOR
	PRINTDATAL
		DATAFORM %BATTLE_NAME:(受動側)%軍は計略を先読みし%BATTLE_NAME:(発動側)%軍に大きな被害を与えた
		DATAFORM %BATTLE_NAME:(受動側)%軍は相手の動きを読みきり%BATTLE_NAME:(発動側)%軍の計略の隙を突いた
		DATAFORM %BATTLE_NAME:(受動側)%軍は%BATTLE_NAME:(発動側)%軍の稚拙な計略を逆に利用して被害を与えた
		DATAFORM %BATTLE_NAME:(受動側)%は%BATTLE_NAME:(発動側)%軍に送った諜報の情報をもとに、伏兵を使い被害を与えた
		DATAFORM %BATTLE_NAME:(発動側)%軍の策は、%BATTLE_NAME:(発動側)%軍自身に牙をむいた
		DATAFORM %BATTLE_NAME:(発動側)%は策を逆に利用され、手ひどい打撃を受けた
		DATAFORM %BATTLE_NAME:(発動側)%の策は%BATTLE_NAME:(受動側)%軍に読み切られていた
	ENDDATA
	;反計実行者の決定及び口上
	IF GROUPMATCH(CFLAG:MASTER:1, 発動勢力, 対象勢力)
		CALL WHOES_SCHEME(受動側, 対象勢力, 対象部隊, 51)
		IF RESULT >= 0
			RESETCOLOR
			;口上の表示
			CALL KOJO_EVENT(RESULT, 311)
		ENDIF
	ELSEIF GROUPMATCH(CFLAG:MASTER:1, 受動側, 発動部隊)
		CALL WHOES_SCHEME(受動側, 対象勢力, 対象部隊, 51)
		IF RESULT >= 0
			RESETCOLOR
			;口上の表示
			CALL KOJO_EVENT(RESULT, 314)
		ENDIF
	ENDIF

	BATTLE_RATE_DMG:(受動側) += 8
	BATTLE_RATE_ATC:(受動側) += 50
	BATTLE_RATE_GRD:(受動側) += 50
ELSE
	;発動勢力勢力部隊の《貫計》判定(愛情)
	LOCAL:5 = 1
	IF 対象勢力 == CFLAG:MASTER:1
		FOR LOCAL:0, 0, 3
			IF BATTLE_F_UNIT:(受動側)
				LOCAL:2 = GET_UNIT_COMMANDER(対象勢力, 対象部隊, LOCAL:0)
			ELSE
				IF LOCAL:0 >= 2
					BREAK
				ELSE
					LOCAL:2 = GET_CITY_COMMANDER(対象勢力, LOCAL:0)
				ENDIF
			ENDIF

			IF LOCAL:2 >= 0
				LOCAL:3 = MAX(ABL_POWER_X(50, LOCAL:2) - ABL_50_POWER, 1)
				IF RAND:(LOCAL:3 * 2) + LOCAL:3 >= RAND:(BATTLE_INT:(発動側) * 3) + BATTLE_INT:(発動側)
					SETCOLOR 0x00FF80
					PRINTFORM 《貫計》
					PRINTDATAL
						DATAFORM %BATTLE_NAME:(受動側)%軍の%NAME:(LOCAL:2)%は圧倒的な勢いで%BATTLE_NAME:(発動側)%軍の計略をねじ伏せ無効化しました
						DATAFORM %BATTLE_NAME:(受動側)%軍は%NAME:(LOCAL:2)%の執念で%BATTLE_NAME:(発動側)%軍の計略を潰しました
					ENDDATA
					RESETCOLOR
					LOCAL:5 = 0

					RESETCOLOR
					;口上の表示
					CALL KOJO_EVENT(LOCAL:2, 313)
					BREAK
				ENDIF
			ENDIF
		NEXT
	ENDIF

	IF LOCAL:5
		;発動勢力勢力部隊の《貫計》判定(武力)
		IF RAND:(BATTLE_ATC:(受動側)) + BATTLE_ATC:(受動側) >= RAND:(BATTLE_INT:(発動側) * 3) + BATTLE_INT:(発動側)
			SETCOLOR 0x00FF80
			PRINTFORM 《貫計》
			PRINTDATAL
				DATAFORM %BATTLE_NAME:(受動側)%軍は力で%BATTLE_NAME:(発動側)%軍の計略をねじ伏せ無効化した
				DATAFORM %BATTLE_NAME:(受動側)%軍は%BATTLE_NAME:(発動側)%軍の計略を圧倒的な力で無効化した
				DATAFORM %BATTLE_NAME:(発動側)%軍の計略は%BATTLE_NAME:(受動側)%軍がもつ力の前では無意味だった
			ENDDATA
			IF 発動勢力 == CFLAG:MASTER:1 || 対象勢力 == CFLAG:MASTER:1
				CALL WHOES_SCHEME(受動側, 対象勢力, 対象部隊, 50)
				IF RESULT >= 0
					RESETCOLOR
					;口上の表示
					CALL KOJO_EVENT(RESULT, 312)
				ENDIF
			ENDIF

		;計略がそのまま通った場合
		ELSE
			;計略の選択
			CALL SELECT_SCHEME(発動側, 受動側)

			IF 発動勢力 == CFLAG:MASTER:1 || 対象勢力 == CFLAG:MASTER:1
				CALL WHOES_SCHEME(発動側, 発動勢力, 発動部隊, 51)
				IF RESULT >= 0
					RESETCOLOR
					;口上の表示
					CALL KOJO_EVENT(RESULT, 310)
				ENDIF
			ENDIF
		ENDIF
	ENDIF
ENDIF
RESETCOLOR

;-------------------------------------------------
;どのキャラが計略を発動させたか決定する関数(口上表示の対象を決める)
;引数0には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側
;引数 1:発動側勢力(or都市) 2:発動側部隊 3:関連能力
;-------------------------------------------------
@WHOES_SCHEME(ARG:0, ARG:1, ARG:2, ARG:3)
VARSET LOCAL, 0
FOR LOCAL:0, 0, 3
	IF BATTLE_F_UNIT:(ARG:0)
		LOCAL:2 = GET_UNIT_COMMANDER(ARG:1, ARG:2, LOCAL:0)
	ELSE
		IF LOCAL:0 >= 2
			BREAK
		ELSE
			LOCAL:2 = GET_CITY_COMMANDER(ARG:1, LOCAL:0)
		ENDIF
	ENDIF

	IF LOCAL:2 >= 0
		LOCAL:(LOCAL:0 + 10) = LOCAL:2
		LOCAL:(LOCAL:0 + 20) = ABL_POWER_X(ABL:(LOCAL:2):(ARG:3), LOCAL:2)
	ELSE
		LOCAL:(LOCAL:0 + 10) = -1
	ENDIF
NEXT

LOCAL:6 = MAX(LOCAL:20, LOCAL:21, LOCAL:22)
LOCAL:7 = 0

IF LOCAL:6 <= 0
	RETURN -1
ENDIF

FOR LOCAL:0, 0, 3
	LOCAL:(LOCAL:0 + 20) = MAX(LOCAL:(LOCAL:0 + 20) * 8 / LOCAL:6 - 4, 0)
	LOCAL:7 += LOCAL:(LOCAL:0 + 20)
NEXT

LOCAL:8 = RAND:(LOCAL:7)

FOR LOCAL:0, 0, 3
	LOCAL:8 -= LOCAL:(LOCAL:0 + 20)
	IF LOCAL:8 < 0
		RETURN LOCAL:(LOCAL:0 + 10)
	ENDIF
NEXT
RETURN -1

;-------------------------------------------------
;知略パワーに応じた計略の選択
;引数には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=受動側
;-------------------------------------------------
@SELECT_SCHEME(ARG:0, ARG:1)
VARSET LOCAL, 0

;■知略パワーに応じて選択可能な計略を増やす
;同士討ち
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(110)
	LOCAL:10 = 1
;兵器攻撃
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(100)
	LOCAL:11 = 1
;地形利用
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(90)
	LOCAL:12 = 1
;内通撹乱
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(85)
	LOCAL:13 = 1
;分断
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(75)
	LOCAL:14 = 1
;夜襲
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(70)
	LOCAL:18 = 1
;包囲殲滅
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(65)
	LOCAL:15 = 1
;釣り出し
LOCAL:16 = 1
;挑発
LOCAL:17 = 1

;計略発動側が防衛部隊
IF !BATTLE_F_UNIT:(ARG:0)
	LOCAL:12 = 0
	LOCAL:14 = 0
	LOCAL:15 = 0
	;LOCAL:16 = 0
	LOCAL:17 = 0
;受動側が防衛部隊
ELSEIF !BATTLE_F_UNIT:(ARG:1)
	LOCAL:12 = 0
	LOCAL:14 = 0
	LOCAL:15 = 0
	LOCAL:16 = 0
	LOCAL:18 = 0
;遭遇戦
ELSE
	LOCAL:17 = 0
ENDIF

LOCAL:2 = 0
FOR LOCAL:0, 10, 30
	IF LOCAL:(LOCAL:0)
		LOCAL:2 ++
	ENDIF
NEXT
LOCAL:3 = RAND:(LOCAL:2)
LOCAL:4 = 0
FOR LOCAL:0, 10, 30
	IF LOCAL:(LOCAL:0)
		IF LOCAL:3 == LOCAL:4
			LOCAL:5 = LOCAL:0
		ENDIF
		LOCAL:4 ++
	ENDIF
NEXT

SELECTCASE LOCAL:5
	CASE 10
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は周到な策謀により%BATTLE_NAME:(ARG:1)%軍を同士討ちさせることに成功しました
		BATTLE_RATE_DMG:(ARG:0) += 20
		BATTLE_RATE_ATC:(ARG:0) += 50
		BATTLE_RATE_GRD:(ARG:0) += 80
	CASE 11
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は兵器を利用して%BATTLE_NAME:(ARG:1)%軍に大攻勢を仕掛けました
		BATTLE_RATE_DMG:(ARG:0) += 5
		BATTLE_RATE_ATC:(ARG:0) += 120
		BATTLE_RATE_GRD:(ARG:0) += 55
	CASE 12
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍を有利な地形に誘い込んで大打撃を与えました
		BATTLE_RATE_DMG:(ARG:0) += 12
		BATTLE_RATE_ATC:(ARG:0) += 60
		BATTLE_RATE_GRD:(ARG:0) += 70
	CASE 13
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は内通者を利用して%BATTLE_NAME:(ARG:1)%軍を撹乱しました
		BATTLE_RATE_DMG:(ARG:0) += 4
		BATTLE_RATE_ATC:(ARG:0) += 80
		BATTLE_RATE_GRD:(ARG:0) += 45
	CASE 14
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍の部隊を分断し指揮系統を混乱させました
		BATTLE_RATE_DMG:(ARG:0) += 2
		BATTLE_RATE_ATC:(ARG:0) += 80
		BATTLE_RATE_GRD:(ARG:0) += 40
	CASE 15
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍の突出した部隊を包囲し各個撃破しました
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 55
		BATTLE_RATE_GRD:(ARG:0) += 30
	CASE 16
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍の先鋒部隊を誘い出して孤立させ、優位に戦闘を進めました
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 40
		BATTLE_RATE_GRD:(ARG:0) += 20
	CASE 17
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍を挑発し、城から討って出させました
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 60
		BATTLE_RATE_GRD:(ARG:0) += 0
	CASE 18
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍に夜襲を掛けて戦果を上げました
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 70
		BATTLE_RATE_GRD:(ARG:0) += 30
ENDSELECT

;	同士討ち……100[○○○]敵部隊に大被害、味方の被害大幅軽減
;	兵器　　…… 95[○○○]敵部隊に大被害、味方の被害軽減
;	地形利用…… 90[○××]敵部隊に中被害、味方の被害大幅軽減
;	追撃　　…… 85[※※※]敵部隊の離脱時に大被害
;	降伏　　…… 85[○○×]敵部隊に中被害、味方の兵数上昇
;	内通撹乱…… 80[○○○]敵部隊に中被害、味方の被害軽減
;	分断　　…… 75[○××]攻撃／防御を低い値に固定
;	補給襲撃…… 70[○○○]部隊の攻撃力を持続的に低下
;	包囲殲滅…… 65[○××]敵部隊に中被害、味方の被害軽減
;	釣り出し…… 55[○××]敵部隊に小被害、味方の被害軽減
;	挑発　　…… 50[×○×]敵部隊の防御倍率を低下させる→強制的に遭遇戦と同様の計算に

;-------------------------------------------------
;部隊壊滅時の士官の捕獲
;ARG:0=勝利した勢力 ARG:1=勝利した部隊の番号 ARG:2=敗北した勢力 ARG:3=敗北した部隊の番号
;※ARG:1、ARG:3が負のときはARG:0、ARG:2を都市番号とみなす
;-------------------------------------------------
@UNIT_BREAK_CAPTURE(ARG:0, ARG:1, ARG:2, ARG:3)
;勝利側の将のキャラ番号
#DIM COMMANDER_W, 3

;敗北側の将のキャラ番号
#DIM COMMANDER_L, 3

;勝利側の武闘・知略パワー
#DIM ATC_W
#DIM INT_W

;勝利側・敗北側の勢力番号
#DIM COUNTRY_W
#DIM COUNTRY_L

;戦死率
#DIM DEATH_RATE

;勝利側が素質<現代兵術>を持っているか
#DIM IS_GAIRAI

;逃走阻止率
#DIM CAPTURE_RATE

#DIM 武闘アップ
#DIM 知略アップ

VARSET COMMANDER_W, -1
VARSET COMMANDER_L, -1

;遊撃部隊・防衛部隊のそれぞれに合わせて必要な変数をセット(勝利側)
IF ARG:1 >= 0
	FOR LOCAL:0, 0, 3
		COMMANDER_W:(LOCAL:0) = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
	NEXT
	ATC_W = UNIT_ATTACK_LEVEL(ARG:0, ARG:1)
	INT_W = UNIT_INTELLIGENCE_LEVEL(ARG:0, ARG:1)
	COUNTRY_W = ARG:0
ELSE
	FOR LOCAL:0, 0, 2
		COMMANDER_W:(LOCAL:0) = GET_CITY_COMMANDER(ARG:0, LOCAL:0)
	NEXT
	ATC_W = CITY_ATTACK_LEVEL(ARG:0)
	INT_W = CITY_INTELLIGENCE_LEVEL(ARG:0)
	COUNTRY_W = CITY_OWNER:(ARG:0)
ENDIF

;遊撃部隊・防衛部隊のそれぞれに合わせて必要な変数をセット(敗北側)
IF ARG:3 >= 0
	FOR LOCAL:0, 0, 3
		COMMANDER_L:(LOCAL:0) = GET_UNIT_COMMANDER(ARG:2, ARG:3, LOCAL:0)
	NEXT
	COUNTRY_L = ARG:2
ELSE
	FOR LOCAL:0, 0, 2
		COMMANDER_L:(LOCAL:0) = GET_CITY_COMMANDER(ARG:2, LOCAL:0)
	NEXT
	COUNTRY_L = CITY_OWNER:(ARG:2)
ENDIF

;戦死設定が有効の場合
IF CONFIG:305 >= 1
	;設定に応じた戦死率を設定(DEATH_RATE / 1000)
	IF CONFIG:305 == 3
		DEATH_RATE = 250
	ELSEIF CONFIG:305 == 2
		DEATH_RATE = 100
	ELSE
		DEATH_RATE = 20
	ENDIF

	FOR LOCAL:0, 0, 3
		LOCAL:4 = COMMANDER_L:(LOCAL:0)

		;戦死判定、君主およびイベントキャラ(NOが2000以上)は戦死しない
		IF LOCAL:4 >= 0 && LOCAL:4 != GET_COUNTRY_BOSS(COUNTRY_L) && NO:(LOCAL:4) < 2000 && RAND:1000 < DEATH_RATE
			IF LOCAL:4 == MASTER
				SETCOLOR 0xFF8000
				PRINTFORML %NAME:(LOCAL:4)%は戦死しました…
				RESETCOLOR
				;戦死エンドフラグ
				FLAG:34 = 1
			ELSE
				;戦死口上
				CALL KOJO_EVENT(LOCAL:4, 337)

				IF COUNTRY_W == CFLAG:MASTER:1
					SETCOLOR 0xFF8000
					PRINTFORML %NAME:(LOCAL:4)%を討ち取りました！
					RESETCOLOR
				ELSEIF COUNTRY_L == CFLAG:MASTER:1
					SETCOLOR 0xFF8000
					PRINTFORML %NAME:(LOCAL:4)%は戦死しました…
					RESETCOLOR
				ELSE
					SETCOLOR 0xFF8000
					PRINTFORML %NAME:(LOCAL:4)%は戦死したようです
					RESETCOLOR
				ENDIF

				;所属を無所属、状態フラグを死亡に
				CFLAG:(LOCAL:4):1 = 0
				CFLAG:(LOCAL:4):12 = 2
			ENDIF
		ENDIF
	NEXT
ENDIF

;勝利側が現代兵術持ちの場合の処理
IS_GAIRAI = 0
FOR LOCAL:0, 0, 3
	IF COMMANDER_W:(LOCAL:0) >= 0 && TALENT:(COMMANDER_W:(LOCAL:0)):現代兵術
		IS_GAIRAI = 1
		BREAK
	ENDIF
NEXT



FOR LOCAL:0, 0, 3
	LOCAL:4 = COMMANDER_L:(LOCAL:0)
	IF LOCAL:4 >= 0
		;捕獲率を計算する。三能力に基づいて決定する。ただし武闘には倍の重み付けを行う
		CAPTURE_RATE = (400 - (ABL:(LOCAL:4):武闘  * 2 + ABL:(LOCAL:4):知略 + ABL:(LOCAL:4):政治)) / 4
		SELECTCASE CONFIG:306
			CASE 0
				;素の値
				CAPTURE_RATE = LIMIT(CAPTURE_RATE, 10, 60)
			CASE 1
				;高い
				TIMES CAPTURE_RATE, 1.5
				CAPTURE_RATE = LIMIT(CAPTURE_RATE, 10, 80)
			CASE 2
				CAPTURE_RATE = 100
			CASE 3
				CAPTURE_RATE = 0
			CASE 4
				;低い
				TIMES CAPTURE_RATE, 0.5
				CAPTURE_RATE = MAX(CAPTURE_RATE, 5, 50)
		ENDSELECT

		;現代兵術を持っているなら100%(捕獲率が0のときは除く)
		IF IS_GAIRAI && CONFIG:306 != 3
			CAPTURE_RATE = 100
		ENDIF
		;勝利側が野盗なら3/4
		IF ARG:1 >= 0 && ARG:3 >= 0 && COUNTRY_EVENT_ID:(ARG:0) == COUNTRY_BANDIT && CONFIG:306 != 3
			CAPTURE_RATE = 75
		ENDIF
	ELSE
		CAPTURE_RATE = 0
	ENDIF
	;イベントキャラ(NOが2000以上)は捕獲できない。戦死したキャラはスキップ
	IF LOCAL:4 >= 0 && NO:(LOCAL:4) < 2000 && CFLAG:(LOCAL:4):12 != 2 && !(LOCAL:4 == MASTER && FLAG:34)
		;捕縛判定(君主は捕縛されない)
		;衣装を着たキャラは捕獲率2倍
		IF (RAND:100 < CAPTURE_RATE / (CFLAG:(LOCAL:4):92 ? 2 # 1)) && LOCAL:4 != GET_COUNTRY_BOSS(COUNTRY_L)
			IF COUNTRY_L == CFLAG:MASTER:1
				PRINTFORML %NAME:(LOCAL:4)%は捕らえられました…
			ELSEIF COUNTRY_W == CFLAG:MASTER:1
				PRINTFORML %NAME:(LOCAL:4)%を捕らえました
			ELSE
				PRINTFORML %NAME:(LOCAL:4)%は捕らえられた模様です
			ENDIF

			;外来勢力なら1/2で強制的に捕虜化
			IF IS_GAIRAI && RAND:100 > 50
				CFLAG:(LOCAL:4):9 = COUNTRY_W
			ELSE
				;捕虜の扱いを決定
				CALL TREAT_PRISONER(COUNTRY_L, COUNTRY_W, LOCAL:4, 1)
				;解放したなら自勢力に戻ってもらう
				IF RESULT == 1
					CFLAG:(LOCAL:4):12 = 0
					CFLAG:(LOCAL:4):13 = 0
					CFLAG:(LOCAL:4):14 = 0
				;処刑したなら無所属に
				ELSEIF RESULT == 3
					CFLAG:(LOCAL:4):1 = 0
				ENDIF
			ENDIF

		;逃走した場合
		ELSE
			IF COUNTRY_L == CFLAG:MASTER:1
				PRINTFORML %NAME:(LOCAL:4)%は何とか逃げ帰りました
			ELSEIF COUNTRY_W == CFLAG:MASTER:1
				PRINTFORML %NAME:(LOCAL:4)%は逃走したようです…
			ELSE
				PRINTFORML %NAME:(LOCAL:4)%は逃走した模様です
			ENDIF
			;とりま25%の確率で負傷
			IF !RAND:4
				SLG_COOLTIME:(LOCAL:4):0 = RAND:3 + 2
				SETCOLOR COLOR_ALERT
				PRINTFORML 逃走中、%NAME:(LOCAL:4)%は負傷したようです
				PRINTFORML 全治{SLG_COOLTIME:(LOCAL:4):0}ターンです
				RESETCOLOR
				LOCAL:5 = 0
				;治療持ちが同じ勢力にいる場合は確率、本人が治療持ちの場合は確定で、負傷を軽減
				FOR LOCAL:1, 0, CHARANUM
					IF SLG_COOLTIME:(LOCAL:4):0 > 1 && (TALENT:(LOCAL:1):治療 && CFLAG:(LOCAL:1):1 == CFLAG:(LOCAL:4):1 && CFLAG:(LOCAL:1):9 == 0 && RAND:100 < 10) || (TALENT:(LOCAL:4):治療 && !LOCAL:5)
						IF TALENT:(LOCAL:4):治療
							SLG_COOLTIME:(LOCAL:4):0 = 1
							LOCAL:5 = 1
							SETCOLOR COLOR_CAUTION
							PRINTFORML %NAME:(LOCAL:4)%は怪我を自ら治療しました
							PRINTFORML 全治{SLG_COOLTIME:(LOCAL:4):0}ターンになりました
							RESETCOLOR
						ELSE
							SLG_COOLTIME:(LOCAL:4):0 = MAX(1, SLG_COOLTIME:(LOCAL:4):0 - (RAND:2 + 1))
							SETCOLOR COLOR_CAUTION
							PRINTFORML %NAME:(LOCAL:1)%の治療により、%NAME:(LOCAL:4)%の怪我は軽く済みました
							PRINTFORML 全治{SLG_COOLTIME:(LOCAL:4):0}ターンになりました
							RESETCOLOR
						ENDIF
					ENDIF
				NEXT
			ENDIF
		ENDIF
	ENDIF
NEXT
FOR LOCAL,0, 3
	IF COMMANDER_W:LOCAL > 0 && ABL:(COMMANDER_W:LOCAL):武闘 < 80 && ABL:(COMMANDER_W:LOCAL):知略 < 80
		武闘アップ = 0
		SELECTCASE ABL:(COMMANDER_W:LOCAL):武闘
			CASE IS < 30
				武闘アップ = RAND:4
			CASE IS < 50
				武闘アップ = RAND:3
			CASE IS < 70
				武闘アップ = RAND:2
			CASEELSE
				SIF !RAND:4
					武闘アップ = 1
		ENDSELECT
		IF 武闘アップ
			SETCOLOR COLOR_ORANGE
			PRINTFORML %NAME:(COMMANDER_W:LOCAL)%の武闘が{武闘アップ}上がりました(現在:{ABL:(COMMANDER_W:LOCAL):武闘 + 武闘アップ})
			RESETCOLOR
			ABL:(COMMANDER_W:LOCAL):武闘 += 武闘アップ
		ENDIF
		知略アップ = 0
		SELECTCASE ABL:(COMMANDER_W:LOCAL):知略
			CASE IS < 30
				知略アップ = RAND:4
			CASE IS < 50
				知略アップ = RAND:3
			CASE IS < 70
				知略アップ = RAND:2
			CASEELSE
				SIF !RAND:4
					知略アップ = 1
		ENDSELECT
		IF 知略アップ
			SETCOLOR COLOR_ORANGE
			PRINTFORML %NAME:(COMMANDER_W:LOCAL)%の知略が{知略アップ}上がりました(現在:{ABL:(COMMANDER_W:LOCAL):知略 + 知略アップ})
			RESETCOLOR
			ABL:(COMMANDER_W:LOCAL):知略 += 知略アップ
		ENDIF
	ENDIF
NEXT
;-------------------------------------------------
;ARG:0勢力ARG:1部隊の歌唱・料理補正値を返す関数(0.1%単位)
;-------------------------------------------------
@UNIT_SUPPORT_LEVEL(ARG:0, ARG:1)
#FUNCTION
LOCAL:3 = 0
LOCAL:4 = 0
FOR LOCAL:0, 0, 3
	LOCAL:2 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
	IF LOCAL:2 >= 0
		;能力が50未満だと切り捨てられる
		;(コスプレパッチ追加分)メイド服や踊り子衣装の場合、能力+10分の恩恵を得られる
		;(補正値は服装嗜好Lv×2)
		
		;踊り子衣装or吟遊詩人服
		IF CFLAG:(LOCAL:2):92 == 2 || CFLAG:(LOCAL:2):92 == 5
			LOCAL:3 += MAX(ABL_POWER_X(ABL:(LOCAL:2):歌唱+ABL:(LOCAL:2):衣装嗜好, LOCAL:2) - ABL_50_POWER, 0)
		ELSE
			LOCAL:3 += MAX(ABL_POWER_X(ABL:(LOCAL:2):歌唱, LOCAL:2) - ABL_50_POWER, 0)
		ENDIF
		
		;メイド服or執事服
		IF CFLAG:(LOCAL:2):92 == 1 || CFLAG:(LOCAL:2):92 == 4
			LOCAL:4 += MAX(ABL_POWER_X(ABL:(LOCAL:2):料理+ABL:(LOCAL:2):衣装嗜好, LOCAL:2) - ABL_50_POWER, 0)
		ELSE
			LOCAL:4 += MAX(ABL_POWER_X(ABL:(LOCAL:2):料理, LOCAL:2) - ABL_50_POWER, 0)
		ENDIF
	ENDIF
NEXT
LOCAL:3 = 1000 + POWER_075(LOCAL:3) * 100 / 514 + POWER_075(LOCAL:4) * 100 / 514
RETURNF LOCAL:3

;-------------------------------------------------
;ARG:0勢力ARG:1部隊の攻撃能力を決定
;-------------------------------------------------
@UNIT_ATTACK_LEVEL(ARG:0, ARG:1)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 3
	LOCAL:2 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
	IF LOCAL:2 >= 0
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):武闘, LOCAL:2)
		
		;コスプレ衣装を着ている場合、0.9倍される
		IF CFLAG:(LOCAL:2):92
			LOCAL:3 = LOCAL:3 * 9 /10
			;申し訳程度に衣装嗜好による補正がかかる(最大1.1倍)
			LOCAL:3 = LOCAL:3 * (100+ABL:(LOCAL:2):衣装嗜好) / 100
		ENDIF
		
		IF TALENT:(LOCAL:2):妖術知識
			;巫女装束、陰陽師装束を着ている場合、妖術の補正が1.0倍～1.2倍される
			;(衣装嗜好Lv×0.05倍)
			IF CFLAG:(LOCAL:2):92 == 3 || CFLAG:(LOCAL:2):92 == 6
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術*(100+ABL:(LOCAL:2):衣装嗜好*2)/100, LOCAL:2) / 2
			ELSE
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術, LOCAL:2) / 2
			ENDIF
		ENDIF
	ENDIF
NEXT
;歌唱による補正
LOCAL:3 = MAX(LOCAL:3, ABL_50_POWER) * UNIT_SUPPORT_LEVEL(ARG:0, ARG:1) / 1000
;防衛AIの場合85%
IF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_防衛
	TIMES LOCAL:3, 0.85
ENDIF
RETURNF LOCAL:3 / 4 + 8800

;-------------------------------------------------
;ARG:0勢力ARG:1部隊の防御能力を決定
;-------------------------------------------------
@UNIT_DEFENSE_LEVEL(ARG:0, ARG:1)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 3
	LOCAL:2 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
	IF LOCAL:2 >= 0
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):武闘, LOCAL:2)
		
		;コスプレ衣装を着ている場合、0.9倍される
		IF CFLAG:(LOCAL:2):92
			LOCAL:3 = LOCAL:3 * 9 /10
			;申し訳程度に衣装嗜好による補正がかかる(最大1.1倍)
			LOCAL:3 = LOCAL:3 * (100+ABL:(LOCAL:2):衣装嗜好) / 100
		ENDIF
		
		IF TALENT:(LOCAL:2):妖術知識
			;巫女装束、陰陽師装束を着ている場合、妖術の補正が1.0倍～1.2倍される
			;(衣装嗜好Lv×0.05倍)
			IF CFLAG:(LOCAL:2):92 == 3 || CFLAG:(LOCAL:2):92 == 6
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術*(100+ABL:(LOCAL:2):衣装嗜好*2)/100, LOCAL:2) / 2
			ELSE
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術, LOCAL:2) / 2
			ENDIF
		ENDIF
	ENDIF
NEXT
;歌唱による補正
LOCAL:3 = MAX(LOCAL:3, ABL_50_POWER) * UNIT_SUPPORT_LEVEL(ARG:0, ARG:1) / 1000
;防衛AIの場合110%
IF ARG:0 != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(ARG:0) == AI_防衛
	TIMES LOCAL:3, 1.10
ENDIF
RETURNF LOCAL:3 / 2 + 8000

;-------------------------------------------------
;ARG:0勢力ARG:1部隊の知略パワーを決定
;-------------------------------------------------
@UNIT_INTELLIGENCE_LEVEL(ARG:0, ARG:1)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 3
	LOCAL:2 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
	IF LOCAL:2 >= 0
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):知略, LOCAL:2)
	ENDIF
NEXT
;歌唱による補正
LOCAL:3 = MAX(LOCAL:3, ABL_50_POWER) * UNIT_SUPPORT_LEVEL(ARG:0, ARG:1) / 1000
RETURNF LOCAL:3

;-------------------------------------------------
;ARG:0勢力ARG:1部隊の妖術パワーを決定
;-------------------------------------------------
@UNIT_MAGIC_LEVEL(ARG:0, ARG:1)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 3
	LOCAL:2 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
	IF LOCAL:2 >= 0 && TALENT:(LOCAL:2):妖術知識
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術, LOCAL:2)
	ENDIF
NEXT
RETURNF LOCAL:3

;-------------------------------------------------
;都市ARG:0の防衛部隊の歌唱・料理補正値を返す関数(0.1%単位)
;-------------------------------------------------
@CITY_SUPPORT_LEVEL(ARG:0)
#FUNCTION
LOCAL:3 = 0
LOCAL:4 = 0
FOR LOCAL:0, 0, 3
	LOCAL:2 = GET_CITY_COMMANDER(ARG:0, LOCAL:0)
	IF LOCAL:2 >= 0
		;能力が50未満だと切り捨てられる
		;(コスプレパッチ追加分)メイド服や踊り子衣装の場合、能力+10分の恩恵を得られる
		;(補正値は服装嗜好Lv×2)
		
		;踊り子衣装
		IF CFLAG:(LOCAL:2):92 == 2 || CFLAG:(LOCAL:2):92 == 5
			LOCAL:3 += MAX(ABL_POWER_X(ABL:(LOCAL:2):歌唱+ABL:(LOCAL:2):衣装嗜好, LOCAL:2) - ABL_50_POWER, 0)
		ELSE
			LOCAL:3 += MAX(ABL_POWER_X(ABL:(LOCAL:2):歌唱, LOCAL:2) - ABL_50_POWER, 0)
		ENDIF
		
		;メイド服
		IF CFLAG:(LOCAL:2):92 == 1 || CFLAG:(LOCAL:2):92 == 4
			LOCAL:4 += MAX(ABL_POWER_X(ABL:(LOCAL:2):料理+ABL:(LOCAL:2):衣装嗜好, LOCAL:2) - ABL_50_POWER, 0)
		ELSE
			LOCAL:4 += MAX(ABL_POWER_X(ABL:(LOCAL:2):料理, LOCAL:2) - ABL_50_POWER, 0)
		ENDIF
	ENDIF
NEXT
LOCAL:3 = 1000 + POWER_075(LOCAL:3) * 100 / 514 + POWER_075(LOCAL:4) * 100 / 514
RETURNF LOCAL:3

;-------------------------------------------------
;都市ARG:0の防衛部隊の攻撃能力を決定
;-------------------------------------------------
@CITY_ATTACK_LEVEL(ARG:0)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 2
	LOCAL:2 = GET_CITY_COMMANDER(ARG:0, LOCAL:0)
	IF LOCAL:2 >= 0
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):武闘, LOCAL:2)
		
		;コスプレ衣装を着ている場合、0.9倍される
		IF CFLAG:(LOCAL:2):92
			LOCAL:3 = LOCAL:3 * 9 /10
			;申し訳程度に衣装嗜好による補正がかかる(最大1.1倍)
			LOCAL:3 = LOCAL:3 * (100+ABL:(LOCAL:2):衣装嗜好) / 100
		ENDIF
		
		IF TALENT:(LOCAL:2):妖術知識
			;巫女装束、陰陽師装束を着ている場合、妖術の補正が1.0倍～1.2倍される
			;(衣装嗜好Lv×0.05倍)
			IF CFLAG:(LOCAL:2):92 == 3 || CFLAG:(LOCAL:2):92 == 6
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術*(100+ABL:(LOCAL:2):衣装嗜好*2)/100, LOCAL:2) / 2
			ELSE
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術, LOCAL:2) / 2
			ENDIF
		ENDIF
	ENDIF
NEXT
;歌唱による補正
LOCAL:3 = MAX(LOCAL:3, ABL_50_POWER) * CITY_SUPPORT_LEVEL(ARG:0) / 1000
;防衛部隊では士官による攻撃力補正が1/4
LOCAL:3 = LOCAL:3 / 16 + 9400
;都市の防衛倍率による補正を掛ける
RETURNF LOCAL:3 * ((CITY_GUARD_RATE(ARG:0) - 100) / 3 + 100) * 2 / 100

;-------------------------------------------------
;都市ARG:0の防衛部隊の防御能力を決定
;-------------------------------------------------
@CITY_DEFENSE_LEVEL(ARG:0)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 2
	LOCAL:2 = GET_CITY_COMMANDER(ARG:0, LOCAL:0)
	IF LOCAL:2 >= 0
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):武闘, LOCAL:2)
		
		;コスプレ衣装を着ている場合、0.9倍される
		IF CFLAG:(LOCAL:2):92
			LOCAL:3 = LOCAL:3 * 9 /10
			;申し訳程度に衣装嗜好による補正がかかる(最大1.1倍)
			LOCAL:3 = LOCAL:3 * (100+ABL:(LOCAL:2):衣装嗜好) / 100
		ENDIF
		
		IF TALENT:(LOCAL:2):妖術知識
			;巫女装束、陰陽師装束を着ている場合、妖術の補正が1.0倍～1.2倍される
			;(衣装嗜好Lv×0.05倍)
			IF CFLAG:(LOCAL:2):92 == 3 || CFLAG:(LOCAL:2):92 == 6
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術*(100+ABL:(LOCAL:2):衣装嗜好*2)/100, LOCAL:2) / 2
			ELSE
				LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術, LOCAL:2) / 2
			ENDIF
		ENDIF
	ENDIF
NEXT
;歌唱による補正
LOCAL:3 = MAX(LOCAL:3, ABL_50_POWER) * CITY_SUPPORT_LEVEL(ARG:0) / 1000
;防衛部隊では士官による防御力補正が1/4
LOCAL:3 = LOCAL:3 / 8 + 9200
;都市の防衛倍率による補正を掛ける
RETURNF LOCAL:3 * CITY_GUARD_RATE(ARG:0) * 16 / 100

;-------------------------------------------------
;都市ARG:0の防衛倍率を計算
;-------------------------------------------------
@CITY_GUARD_RATE(ARG:0)
#FUNCTION
LOCAL:0 = CITY_GUARD:(ARG:0) * (CITY_ECONOMY:(ARG:0) * 3 / 100 + 10000) / 100

;政策補正
SELECTCASE COUNTRY_POLICY:(CITY_OWNER:(ARG:0))
;防衛ランク3
CASE 8
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 3.00
;防衛ランク2
CASE 5
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 2.00
;防衛ランク1
CASE 2
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 1.50
;防衛ランク-1
CASE 3, 7
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 0.90
;防衛ランク-2
CASE 6
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 0.70
CASEELSE
ENDSELECT

;防衛AIなら1.1倍
;IF IS_COUNTRY(CITY_OWNER:(ARG:0)) && CITY_OWNER:(ARG:0) != CFLAG:MASTER:1 && COUNTRY_AI_TYPE:(CITY_OWNER:(ARG:0)) == AI_防衛
;	TIMES LOCAL:0, 1.10
;ENDIF

IF !IS_COUNTRY(CITY_OWNER:(ARG:0))
	LOCAL:0 = 10000
ENDIF
RETURNF LOCAL:0 / 100

;-------------------------------------------------
;都市ARG:0の防衛部隊の知略パワーを決定
;-------------------------------------------------
@CITY_INTELLIGENCE_LEVEL(ARG:0)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 2
	LOCAL:2 = GET_CITY_COMMANDER(ARG:0, LOCAL:0)
	IF LOCAL:2 >= 0
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):知略, LOCAL:2)
	ENDIF
NEXT
;歌唱による補正
LOCAL:3 = MAX(LOCAL:3, ABL_50_POWER) * CITY_SUPPORT_LEVEL(ARG:0) / 1000
RETURNF LOCAL:3

;-------------------------------------------------
;都市ARG:0の防衛部隊の妖術パワーを決定
;-------------------------------------------------
@CITY_MAGIC_LEVEL(ARG:0)
#FUNCTION
;将の補正
LOCAL:3 = 0
FOR LOCAL:0, 0, 2
	LOCAL:2 = GET_CITY_COMMANDER(ARG:0, LOCAL:0)
	IF LOCAL:2 >= 0 && TALENT:(LOCAL:2):妖術知識
		LOCAL:3 += ABL_POWER_X(ABL:(LOCAL:2):妖術, LOCAL:2)
	ENDIF
NEXT
RETURNF LOCAL:3

;-------------------------------------------------
;同盟・連合の期限チェック
;-------------------------------------------------
@TREATY_TURNEND
;★
;FOR LOCAL:0, 0, MAX_TREATY_A
;	PRINTFORM No.{LOCAL:0, 2, LEFT} 期間:{TREATY_A_TERM:(LOCAL:0)} 
;	FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
;		IF TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) >= 1
;			PRINTFORM {LOCAL:1}-{TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1)} 
;		ENDIF
;	NEXT
;	PRINTL 
;NEXT

;同盟のチェック
FOR LOCAL:0, 0, MAX_TREATY_A
	IF TREATY_A_TERM:(LOCAL:0) >= 1 && TREATY_A_TERM:(LOCAL:0) != 9999
		TREATY_A_TERM:(LOCAL:0) --
		;期限切れによる解散
		IF TREATY_A_TERM:(LOCAL:0) == 0
			SETCOLOR COLOR_CAUTION
			PRINT 期限切れにより
			LOCAL:5 = 0
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				LOCAL:3 = TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1)
				IF LOCAL:3 > 0
					LOCAL:4 = GET_COUNTRY_BOSS(LOCAL:3)
					IF LOCAL:4 >= 0
						IF LOCAL:5
							PRINT ・
						ENDIF
						PRINTFORM %NAME:(LOCAL:4)%
						LOCAL:5 = 1
					ENDIF
					;ついでに部隊の解散もここで行う
					CALL CLEAR_ALL_UNIT(LOCAL:3)
				ENDIF
			NEXT
			PRINTL 同盟は解散しました
			PRINTL 同盟の解散に伴い、参加していた勢力の全部隊は解散されます
			RESETCOLOR
			;移動処理対象の検索
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				IF TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) >= 1 && TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) != CFLAG:MASTER:1
					;その同盟にプレイヤー勢力がいたか検索
					FOR LOCAL:2, 0, MAX_TREATY_COUNTRY
						IF TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:2) == CFLAG:MASTER:1
							;いたら、自国へ誘った士官の移動処理
							CALL GO_TO_MASTERS_COUNTRY(TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1))
						ENDIF
					NEXT
				ENDIF
			NEXT
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				TREATY_A_COUNTRY:(LOCAL:0):(LOCAL:1) = 0
			NEXT
			TREATY_A_TERM:(LOCAL:0) = 0
			PRINTL 
		ENDIF
	ENDIF
NEXT

;連合のチェック
FOR LOCAL:0, 0, MAX_TREATY_U
	IF TREATY_U_TERM:(LOCAL:0) > 0 && TREATY_U_TERM:(LOCAL:0) != 9999
		TREATY_U_TERM:(LOCAL:0) --
		;期限切れによる解散
		IF TREATY_U_TERM:(LOCAL:0) == 0
			SETCOLOR COLOR_CAUTION
			PRINT 期限切れにより
			LOCAL:3 = GET_COUNTRY_BOSS(TREATY_U_TARGET:(LOCAL:0))
			IF LOCAL:3 >= 0
				PRINTFORM 反%NAME:(LOCAL:3)%
			ENDIF
			PRINTL 連合は解散しました
			PRINTL 連合の解散に伴い、参加していた勢力の全部隊は解散されます
			RESETCOLOR
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				LOCAL:4 = TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1)
				IF LOCAL:4 > 0
					CALL CLEAR_ALL_UNIT(LOCAL:4)
				ENDIF
			NEXT
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				IF TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1) >= 1 && TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1) != CFLAG:MASTER:1
					;その同盟にプレイヤー勢力がいたか検索
					FOR LOCAL:2, 0, MAX_TREATY_COUNTRY
						IF TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:2) == CFLAG:MASTER:1
							;いたら、自国へ誘った士官の移動処理
							CALL GO_TO_MASTERS_COUNTRY(TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1))
						ENDIF
					NEXT
				ENDIF
			NEXT
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				TREATY_U_COUNTRY:(LOCAL:0):(LOCAL:1) = 0
			NEXT
			TREATY_U_TERM:(LOCAL:0) = 0
			TREATY_U_TARGET:(LOCAL:0) = 0
			PRINTL 
		ENDIF
	ENDIF
NEXT

;停戦のチェック
FOR LOCAL:0, 0, MAX_TREATY_C
	IF TREATY_C_TERM:(LOCAL:0) > 0 && TREATY_C_TERM:(LOCAL:0) != 9999
		TREATY_C_TERM:(LOCAL:0) --
		;期限切れによる解散
		IF TREATY_C_TERM:(LOCAL:0) == 0
			SETCOLOR COLOR_CAUTION
			PRINT 期限切れにより
			LOCAL:5 = 0
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				LOCAL:3 = TREATY_C_COUNTRY:(LOCAL:0):(LOCAL:1)
				IF LOCAL:3 > 0
					LOCAL:4 = GET_COUNTRY_BOSS(LOCAL:3)
					IF LOCAL:4 >= 0
						IF LOCAL:5
							PRINT ・
						ENDIF
						PRINTFORM %NAME:(LOCAL:4)%
						LOCAL:5 = 1
					ENDIF
				ENDIF
			NEXT
			PRINTL の停戦条約は失効しました
			PRINTL 
			FOR LOCAL:1, 0, MAX_TREATY_COUNTRY
				TREATY_C_COUNTRY:(LOCAL:0):(LOCAL:1) = 0
			NEXT
			TREATY_C_TERM:(LOCAL:0) = 0
			RESETCOLOR
		ENDIF
	ENDIF
NEXT

;連合の討伐対象にならない期間を減少
;
FOR LOCAL:0, 0, MAX_COUNTRY
	COUNTRY_NOTARGET_TERM:(LOCAL:0) = MAX(COUNTRY_NOTARGET_TERM:(LOCAL:0) - 1, 0)
;外交ペナルティ用処理、現状では使えません
;	SIF COUNTRY_NOTDIPLOMACY_TERM:(LOCAL:0) == 1
;		PRINTFORML %NAME:GET_COUNTRY_BOSS(LOCAL:0)%に対する各勢力の外交封鎖は解除されます
;	COUNTRY_NOTDIPLOMACY_TERM:(LOCAL:0) = MAX(COUNTRY_NOTDIPLOMACY_TERM:(LOCAL:0) - 1, 0)
NEXT

;-------------------------------------------------
;ARG:0番の勢力の徴兵処理
;-------------------------------------------------
@COUNTRY_ADD_SOLDIER(ARG:0)
;増加する兵数は経済規模×0.5(警邏・歌唱などによる補正あり)
;最大兵数は経済規模×10

;士官が部隊に所属しているかどうかのリストを作成
CALL TMP_CREATE_IS_FREE_MAP

;歌唱パワー・政治パワーを取得
LOCAL:7 = 0
LOCAL:8 = 0
FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:(LOCAL:0):1 == ARG:0 && TMP_IS_FREE:(LOCAL:0):0 == 0
		;政治の補正
		LOCAL:7 += ABL_POWER_X((ABL:(LOCAL:0):政治 * 7 + ABL:(LOCAL:0):武闘 * 3) / 10, LOCAL:0)
		
		;歌唱の補正／能力50以下は切り捨てる
		;踊り子衣装or吟遊詩人服
		IF CFLAG:(LOCAL:0):92 == 2 || CFLAG:(LOCAL:0):92 == 5
			LOCAL:8 += MAX(ABL_POWER_X(ABL:(LOCAL:0):歌唱 + 1 * ABL:(LOCAL:0):衣装嗜好, LOCAL:0) - ABL_50_POWER, 0)
		ELSE
			LOCAL:8 += MAX(ABL_POWER_X(ABL:(LOCAL:0):歌唱, LOCAL:0) - ABL_50_POWER, 0)
		ENDIF
		
	ENDIF
NEXT
LOCAL:7 = SQRT(LOCAL:7) * 2 / 3 + SQRT(LOCAL:8)

LOCAL:0 = GET_SUM_ECONOMY(ARG:0) / 100
LOCAL:1 = GET_SUM_SOLDIER(ARG:0)
LOCAL:2 = LOCAL:0 * (FLAG:43 + LOCAL:7 + 1000) * 5 / 10000
LOCAL:3 = MAX(LOCAL:0 * 10 - LOCAL:1, 0)

;政策による補正
SELECTCASE COUNTRY_POLICY:(ARG:0)
;軍事ランク3
CASE 7
		TIMES LOCAL:2, 3.00
;軍事ランク2
CASE 4
		TIMES LOCAL:2, 2.20
;軍事ランク1
CASE 1
		TIMES LOCAL:2, 1.50
;軍事ランク-1
CASE 5, 6
		TIMES LOCAL:2, 0.90
;軍事ランク-2
CASE 8
		TIMES LOCAL:2, 0.75
CASEELSE
		TIMES LOCAL:2, 1.00
ENDSELECT


;VER1.25より、NPCのみ徴兵数増加
IF ARG:0 != CFLAG:MASTER:1
	SELECTCASE CONFIG:300
		CASE 0
			TIMES LOCAL:2, 1.00
		CASE 1
			TIMES LOCAL:2, 1.10
		CASE 2
			TIMES LOCAL:2, 1.25
		CASE 3
			TIMES LOCAL:2, 1.45
	ENDSELECT
ENDIF

;AIタイプに応じた兵数の増減
;IF ARG:0 != CFLAG:MASTER:1
;	SELECTCASE COUNTRY_AI_TYPE:(ARG:0)
;		CASE AI_好戦
;			TIMES LOCAL:2, 1.10
;		CASE AI_内政
;			TIMES LOCAL:2, 0.90
;	ENDSELECT
;ENDIF

LOCAL:4 = MIN(LOCAL:2, LOCAL:3)
COUNTRY_SOLDIER:(ARG:0) += LOCAL:4

IF ARG:0 == CFLAG:MASTER:1 && LOCAL:4 > 0
	PRINTFORMW 我が国の兵数が{LOCAL:4}だけ増加しました
ENDIF

;防衛兵数が最低数を割っている都市があるなら自動配分
LOCAL:5 = 0
FOR LOCAL:0, 0, MAX_CITY
	IF CITY_OWNER:(LOCAL:0) == ARG:0 && CITY_SOLDIER:(LOCAL:0) < 500 && COUNTRY_SOLDIER:(ARG:0) > 0
		;敵部隊のいる都市は増減不可
		CALL GET_STAY_ENEMY_UNIT(LOCAL:0)
		IF RESULT:0 < 0
			LOCAL:6 = MIN(500 - CITY_SOLDIER:(LOCAL:0), COUNTRY_SOLDIER:(ARG:0))
			CITY_SOLDIER:(LOCAL:0) += LOCAL:6
			COUNTRY_SOLDIER:(ARG:0) -= LOCAL:6
			LOCAL:5 = 1
			IF ARG:0 == CFLAG:MASTER:1
				PRINTFORML %GET_CITYNAME(LOCAL:0)%の防衛兵数を{LOCAL:6}だけ補充しました
			ENDIF
		ENDIF
	ENDIF
NEXT
IF ARG:0 == CFLAG:MASTER:1 && LOCAL:5
	WAIT
ENDIF

;-------------------------------------------------
;各勢力都市の経済規模変動(実際の呼び出しはTURNEND.ERB)
;-------------------------------------------------
@VARY_ECONOMY
FOR LOCAL:0, 0, MAX_CITY
	;攻撃を受けた都市の経済規模を減少させる
	IF CITY_IS_ATTACKED:(LOCAL:0) > PAST_CITY_IS_ATTACKED:(LOCAL:0)
		CITY_ECONOMY:(LOCAL:0) = (CITY_ECONOMY:(LOCAL:0) + 1) * 98 / 100
	;このターン攻撃を受けなければフラグはリセットされる
	ELSE
		CITY_IS_ATTACKED:(LOCAL:0) = 0
	ENDIF
NEXT
;変数リセット
ARRAYCOPY "CITY_IS_ATTACKED" , "PAST_CITY_IS_ATTACKED"

;各士官が行動可能な状態にあるかどうかのマップ作成(高速化用)
CALL TMP_CREATE_IS_FREE_MAP

FOR LOCAL:0, 0, MAX_COUNTRY
	IF IS_COUNTRY(LOCAL:0)
		LOCAL:10 = 0
		LOCAL:11 = 0
		FOR LOCAL:1, 0, CHARANUM
			IF CFLAG:(LOCAL:1):1 == LOCAL:0 && TMP_IS_FREE:(LOCAL:1):0 == 0
				;政治の補正
				LOCAL:10 += ABL_POWER_X((ABL:(LOCAL:0):政治 * 7 + ABL:(LOCAL:0):知略 * 3) / 10, LOCAL:1)
				
				;料理の補正／能力50以下は切り捨てる
				;メイド服or執事服
				IF CFLAG:(LOCAL:1):92 == 1 || CFLAG:(LOCAL:1):92 == 4
					LOCAL:11 += MAX(ABL_POWER_X(ABL:(LOCAL:1):料理 + ABL:(LOCAL:1):衣装嗜好, LOCAL:1) - ABL_50_POWER, 0)
				ELSE
					LOCAL:11 += MAX(ABL_POWER_X(ABL:(LOCAL:1):料理, LOCAL:1) - ABL_50_POWER, 0)
				ENDIF
			ENDIF
		NEXT
		LOCAL:5 = SQRT(LOCAL:10) * 20 + SQRT(LOCAL:11) * 10

		;50000を超えた分は1/3にする
		SIF LOCAL:5 >= 50000
			LOCAL:5 = (LOCAL:5 - 50000) / 3 + 50000

		;政策補正
		SELECTCASE COUNTRY_POLICY:(LOCAL:0)
		;経済ランク3
		CASE 6
				TIMES LOCAL:5, 2.50
		;経済ランク2
		CASE 3
				TIMES LOCAL:5, 1.70
		;経済ランク1
		CASE 0
				TIMES LOCAL:5, 1.20
		;経済ランク-1
		CASE 4, 8
				TIMES LOCAL:5, 0.875
		;経済ランク-2
		CASE 7
				TIMES LOCAL:5, 0.65
		CASEELSE
		ENDSELECT

;		;内政型だとさらに1.1倍
;		SELECTCASE COUNTRY_AI_TYPE:(LOCAL:0)
;		CASE AI_内政
;			SIF LOCAL != CFLAG:MASTER:1
;				TIMES LOCAL:5, 1.10
;		CASEELSE
;		ENDSELECT
		
		;成長値に所有都市数の補正を掛けて都市を成長させる
		LOCAL:6 = GET_OWN_CITY(LOCAL:0)
		CALL GROW_COUNTRY_ECONOMY(LOCAL:0, LOCAL:5 * LOCAL:6 / (LOCAL:6 + 3))
	ENDIF
NEXT

;-------------------------------------------------
;税収処理関数
;-------------------------------------------------
@GAIN_COUNTRY_TAX
#DIM TAX_VALUE
#DIM POLICY
#DIM COUNTS, 10

VARSET COUNTS
VARSET TAX_VALUE
VARSET POLICY


FOR COUNTS:0, 0, MAX_CITY
	SIF CITY_TYPE:(COUNTS:0) || CITY_OWNER:(COUNTS:0) == 0
		CONTINUE
	SELECTCASE COUNTRY_POLICY:(CITY_OWNER:(COUNTS:0))
	CASE 100

	CASEELSE
		TAX_VALUE = 50
	ENDSELECT

	MONEY:(CITY_OWNER:(COUNTS:0)) += CITY_ECONOMY:(COUNTS:0) * TAX_VALUE / (100 * 100)
NEXT
;-------------------------------------------------
;ARG:0勢力の都市の経済規模を合計ARG:1だけ成長させる関数
;-------------------------------------------------
@GROW_COUNTRY_ECONOMY(ARG:0, ARG:1)
;乱数制御に使用
#DIM CUT_POS, MAX_CITY

;所有都市ごとの成長率を、合計成長量を一定にしつつランダムに設定
LOCAL:12 = GET_OWN_CITY(ARG:0)
LOCAL:13 = LOCAL:12 * 70
CUT_POS:0 = 0
CUT_POS:(LOCAL:12) = LOCAL:13
FOR LOCAL:1, 1, LOCAL:12
	CUT_POS:(LOCAL:1) = RAND:(LOCAL:13)
	FOR LOCAL:2, 1, LOCAL:1
		IF CUT_POS:(LOCAL:1) < CUT_POS:(LOCAL:2)
			FOR LOCAL:3, LOCAL:1, LOCAL:2, -1
				SWAP CUT_POS:(LOCAL:3 - 1), CUT_POS:(LOCAL:3)
			NEXT
		ENDIF
	NEXT
NEXT

;成長値に応じて都市を成長させる
LOCAL:14 = 0
FOR LOCAL:1, 0, MAX_CITY
	IF CITY_OWNER:(LOCAL:1) == ARG:0
		CITY_ECONOMY:(LOCAL:1) += ARG:1 * (CUT_POS:(LOCAL:14 + 1) - CUT_POS:(LOCAL:14) + 30) / (LOCAL:12 * 100)

		;経済規模が限界値を超えていれば限界値が上昇
		IF CITY_ECONOMY:(LOCAL:1) > CITY_ECONOMY_LIMIT:(LOCAL:1)
			CITY_ECONOMY_LIMIT:(LOCAL:1) += (CITY_ECONOMY:(LOCAL:1) - CITY_ECONOMY_LIMIT:(LOCAL:1)) / 50
			CITY_ECONOMY_LIMIT:(LOCAL:1) = MIN(CITY_ECONOMY_LIMIT:(LOCAL:1), 999900)
			CITY_ECONOMY:(LOCAL:1) = CITY_ECONOMY_LIMIT:(LOCAL:1)
		ENDIF
		LOCAL:14 ++
	ENDIF
NEXT

;-------------------------------------------------
;自国へ誘った士官の移動 ARG:0は移動元の勢力番号
;-------------------------------------------------
@GO_TO_MASTERS_COUNTRY(ARG:0)
FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:(LOCAL:0):1 == ARG:0 && CFLAG:(LOCAL:0):48
		;死亡状態ならフラグをクリア
		IF CFLAG:(LOCAL:0):12 == 2
			CFLAG:(LOCAL:0):48 = 0
		;現時点で他国の捕虜になっている場合は一時保留
		ELSEIF CFLAG:(LOCAL:0):9 >= 1 && CFLAG:(LOCAL:0):9 != CFLAG:MASTER:1
		;現時点で主人公が放浪状態ならフラグをクリア
		ELSEIF CFLAG:MASTER:1 == 0
			CFLAG:(LOCAL:0):48 = 0
		;それ以外なら主人公の国家へ移動
		ELSE
			LOCAL:2 = GET_COUNTRY_BOSS(CFLAG:(LOCAL:0):1)
			SETCOLOR 0xFF8000
			IF LOCAL:2 >= 0
				PRINTFORMW %NAME:(LOCAL:0)%は%NAME:(LOCAL:2)%勢力を抜けだし、%ANAME(MASTER)%の元に駆け付けました
			ELSE
				PRINTFORMW %NAME:(LOCAL:0)%は%ANAME(MASTER)%の元に駆け付けました
			ENDIF
			RESETCOLOR
			CFLAG:(LOCAL:0):1 = CFLAG:MASTER:1
			CFLAG:(LOCAL:0):48 = 0
			;対象国家との関係が悪化
			CALL CHANGE_RELATION_C_TO_C(ARG:0, CFLAG:MASTER:1, -125)
			;君主から主人公への印象はさらに悪化
			CALL CHANGE_RELATION_O_TO_O(ARG:0, CFLAG:MASTER:1, -125)
		ENDIF
	ENDIF
NEXT

;-------------------------------------------------
;野盗の処理
;-------------------------------------------------
@BANDIT_TURNEND(ARG:0)
#DIM 兵数
#DIM 増加量
#DIM 部隊番号
#DIM 出兵先
#DIM LCOUNT
#DIM 中継点の数
#DIM 接続都市所有者,2
#DIM 解散フラグ
#DIM 都市数, 3

VARSET LOCAL
VARSET 兵数
VARSET 部隊番号
VARSET 出兵先
VARSET 中継点の数
VARSET 解散フラグ
VARSET 都市数
;DEBUGPRINTL 野盗ターンエンド
;各勢力の支配都市数を元に徴兵数及び編成時の兵数を決定
FOR LCOUNT, 1, MAX_COUNTRY
	SIF !IS_COUNTRY(LCOUNT)
		CONTINUE
	都市数:0 = GET_OWN_CITY(LCOUNT)
	ARRAYSORT 都市数, FORWARD
NEXT
;最大勢力の支配都市数と第2勢力の都市数の2倍を基準値として計算
都市数:0 = 都市数:1 * 2 + 都市数:2

;基準値の２乗の80から120%の徴兵、最大は最大兵数の5%（最大兵数はその時点での全都市の経済規模の1%）
増加量 = MIN(POWER(都市数:0, 2) * (80 + RAND:41) / 100, SUMARRAY(CITY_ECONOMY) / 2000)
COUNTRY_SOLDIER:(ARG:0) = MIN(SUMARRAY(CITY_ECONOMY) / 100, COUNTRY_SOLDIER:(ARG:0) + 増加量)

DEBUGPRINTFORML 【野盗徴兵:{DAY, 3}】:{都市数:0}, {都市数:1}, {都市数:2} / {増加量}

FOR LCOUNT, 0, MAX_UNIT
	IF UNIT_SOLDIER:(ARG:0):LCOUNT > 0
		接続都市所有者:0 = CITY_OWNER:(CITY_ROOT:(UNIT_POSITION:(ARG:0):LCOUNT):0)
		接続都市所有者:1 = CITY_OWNER:(CITY_ROOT:(UNIT_POSITION:(ARG:0):LCOUNT):1)
		;2都市の所有者が両方無所属勢力、ないし2都市の所有者が敵対関係にない(同盟とか、両方同じ国とか)場合は解散
		IF (!IS_COUNTRY(接続都市所有者:0) && !IS_COUNTRY(接続都市所有者:1)) || CHECK_COUNTRY_RELATION_F(接続都市所有者:0, 接続都市所有者:1)
			CALL CLEAR_UNIT(ARG:0, LCOUNT)
			解散フラグ = 1
		;そうでないなら兵数が増える
		ELSE
			TIMES UNIT_SOLDIER:(ARG:0):LCOUNT, 1.03
			UNIT_SOLDIER:(ARG:0):LCOUNT = MIN(UNIT_SOLDIER:(ARG:0):LCOUNT, 10000)
		ENDIF
	ENDIF
NEXT
;DEBUGPRINTFORML 野盗全体:{COUNTRY_SOLDIER:(ARG:0)}
;特定条件で出兵
IF DAY % 3 == 0 || 解散フラグ
	;空いている部隊を調べる
	;空いていたら部隊作成
	FOR LCOUNT, 0, MAX_UNIT
		IF UNIT_SOLDIER:(ARG:0):LCOUNT == 0
			部隊番号 = LCOUNT
			兵数 = MIN(COUNTRY_SOLDIER:(ARG:0) / 2, POWER(都市数:0, 2) * RAND(70, 120) / 10)
			DEBUGPRINTFORML 【野盗派兵:{DAY, 3}】:{兵数}
			UNIT_SOLDIER:(ARG:0):LCOUNT = 兵数
			COUNTRY_SOLDIER:(ARG:0)  -= 兵数
			;DEBUGPRINTFORML 兵数予定：{兵数}
			BREAK
		ENDIF
	NEXT
	;出兵していたら、中継地点から適当にチョイス
	;なおCITYは0番を空っぽにし、1から始める仕様。中継点を得る場合、ループは1から始めないといけない（それか、GET_CITY_NUMで得られる値に1を足さないといけない)
	IF 兵数
		FOR LCOUNT, 0, MAX_CITY
			;DEBUGPRINTFORML 配置場所探索中
			;接続先があることを、単に設定されていない場所と中継点との違いであるみなす
			IF CITY_TYPE:LCOUNT == 1 && CITY_ROOT:(LCOUNT):0
				;DEBUGPRINTFORML 接続先発見:{LCOUNT+GET_CITY_NUM()}
				;中継点を見つけたら、その2都市の所有者を取得する。
				接続都市所有者:0 = CITY_OWNER:(CITY_ROOT:(LCOUNT):0)
				接続都市所有者:1 = CITY_OWNER:(CITY_ROOT:(LCOUNT):1)
				;2都市の所有者が両方無所属勢力、ないし2都市の所有者が敵対関係にない(同盟とか、両方同じ国とか)場合は候補としない。
				IF (!IS_COUNTRY(接続都市所有者:0) && !IS_COUNTRY(接続都市所有者:1)) || CHECK_COUNTRY_RELATION_F(接続都市所有者:0, 接続都市所有者:1)
				ELSE
					;DEBUGPRINTFORML LOCAL:{LCOUNT - GET_CITY_NUM() - 1}
					LOCAL:(中継点の数) = LCOUNT
					中継点の数 ++
				ENDIF
			ENDIF
		NEXT
		;中継点の数が0なら諦める
		IF 中継点の数
			CALL FISHER_YATES_SHAFFLE(中継点の数)
			UNIT_POSITION:(ARG:0):部隊番号 = LOCAL:(SHAFFLE_ARRAY:0)
			;士官が行動可能な状態にあるかどうかのリストを作成
			CALL TMP_CREATE_IS_FREE_MAP
			;部隊が最強となるような士官の組み合わせを得る
			CALL CHECK_COMMANDER_BEST(ARG:0)
			FOR LCOUNT, 0, 3
				SIF UNIT_COMMANDER_BEST:(LCOUNT) >= 0
					CALL SET_UNIT_COMMANDER(ARG:0, 部隊番号, LCOUNT, UNIT_COMMANDER_BEST:(LCOUNT))
			NEXT
			;DEBUGPRINTFORML LOCAL:SHAFFLE_ARRAY:0 {LOCAL:(SHAFFLE_ARRAY:0)}
			;DEBUGPRINTFORML %CITY_NAME:(LOCAL:(SHAFFLE_ARRAY:0))%に出兵
			;DEBUGPRINTFORML 兵数:{兵数}
		ELSE
			;DEBUGPRINTFORML 中継点なし。あきらめ
			UNIT_SOLDIER:(ARG:0):部隊番号 = 0
			COUNTRY_SOLDIER:(ARG:0) += 兵数
		ENDIF
	ENDIF
ENDIF


;-------------------------------------------------
;ARG:0勢力のARG:1番の部隊に「人気」もちの武将が存在する場合、その部隊の兵数を増加させる処理
;-------------------------------------------------
@IDOL_GATHER_SOLDIER(ARG:0, ARG:1)
#DIM LCOUNT
#DIM 武将
#DIM 増加数
FOR LCOUNT, 0, 3
	武将 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LCOUNT)
	IF 武将 >= 0 && TALENT:武将:人気
		増加数 = GET_SUM_ECONOMY(ARG:0) / 100
		TIMES 増加数, 0.10
		IF ARG:0 == CFLAG:MASTER:1
			PRINTFORML
			PRINTFORML %ANAME(武将)%の人気っぷりが、部隊に人を集めているようだ……
			PRINTFORM {ARG:1+1}番の部隊に
			PRINTFORM {増加数}
			PRINTFORML の義勇兵が集まりました
			PRINTFORML 兵数:{UNIT_SOLDIER:(ARG:0):(ARG:1)} → {UNIT_SOLDIER:(ARG:0):(ARG:1) + 増加数}
		ENDIF
		UNIT_SOLDIER:(ARG:0):(ARG:1) += 増加数
	ENDIF
NEXT
