;-------------------------------------------------
;侵攻部隊(ARG:0勢力、ARG:1部隊) vs 侵攻部隊(ARG:2勢力、ARG:3部隊)の戦闘
;-------------------------------------------------
@BATTLE_UNIT_TO_UNIT(ARG:0, ARG:1, ARG:2, ARG:3)
LOCAL:5 = UNIT_POSITION:(ARG:0):(ARG:1)
BATTLE_NAME:0 = %NAME:GET_COUNTRY_BOSS(ARG:0)%
BATTLE_NAME:1 = %NAME:GET_COUNTRY_BOSS(ARG:2)%

PRINTFORM %GET_RELAYNAME(LOCAL:5)%において%BATTLE_NAME:0%軍
LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:0, ARG:1)%
IF LOCALS:2 != ""
	PRINTFORM の<%LOCALS:2%>部隊
ENDIF
PRINTFORM と%BATTLE_NAME:1%軍
LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:2, ARG:3)%
IF LOCALS:2 != ""
	PRINTFORM の<%LOCALS:2%>部隊
ENDIF
PRINTL が衝突しました

;片方が主人公勢力なら口上表示
IF ARG:0 == CFLAG:MASTER:所属 || ARG:2 == CFLAG:MASTER:所属
	FOR LOCAL:0, 0, 3
		LOCAL:1 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 300)
		ENDIF
	NEXT
	FOR LOCAL:0, 0, 3
		LOCAL:1 = GET_UNIT_COMMANDER(ARG:2, ARG:3, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 300)
		ENDIF
	NEXT
ENDIF

;■戦闘の計算
CALL BATTLE_CALC(ARG:0, ARG:1, ARG:2, ARG:3)

;■ダメージの適用
UNIT_SOLDIER:(ARG:0):(ARG:1) -= BATTLE_DMG:0
UNIT_SOLDIER:(ARG:2):(ARG:3) -= BATTLE_DMG:1

;自勢力のみ詳細を表示(ただし捕虜になっていると見られない)
IF FLAG:観戦モード || (CFLAG:MASTER:所属 >= 1 && CFLAG:MASTER:捕虜先 == 0 && (ARG:0 == CFLAG:MASTER:所属 || ARG:2 == CFLAG:MASTER:所属))
	PRINTFORML %BATTLE_NAME:0, 10, RIGHT%軍 {BATTLE_SOL:0, 6, RIGHT} → {UNIT_SOLDIER:(ARG:0):(ARG:1), 6, RIGHT}
	PRINTFORML %BATTLE_NAME:1, 10, RIGHT%軍 {BATTLE_SOL:1, 6, RIGHT} → {UNIT_SOLDIER:(ARG:2):(ARG:3), 6, RIGHT}
ENDIF

;好感度・敵対値の変動
LOCAL:1 = COUNTRY_AI_TYPE:(ARG:0)
LOCAL:2 = COUNTRY_AI_TYPE:(ARG:2)

IF ARG:2 != CFLAG:MASTER:所属
	CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, (-5 * AI_RELATION:(LOCAL:1):(LOCAL:2) / 100), (20 * 100 / AI_RELATION:(LOCAL:1):(LOCAL:2)))
ELSE
	CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, (-5 * AI_RELATION:(LOCAL:1):0 / 100), (20 * 100 / AI_RELATION:(LOCAL:1):0))
ENDIF

IF ARG:0 != CFLAG:MASTER:所属
	CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, (-5 * AI_RELATION:(LOCAL:2):(LOCAL:1) / 100), (20 * 100 / AI_RELATION:(LOCAL:2):(LOCAL:1)))
ELSE
	CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, (-5 * AI_RELATION:(LOCAL:2):0 / 100), (20 * 100 / AI_RELATION:(LOCAL:2):0))
ENDIF

;攻撃側部隊の兵数が0
IF UNIT_SOLDIER:(ARG:0):(ARG:1) <= 0
	IF ARG:0 == CFLAG:MASTER:所属
		LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:0, ARG:1)%
		IF LOCALS:2 == ""
			LOCALS:2 = 我が軍の
		ELSE
			LOCALS:2 = <%LOCALS:2%>
		ENDIF
		CALL COLORPRINTFORM(@"%LOCALS:2%部隊が潰走しました……", COLOR("警告"), "W")
	ELSE
		PRINTFORML %BATTLE_NAME:0%軍は潰走しました
	ENDIF
	IF ARG:2 != CFLAG:MASTER:所属
		CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, (-10 * AI_RELATION:(LOCAL:1):(LOCAL:2) / 100), (50 * 100 / AI_RELATION:(LOCAL:1):(LOCAL:2)))
	ELSE
		CALL CHANGE_RELATION_C_TO_C(ARG:0, ARG:2, (-10 * AI_RELATION:(LOCAL:1):0 / 100), (50 * 100 / AI_RELATION:(LOCAL:1):0))
	ENDIF
	;将の捕獲
	CALL UNIT_BREAK_CAPTURE(ARG:2, ARG:3, ARG:0, ARG:1)
	;壊滅した部隊の後始末
	CALL CLEAR_UNIT(ARG:0, ARG:1)
ELSE
	UNIT_FBATTLE:(ARG:2):(ARG:3) = 1
ENDIF

;防御側部隊の兵数が0
IF UNIT_SOLDIER:(ARG:2):(ARG:3) <= 0
	IF ARG:2 == CFLAG:MASTER:所属
		LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:2, ARG:3)%
		IF LOCALS:2 == ""
			LOCALS:2 = 我が軍の
		ELSE
			LOCALS:2 = <%LOCALS:2%>
		ENDIF
		CALL COLORPRINTFORM(@"%LOCALS:2%部隊が潰走しました……", COLOR("警告"), "W")
	ELSE
		PRINTFORML %BATTLE_NAME:1%軍は潰走しました
	ENDIF
	IF ARG:0 != CFLAG:MASTER:所属
		CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, (-10 * AI_RELATION:(LOCAL:2):(LOCAL:1) / 100), (50 * 100 / AI_RELATION:(LOCAL:2):(LOCAL:1)))
	ELSE
		CALL CHANGE_RELATION_C_TO_C(ARG:2, ARG:0, (-10 * AI_RELATION:(LOCAL:2):0 / 100), (50 * 100 / AI_RELATION:(LOCAL:2):0))
	ENDIF
	;将の捕獲
	CALL UNIT_BREAK_CAPTURE(ARG:0, ARG:1, ARG:2, ARG:3)
	;壊滅した部隊の後始末
	CALL CLEAR_UNIT(ARG:2, ARG:3)
ELSE
	UNIT_FBATTLE:(ARG:0):(ARG:1) = 1
ENDIF

;戦闘が行われたところが中継点でなければその都市に攻撃カウント＋1
;町の近くでドンパチしていたら、ね
SIF !CITY_TYPE:(LOCAL:5)
	CITY_IS_ATTACKED:(LOCAL:5) ++

;自勢力のみウェイト
IF (ARG:0 == CFLAG:MASTER:所属 || ARG:2 == CFLAG:MASTER:所属 || FLAG:観戦モード) && !LOCAL:9 && CFLAG:MASTER:捕虜先 == 0
	WAIT
ENDIF

;-------------------------------------------------
;侵攻部隊(ARG:0勢力、ARG:1部隊) vs 防衛部隊(都市ARG:2)の戦闘
;-------------------------------------------------
@BATTLE_UNIT_TO_CITY(ARG:0, ARG:1, ARG:2)
LOCAL:9 = 0

LOCAL:6 = CITY_OWNER:(ARG:2)
BATTLE_NAME:0 = %NAME:GET_COUNTRY_BOSS(ARG:0)%

LOCAL:5 = GET_COUNTRY_BOSS(CITY_OWNER:(ARG:2))
IF LOCAL:5 >= 0
	BATTLE_NAME:1 = %NAME:(LOCAL:5)%
ELSE
	BATTLE_NAME:1 = %GET_CITYNAME(ARG:2)%
ENDIF

PRINTFORM %BATTLE_NAME:0%軍
LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:0, ARG:1)%
IF LOCALS:2 != ""
	PRINTFORM の<%LOCALS:2%>部隊
ENDIF
PRINT は
IF LOCAL:5 >= 0
	PRINTFORM %BATTLE_NAME:1%の所領であ
	LOCALS:2 = %GET_CITY_COMMANDER_NAME(ARG:2)%
	IF LOCALS:2 != ""
		PRINTFORM り<%LOCALS:2%>の守る
	ELSE
		PRINT る
	ENDIF
ENDIF
PRINT 
PRINTFORML %GET_CITYNAME(ARG:2)%の防衛部隊に攻撃を仕掛けました
;その都市がその勢力にとって最後の1都市なら、全兵力を傾ける
IF LOCAL:5 >= 0 && GET_OWN_CITY(CITY_OWNER:(ARG:2)) == 1
	PRINTFORML %GET_CITYNAME(ARG:2)%は%BATTLE_NAME:1%にとっての最後の所領です
	SETCOLOR COLOR("シアン")
	PRINTFORML %BATTLE_NAME:1%は%GET_CITYNAME(ARG:2)%防衛に全兵力を注いだ！
	RESETCOLOR
	CALL TMP_CREATE_IS_FREE_MAP
	CALL SET_CITY_COMMANDER_BEST(ARG:2, 1)
	CITY_SOLDIER:(ARG:2) += COUNTRY_SOLDIER:(CITY_OWNER:(ARG:2))
	COUNTRY_SOLDIER:(CITY_OWNER:(ARG:2)) = 0
ENDIF
;片方が主人公勢力なら口上表示
IF ARG:0 == CFLAG:MASTER:所属 || CITY_OWNER:(ARG:2) == CFLAG:MASTER:所属
	FOR LOCAL:0, 0, 3
		LOCAL:1 = GET_UNIT_COMMANDER(ARG:0, ARG:1, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 301)
		ENDIF
	NEXT
	FOR LOCAL:0, 0, 2
		LOCAL:1 = GET_CITY_COMMANDER(ARG:2, LOCAL:0)
		IF LOCAL:1 >= 0
			CALL KOJO_EVENT(LOCAL:1, 302)
		ENDIF
	NEXT
ENDIF

;■戦闘の計算
CALL BATTLE_CALC(ARG:0, ARG:1, ARG:2, -1)

;■ダメージの適用
UNIT_SOLDIER:(ARG:0):(ARG:1) -= BATTLE_DMG:0
CITY_SOLDIER:(ARG:2) -= BATTLE_DMG:1

;自勢力のみ詳細を表示(ただし捕虜になっていると見られない)
IF FLAG:観戦モード || (CFLAG:MASTER:所属 >= 1 && CFLAG:MASTER:捕虜先 == 0 && (ARG:0 == CFLAG:MASTER:所属 || LOCAL:6 == CFLAG:MASTER:所属))
	PRINTFORML %BATTLE_NAME:0, 10, RIGHT%軍 {BATTLE_SOL:0, 6, RIGHT} → {UNIT_SOLDIER:(ARG:0):(ARG:1), 6, RIGHT}
	PRINTFORML %BATTLE_NAME:1, 10, RIGHT%軍 {BATTLE_SOL:1, 6, RIGHT} → {CITY_SOLDIER:(ARG:2), 6, RIGHT}
ENDIF

;都市の兵数が0
IF CITY_SOLDIER:(ARG:2) <= 0
	CITY_IS_ATTACKED:(ARG:2) = 0

	;都市占領による略奪
	;LOCAL 10:その都市に備蓄されていた財産
	;無所属の都市は経済規模の30%を備蓄しているとみなす
	IF LOCAL:6 > 0
		LOCAL:10 = MONEY:(LOCAL:6) * CITY_ECONOMY:(ARG:2) / GET_SUM_ECONOMY(LOCAL:6)
		MONEY:(LOCAL:6) -= LOCAL:10
		MONEY:(ARG:0) += LOCAL:10 * 90 / 100
	ELSE
		LOCAL:10 = CITY_ECONOMY:(ARG:2) * 30 / (100 * 10)
		MONEY:(ARG:0) += LOCAL:10 * 90 / 100
	ENDIF
	;DEBUGPRINTFORML {DAY,3}【略奪】\@LOCAL:6 ? %NAME:(GET_COUNTRY_BOSS(LOCAL:6))% # 無所属\@＞%NAME:(GET_COUNTRY_BOSS(ARG:0))%:{LOCAL:10}
	IF CITY_OWNER:(ARG:2) == CFLAG:MASTER:所属 && !FLAG:観戦モード
		CALL COLORPRINTFORM(@"%BATTLE_NAME:0%軍に%GET_CITYNAME(ARG:2)%を奪われました！", COLOR("警告"), "W")
	ELSEIF ARG:0 == CFLAG:MASTER:所属
		CALL COLORPRINTFORM(@"%GET_CITYNAME(ARG:2)%を占領しました！", COLOR("注意"), "W")
	ELSE
		PRINTFORML %BATTLE_NAME:0%軍が%GET_CITYNAME(ARG:2)%を占領しました
	ENDIF
	CITY_OWNER:(ARG:2) = ARG:0
	CITY_COMMANDER:(ARG:2) = 0


	;都市の経済変動
	IF CITY_ECONOMY_LIMIT:(ARG:2) > 800
		CITY_ECONOMY_LIMIT:(ARG:2) = MAX(CITY_ECONOMY_LIMIT:(ARG:2) * 93 / 100, 800)
	ENDIF
	CITY_ECONOMY:(ARG:2) = MIN(CITY_ECONOMY:(ARG:2), CITY_ECONOMY_LIMIT:(ARG:2))
	IF CITY_ECONOMY:(ARG:2) > 500
		CITY_ECONOMY:(ARG:2) = MAX(CITY_ECONOMY:(ARG:2) * 80 / 100, 500)
	ENDIF

	;都市占領フラグのセット
	UNIT_CAPTURE_CITY:(ARG:0):(ARG:1) = 1

	;部隊壊滅時の士官の捕獲
	CALL UNIT_BREAK_CAPTURE(ARG:0, ARG:1, ARG:2, -1)

	;好感度・敵対値の変動
	LOCAL:1 = COUNTRY_AI_TYPE:(ARG:0)
	LOCAL:2 = COUNTRY_AI_TYPE:(LOCAL:6)

	IF ARG:0 != CFLAG:MASTER:所属
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, (-10 * AI_RELATION:(LOCAL:2):(LOCAL:1) / 100), (100 * 100 / AI_RELATION:(LOCAL:2):(LOCAL:1)))
	ELSE
		CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, (-10 * AI_RELATION:(LOCAL:2):0 / 100), (100 * 100 / AI_RELATION:(LOCAL:2):0))
	ENDIF

	;勢力の滅亡判定
	IF IS_COUNTRY(LOCAL:6) && GET_OWN_CITY(LOCAL:6) <= 0
		IF COUNTRY_EVENT_ID:(LOCAL:6) == SP_COUNTRY_ID:(特殊勢力_野盗)
			IF CFLAG:MASTER:所属 == LOCAL:6 && CFLAG:(LOCAL:0):捕虜先 != 0
				SETCOLOR COLOR("警告")
				PRINTFORMW %NAME:MASTER%の仕えていた%BATTLE_NAME:1%たちは、都市を全て失いました…
				PRINTFORMW そのごたごたで、捕らえていた捕虜たちが全て逃げていってしまいました
				PRINTFORMW ですが、%BATTLE_NAME:1%たちは滅亡したわけではありません
				PRINTFORMW どこにでも湧くのが%BATTLE_NAME:1%、また蜂起すればよいのです…
				RESETCOLOR
			ELSE
				SETCOLOR COLOR("注意")
				PRINTFORMW %BATTLE_NAME:1%の奪った都市は全て取り返されました！
				PRINTFORMW そのごたごたで、捕らえていた捕虜たちが全て解放されました
				PRINTFORMW しかし、%BATTLE_NAME:1%たちは滅亡したわけではありません
				PRINTFORMW どこにでも湧くのが%BATTLE_NAME:1%、根絶せしめるのは不可能です
				RESETCOLOR
			ENDIF
			SETCOLOR COLOR("シアン")
			PRINTFORMW %BATTLE_NAME:1%を撤退せしめた%ANAME(GET_COUNTRY_BOSS(ARG:0))%は、他の勢力から深く感謝されています…
			RESETCOLOR
			FOR LOCAL:0, 0, CHARANUM
				SIF CFLAG:LOCAL:捕虜先 == LOCAL:6
					CALL CAPTURE(LOCAL, 0)
			NEXT
			FOR LOCAL:0, 0, MAX_COUNTRY
				SIF IS_COUNTRY(LOCAL) && LOCAL != ARG:0 && LOCAL != LOCAL:6
					CALL CHANGE_RELATION_C_TO_C(LOCAL, ARG:0, (1500 - REL_LIKE:LOCAL:(ARG:0)) / 5, REL_HATE:LOCAL:(ARG:0) / 5)
			NEXT
			;外交禁止フラグを立てる
			COUNTRY_IS_CLOSED:(LOCAL:6) = 1
		ELSE
			IF CFLAG:MASTER:所属 == LOCAL:6 && CFLAG:(LOCAL:0):捕虜先 != 0
				SETCOLOR COLOR("警告")
				PRINTFORMW %NAME:MASTER%の仕えていた%BATTLE_NAME:1%勢力は滅亡してしまいました…
				RESETCOLOR
			ELSE
				SETCOLOR COLOR("警告")
				PRINTFORMW %BATTLE_NAME:1%勢力は滅亡しました
				RESETCOLOR
			ENDIF

			;敗将の処理
			CALL LOSERS_ACTION(LOCAL:6, ARG:0)

			IF ARG:0 == CFLAG:MASTER:所属
				LOCAL:9 = 1
			ENDIF

			;後始末
			CALL DESTROY_COUNTRY(LOCAL:6)
		ENDIF
	ENDIF

;都市が占拠されなかった場合
ELSE
	CITY_IS_ATTACKED:(ARG:2) ++

	;侵攻部隊の兵数が0
	IF UNIT_SOLDIER:(ARG:0):(ARG:1) <= 0
		IF ARG:0 == CFLAG:MASTER:所属
			LOCALS:2 = %GET_UNIT_COMMANDER_NAME(ARG:0, ARG:1)%
			IF LOCALS:2 == ""
				LOCALS:2 = 我が軍の
			ELSE
				LOCALS:2 = <%LOCALS:2%>
			ENDIF
			CALL COLORPRINTFORM(@"%LOCALS:2%部隊が潰走しました……", COLOR("警告"), "W")
		ELSE
			PRINTFORML %BATTLE_NAME:0%軍は潰走しました
		ENDIF
		;都市所有勢力が居た場合のみ
		IF LOCAL:5 >= 0
			;部隊壊滅時の士官の捕獲
			CALL UNIT_BREAK_CAPTURE(ARG:2, -1, ARG:0, ARG:1)
		ENDIF

		;壊滅した部隊の後始末
		CALL CLEAR_UNIT(ARG:0, ARG:1)

	ELSE
		;好感度・敵対値の変動
		LOCAL:1 = COUNTRY_AI_TYPE:(ARG:0)
		LOCAL:2 = COUNTRY_AI_TYPE:(LOCAL:6)

		IF ARG:0 != CFLAG:MASTER:所属
			CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, (-5 * AI_RELATION:(LOCAL:2):(LOCAL:1) / 100), (50 * 100 / AI_RELATION:(LOCAL:2):(LOCAL:1)))
		ELSE
			CALL CHANGE_RELATION_C_TO_C(LOCAL:6, ARG:0, (-5 * AI_RELATION:(LOCAL:2):0 / 100), (50 * 100 / AI_RELATION:(LOCAL:2):0))
		ENDIF
	ENDIF
ENDIF

;自勢力のみウェイト
IF (ARG:0 == CFLAG:MASTER:所属 || LOCAL:6 == CFLAG:MASTER:所属 || FLAG:観戦モード) && !LOCAL:9 && CFLAG:MASTER:捕虜先 == 0
	WAIT
ENDIF

;-------------------------------------------------
;戦闘の共通計算
;引数 0:攻撃側勢力 1:攻撃側部隊 2:対象勢力 3:対象部隊 ※ARG:3が0未満の場合、防衛部隊とみなし、ARG:2を都市番号として使用
;-------------------------------------------------
@BATTLE_CALC(ARG:0, ARG:1, ARG:2, ARG:3)
;計略判定の基準値
#DIM SCHEME_BASE, 2

;戦闘関連の変数の初期化
VARSET BATTLE_RATE_DMG, 0
VARSET BATTLE_RATE_ATC, 0
VARSET BATTLE_RATE_GRD, 0
VARSET BATTLE_RATE_GRD_B, 0
VARSET SCHEME_BASE, 3200
VARSET BATTLE_FORCE_SCHEME, -1
VARSET SCHEME_BASE, ABL_50_POWER
VARSET BATTLE_SKILL_SEALED, 0

CALL GET_COMMANDER_ALL(ARG:0, ARG:1)
CALL SET_BATTLE_MIRROR_VAL(0, RESULT:0, RESULT:1, RESULT:2)
CALL GET_COMMANDER_ALL(ARG:2, ARG:3)
CALL SET_BATTLE_MIRROR_VAL(1, RESULT:0, RESULT:1, RESULT:2)

;戦闘力計算に先んじて発動する特殊計略の処理
CALL BATTLE_SP_SKILL(0, ARG:0, ARG:1, ARG:2, ARG:3)
CALL BATTLE_SP_SKILL(1, ARG:2, ARG:3, ARG:0, ARG:1)

LOCAL:5 = 1
BATTLE_SOL:0 = UNIT_SOLDIER:(ARG:0):(ARG:1)
BATTLE_ATC:0 = ATTACK_LEVEL(0, 0)
BATTLE_DEF:0 = DEFENSE_LEVEL(0, 0)
BATTLE_INT:0 = INTELLIGENCE_LEVEL(0, 0)
BATTLE_MAG:0 = MAGIC_LEVEL(0, 0)
BATTLE_F_UNIT:0 = 1
IF ARG:0 == CFLAG:MASTER:所属
	LOCAL:5 = 0
ENDIF
;防衛AIの場合攻撃力と防御に補正
IF ARG:0 != CFLAG:MASTER:所属 && COUNTRY_AI_TYPE:(ARG:0) == AI_防衛
	TIMES BATTLE_ATC:0, 0.85
	TIMES BATTLE_DEF:0, 1.10
ENDIF

IF ARG:3 >= 0
	BATTLE_SOL:1 = UNIT_SOLDIER:(ARG:2):(ARG:3)
	BATTLE_ATC:1 = ATTACK_LEVEL(1, 0)
	BATTLE_DEF:1 = DEFENSE_LEVEL(1, 0)
	BATTLE_INT:1 = INTELLIGENCE_LEVEL(1, 0)
	BATTLE_MAG:1 = MAGIC_LEVEL(1, 0)
	BATTLE_F_UNIT:1 = 1
	IF ARG:2 == CFLAG:MASTER:所属
		LOCAL:5 = 0
	ENDIF
	;防衛AIの場合攻撃力と防御に補正
	IF ARG:2 != CFLAG:MASTER:所属 && COUNTRY_AI_TYPE:(ARG:2) == AI_防衛
		TIMES BATTLE_ATC:1, 0.85
		TIMES BATTLE_DEF:1, 1.10
	ENDIF
ELSE
	BATTLE_SOL:1 = CITY_SOLDIER:(ARG:2)
	BATTLE_ATC:1 = ATTACK_LEVEL(1, ARG:2)
	BATTLE_DEF:1 = DEFENSE_LEVEL(1, ARG:2)
	BATTLE_INT:1 = INTELLIGENCE_LEVEL(1, ARG:2)
	BATTLE_MAG:1 = MAGIC_LEVEL(1, ARG:2)
	BATTLE_F_UNIT:1 = 0
	IF CITY_OWNER:(ARG:2) == CFLAG:MASTER:所属
		LOCAL:5 = 0
	ENDIF
	;防衛AIの場合攻撃力と防御に補正
	IF CITY_OWNER:(ARG:2) != CFLAG:MASTER:所属 && COUNTRY_AI_TYPE:(CITY_OWNER:(ARG:2)) == AI_防衛
		TIMES BATTLE_ATC:1, 0.85
		TIMES BATTLE_DEF:1, 1.10
	ENDIF
ENDIF



;基本値に影響を与える素質発動処理はここに
CALL BATTLE_BASE_SKILL(0, ARG:0, ARG:1, ARG:2, ARG:3)
CALL BATTLE_BASE_SKILL(1, ARG:2, ARG:3, ARG:0, ARG:1)
;★
;PRINTFORML 攻撃0={BATTLE_ATC:0, 8}   防御0={BATTLE_DEF:0, 8}
;PRINTFORMW 攻撃1={BATTLE_ATC:1, 8}   防御1={BATTLE_DEF:1, 8}

;戦力比計算
;兵数の多い側に兵力比の平方根×10/30/100％のボーナス
;とりあえず攻撃力と防御力のみ。知力や妖術が兵力で伸びてもどうかと思いますし
;兵力が同じなら？両軍にボーナスね
;LOCAL 30:攻撃側の兵数比 31:防御側の兵数比 32:補正倍率
LOCAL:30 = BATTLE_SOL:0 / MAX(BATTLE_SOL:1, 1)
LOCAL:31 = BATTLE_SOL:1 / MAX(BATTLE_SOL:0, 1)

;倍率設定
SELECTCASE CONFIG:312
CASE 1
	LOCAL:32 = 1
CASE 2
	LOCAL:32 = 3
CASE 3
	LOCAL:32 = 10
CASEELSE
	LOCAL:32 = 0

ENDSELECT

;補正計算。MAXはセイフティネット（元の値を割りこまないように）です
	BATTLE_ATC:0 = BATTLE_ATC:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10
	BATTLE_DEF:0 = BATTLE_DEF:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10
;	BATTLE_INT:0 = BATTLE_INT:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10
;	BATTLE_MAG:0 = BATTLE_MAG:0 * MAX(10 + SQRT(LOCAL:30) * LOCAL:32 , 10) / 10

	BATTLE_ATC:1 = BATTLE_ATC:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10
	BATTLE_DEF:1 = BATTLE_DEF:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10
;	BATTLE_INT:1 = BATTLE_INT:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10
;	BATTLE_MAG:1 = BATTLE_MAG:1 * MAX(10 + SQRT(LOCAL:31) * LOCAL:32 , 10) / 10

	;オーバフローして符号が反転する問題対策
	;しかたないので負数なら整数の最大値ブチ込みます
	SIF BATTLE_ATC:0 < 0
		BATTLE_ATC:0 = __INT_MAX__
	SIF BATTLE_DEF:0 < 0
		BATTLE_DEF:0 = __INT_MAX__
	SIF BATTLE_ATC:1 < 0
		BATTLE_ATC:1 = 0
	SIF BATTLE_DEF:1 < 0
		BATTLE_DEF:1 = 0

;敵軍補正
;主人公の所属する勢力が敵対勢力と戦う際、敵側に補正をかける。
;LOCAL 32:補正倍率(×10%の補正)

SELECTCASE CONFIG:314
;EASY、許されるのは小学生まで
CASE 0
	LOCAL:32 = 5
;NORMAL、変更なし
CASE 1
	LOCAL:32 = 10
;HARD、ちょっと大変
CASE 2
	LOCAL:32 = 25
;LUNATIC、仲間の力を信じましょう
CASE 3
	LOCAL:32 = 50
;EXTRA、この設定を変えずにプレイしてクリアできるのか、当方は関知いたしません
CASE 4
	LOCAL:32 = 150
;EXTRA+、死ぬがよい
CASE 5
	LOCAL:32 = 500
;その他、念のため
CASEELSE
	LOCAL:32 = 10
ENDSELECT

;共に主人公の所属しない勢力であれば補正は計算しない
SIF NOSAMES(CFLAG:MASTER:所属, ARG:0, ARG:3 < 0 ? CITY_OWNER:(ARG:2) # ARG:2)
	LOCAL:32 = 10

;補正計算
IF ARG:3 < 0 ? CITY_OWNER:(ARG:2) == CFLAG:MASTER:所属 # ARG:2 == CFLAG:MASTER:所属
	BATTLE_ATC:0 = BATTLE_ATC:0 * LOCAL:32 / 10
	BATTLE_DEF:0 = BATTLE_DEF:0 * LOCAL:32 / 10
	BATTLE_INT:0 = BATTLE_INT:0 * LOCAL:32 / 10
	BATTLE_MAG:0 = BATTLE_MAG:0 * LOCAL:32 / 10
	SCHEME_BASE:0 = SCHEME_BASE:0 * LOCAL:32 / 10
	;オーバフローして符号が反転する問題対策
	;しかたないので負数なら整数の最大値ブチ込みます
	SIF BATTLE_ATC:0 < 0
		BATTLE_ATC:0 = __INT_MAX__
	SIF BATTLE_DEF:0 < 0
		BATTLE_DEF:0 = __INT_MAX__
	SIF BATTLE_INT:0 < 0
		BATTLE_INT:0 = __INT_MAX__
	SIF BATTLE_MAG:0 < 0
		BATTLE_MAG:0 = __INT_MAX__
	SIF SCHEME_BASE:0 < 0
		SCHEME_BASE:0 = __INT_MAX__
ELSEIF ARG:0 == CFLAG:MASTER:所属
	BATTLE_ATC:1 = BATTLE_ATC:1 * LOCAL:32 / 10
	BATTLE_DEF:1 = BATTLE_DEF:1 * LOCAL:32 / 10
	BATTLE_INT:1 = BATTLE_INT:1 * LOCAL:32 / 10
	BATTLE_MAG:1 = BATTLE_MAG:1 * LOCAL:32 / 10
	SCHEME_BASE:1 = SCHEME_BASE:1 * LOCAL:32 / 10
	;オーバフローして符号が反転する問題対策
	;しかたないので負数なら整数の最大値ブチ込みます
	SIF BATTLE_ATC:1 < 0
		BATTLE_ATC:1 = __INT_MAX__
	SIF BATTLE_DEF:1 < 0
		BATTLE_DEF:1 = __INT_MAX__
	SIF BATTLE_INT:1 < 0
		BATTLE_INT:1 = __INT_MAX__
	SIF BATTLE_MAG:1 < 0
		BATTLE_MAG:1 = __INT_MAX__
	SIF SCHEME_BASE:1 < 0
		SCHEME_BASE:1 = __INT_MAX__
ENDIF

;疲労度によるペナルティ
;弱め／通常／強めでカウント4/3/2毎に0.95倍(* 19 / 20)します
;LOCAL 33:ペナルティの重さ 34:攻撃防御側のカウンタ用 35:ペナルティ処理カウンタ

;ペナルティ比重の設定
SELECTCASE CONFIG:313
CASE 1, 4
	LOCAL:33 = 4
CASE 2, 5
	LOCAL:33 = 3
CASE 3, 6
	LOCAL:33 = 2
CASEELSE
	LOCAL:33 = 9999
ENDSELECT

IF UNIT_TIRED_COUNT:(ARG:0):(ARG:1)
	FOR LOCAL:35 , 0 , UNIT_TIRED_COUNT:(ARG:0):(ARG:1) / LOCAL:33
		TIMES BATTLE_ATC:0 , 0.95
		TIMES BATTLE_DEF:0 , 0.95
		TIMES BATTLE_INT:0 , 0.95
		TIMES BATTLE_MAG:0 , 0.95
		TIMES SCHEME_BASE:0, 0.95

	NEXT
ENDIF
IF ARG:3 > 0 && UNIT_TIRED_COUNT:(ARG:2):(ARG:3)
	FOR LOCAL:35 , 0 , UNIT_TIRED_COUNT:(ARG:2):(ARG:3) / LOCAL:33
		TIMES BATTLE_ATC:1 , 0.95
		TIMES BATTLE_DEF:1 , 0.95
		TIMES BATTLE_INT:1 , 0.95
		TIMES BATTLE_MAG:1 , 0.95
		TIMES SCHEME_BASE:1, 0.95
	NEXT
ELSEIF CITY_IS_ATTACKED:(ARG:2)
	FOR LOCAL:35 , 0 , CITY_IS_ATTACKED:(ARG:2) / LOCAL:33
		TIMES BATTLE_ATC:1 , 0.95
		TIMES BATTLE_DEF:1 , 0.95
		TIMES BATTLE_INT:1 , 0.95
		TIMES BATTLE_MAG:1 , 0.95
		TIMES SCHEME_BASE:1, 0.95
	NEXT

ENDIF

IF RAND:(BATTLE_INT:0 + BATTLE_INT:1) >= (SCHEME_BASE:0 + SCHEME_BASE:1) || BATTLE_FORCE_SCHEME != -1
	;BATTLE_FORCE_SCHEMEによる強制策略
	IF BATTLE_FORCE_SCHEME == 0
		CALL TRY_SCHEME(0, 1, ARG:0, ARG:1, ARG:2, ARG:3)
	ELSEIF BATTLE_FORCE_SCHEME == 1
		CALL TRY_SCHEME(1, 0, ARG:2, ARG:3, ARG:0, ARG:1)
	ELSEIF RAND:(BATTLE_INT:0 + BATTLE_INT:1 - (SCHEME_BASE:0 + SCHEME_BASE:1)) < BATTLE_INT:0 - SCHEME_BASE:0
		;計略の発動
		CALL TRY_SCHEME(0, 1, ARG:0, ARG:1, ARG:2, ARG:3)
	;ARG:2勢力部隊の計略発動
	ELSE
		;計略の発動
		CALL TRY_SCHEME(1, 0, ARG:2, ARG:3, ARG:0, ARG:1)
	ENDIF
ENDIF

;■ダメージの計算
BATTLE_RATE_DMG:0 *= 10
BATTLE_RATE_DMG:1 *= 10

;妖術パワーによる割合ダメージの追加
BATTLE_RATE_DMG:0 += POWER_0625(BATTLE_MAG:0 * 10000 / MAX(BATTLE_DEF:1, 1))
BATTLE_RATE_DMG:1 += POWER_0625(BATTLE_MAG:1 * 10000 / MAX(BATTLE_DEF:0, 1))

;割合ダメージの処理
LOCAL:10 = BATTLE_SOL:0 * MAX(0, 1000 - BATTLE_RATE_DMG:1) * 8 / 10
LOCAL:11 = BATTLE_SOL:1 * MAX(0, 1000 - BATTLE_RATE_DMG:0) * 8 / 10

LOCAL:12 = LOCAL:11 * BATTLE_ATC:1 / MAX(BATTLE_DEF:0, 1)
LOCAL:13 = LOCAL:10 * BATTLE_ATC:0 / MAX(BATTLE_DEF:1, 1)

SIF LOCAL:12 < 0
	LOCAL:12 = __INT_MAX__
SIF LOCAL:13 < 0
	LOCAL:13 = __INT_MAX__

;基本部分の計算
LOCAL:12 = POWER_0625(LOCAL:12) * (RAND:401 + 800) / 4
LOCAL:13 = POWER_0625(LOCAL:13) * (RAND:401 + 800) / 4

;与被害倍率と被害軽減率の適用
LOCAL:12 = LOCAL:12 * (BATTLE_RATE_ATC:1 + 100) / 100 * MAX(0, 100 - BATTLE_RATE_GRD:0) / 100000
LOCAL:13 = LOCAL:13 * (BATTLE_RATE_ATC:0 + 100) / 100 * MAX(0, 100 - BATTLE_RATE_GRD:1) / 100000

;ダメージ変数に割合ダメージ分を追加
LOCAL:12 += BATTLE_SOL:0 * BATTLE_RATE_DMG:1 / 1000
LOCAL:13 += BATTLE_SOL:1 * BATTLE_RATE_DMG:0 / 1000

;追加された被害軽減率の適用
LOCAL:12 = LOCAL:12 * (100 - BATTLE_RATE_GRD_B:0) / 100
LOCAL:13 = LOCAL:13 * (100 - BATTLE_RATE_GRD_B:1) / 100

;★
;PRINTFORMW 割合ダメージ0:{BATTLE_RATE_DMG:0}  ダメージ{LOCAL:12}  妖術評価{BATTLE_MAG:0}  防御評価{BATTLE_DEF:0}
;PRINTFORMW 割合ダメージ1:{BATTLE_RATE_DMG:1}  ダメージ{LOCAL:13}  妖術評価{BATTLE_MAG:1}  防御評価{BATTLE_DEF:1}

;どちらかの兵数が0未満になった場合、過剰ダメージの割合だけ相手の被害を軽減
IF BATTLE_SOL:0 < LOCAL:12
	LOCAL:20 = BATTLE_SOL:0 * 10000 / LOCAL:12
	LOCAL:12 = BATTLE_SOL:0
	LOCAL:13 = LOCAL:13 * LOCAL:20 / 10000
ENDIF
IF BATTLE_SOL:1 < LOCAL:13
	LOCAL:20 = BATTLE_SOL:1 * 10000 / LOCAL:13
	LOCAL:13 = BATTLE_SOL:1
	LOCAL:12 = LOCAL:12 * LOCAL:20 / 10000
ENDIF

;疲労度の算出処理
;戦闘数カウント時、戦闘毎に3加算（戦うたびにペナルティは乗る）
;武将数カウント時、相手側の武将数+1が加算値となる（守将は二人分）
;LOCAL 36:武将カウンタ 37:攻撃側の武将数 38:防御側の武将数
;なお、この値はコンフィグで不使用の設定でも内部的に保持させる
LOCAL:37 = 1
LOCAL:38 = 1

SELECTCASE CONFIG:313
CASE 1 , 2
	UNIT_TIRED_COUNT:(ARG:0):(ARG:1) += 3
	IF ARG:3 > 0
		UNIT_TIRED_COUNT:(ARG:2):(ARG:3) += 3
	ELSE
		;防衛成功処理で+1しているのでここでは+3
		CITY_IS_ATTACKED:(ARG:2) += 3
	ENDIF
CASE 3 , 4
	FOR LOCAL:36 , 0 , 3
		SIF GET_UNIT_COMMANDER(ARG:0 , ARG:1 , LOCAL:36) > 0
			LOCAL:37 ++
		SIF GET_UNIT_COMMANDER(ARG:2 , ARG:3 , LOCAL:36) > 0
			LOCAL:38 ++
		IF ARG:3 < 0 && LOCAL:36 < 2
			SIF GET_CITY_COMMANDER(ARG:2 , LOCAL:36) > 0
				LOCAL:38 += 2
		ENDIF
	NEXT
	UNIT_TIRED_COUNT:(ARG:0):(ARG:1) += LOCAL:38
	IF ARG:3 > 0
		UNIT_TIRED_COUNT:(ARG:2):(ARG:3) += LOCAL:37 
	ELSE
		CITY_IS_ATTACKED:(ARG:2) += LOCAL:37
	ENDIF
CASEELSE

ENDSELECT


BATTLE_DMG:0 = LOCAL:12
BATTLE_DMG:1 = LOCAL:13

;-------------------------------------------------
;優先して発動する特殊計略の処理
;引数0～1には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=対象側
;引数 2:発動側勢力 3:発動側部隊 4:対象勢力 5:対象部隊
;※ARG:3、ARG:5が0未満の場合は防衛部隊とみなし、それぞれARG:2、ARG:4を都市番号として使用
;-------------------------------------------------
@BATTLE_SP_SKILL(発動側, 発動勢力, 発動部隊, 対象勢力, 対象部隊)
#DIM 発動側
#DIM 対象側
#DIM 発動勢力
#DIM 発動部隊
#DIM 対象勢力
#DIM 対象部隊
#DIM 発動側キャラ, 3
#DIM 対象側キャラ, 3
#DIM 発動キャラ
#DIM 対象キャラ
#DIM 発動キャラ素質
;[五斗米道]による特殊計略
;FOR LOCAL:0, 0, 3
;	LOCAL:2 = 発動側:(LOCAL:0)
;	IF LOCAL:2 >= 0 && TALENT:(LOCAL:2):五斗米道
;		SETCOLOR COLOR("警告")
;		PRINTFORML %NAME:(LOCAL:2)%は<<五斗米道>>の力で自軍の被害を軽減した！
;		BATTLE_RATE_GRD:(ARG:0) = 70
;		RESETCOLOR
;		BREAK
;	ENDIF
;NEXT
対象側 = !発動側

FOR LOCAL:0, 0, BATTLE_COMMANDER_NUM:発動側
	発動キャラ = BATTLE_COMMANDER:(発動側):(LOCAL:0)
	
	SIF 発動キャラ < 0 || BATTLE_SKILL_SEALED:(発動側):(LOCAL:0)
		CONTINUE

	;スキル呼び出し
	FOR LOCAL:1, 0, MAX_SKILLS
		CALL SKILL_COMBAT_TRY_INVOKE(発動キャラ, LOCAL:0, LOCAL:1, "SP", 発動側, 発動勢力, 発動部隊, 対象勢力, 対象部隊)
		SIF RESULT == -1
			BREAK
	NEXT
	SETCOLOR COLOR("素質発動")

	発動キャラ素質 = BATTLE_素質:発動側:LOCAL

	;弁舌。兵力を奪う。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_弁舌) && 15 > RAND:100
		LOCAL:6 = RAND(1, 20)
		;勢力番号取得
		IF 対象部隊 >= 0
			LOCAL:5 = 対象勢力
			LOCAL:6 = UNIT_SOLDIER:対象勢力:対象部隊 * LOCAL:6 / 100
		ELSE
			LOCAL:5 = CITY_OWNER:対象勢力
			LOCAL:6 = CITY_SOLDIER:対象勢力 * LOCAL:6 / 100
		ENDIF
		PRINTFORML \@ GET_COUNTRY_BOSS(LOCAL:5) >= 0 ? %ANAME(GET_COUNTRY_BOSS(LOCAL:5))% # 敵 \@軍の兵は、%ANAME(発動キャラ)%の弁舌に騙され、次々と寝返っている！
		IF 対象部隊 >= 0
			PRINTFORML %ANAME(GET_COUNTRY_BOSS(LOCAL:5)), 10, RIGHT%軍:{UNIT_SOLDIER:対象勢力:対象部隊, 6, RIGHT} → {UNIT_SOLDIER:対象勢力:対象部隊 - LOCAL:6, 6, RIGHT}
			UNIT_SOLDIER:対象勢力:対象部隊 -= LOCAL:6
		ELSE
			PRINTFORML %@"\@ GET_COUNTRY_BOSS(LOCAL:5) >= 0 ? %ANAME(GET_COUNTRY_BOSS(LOCAL:5))% # 無所属 \@", 10, RIGHT%軍:{CITY_SOLDIER:対象勢力, 6, RIGHT} → {CITY_SOLDIER:対象勢力 - LOCAL:6, 6, RIGHT}
			CITY_SOLDIER:対象勢力 -= LOCAL:6
		ENDIF
		IF 発動部隊 >= 0
			PRINTFORML %ANAME(GET_COUNTRY_BOSS(CFLAG:発動キャラ:所属)), 10, RIGHT%軍:{UNIT_SOLDIER:発動勢力:発動部隊,6, RIGHT} → {UNIT_SOLDIER:発動勢力:発動部隊 + LOCAL:6, 6, RIGHT}
			UNIT_SOLDIER:発動勢力:発動部隊 += LOCAL:6
		ELSE
			PRINTFORML %ANAME(GET_COUNTRY_BOSS(CFLAG:発動キャラ:所属)), 10, RIGHT%軍:{CITY_SOLDIER:発動勢力, 6, RIGHT} → {CITY_SOLDIER:発動勢力 + LOCAL:6, 6, RIGHT}
			CITY_SOLDIER:発動勢力 += LOCAL:6
		ENDIF
	ENDIF

	;斉射。敵部隊を1割（最大2000）削る
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_斉射) && 25 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は敵部隊に一斉掃射を仕掛けた！
		IF 対象部隊 >= 0
			LOCAL:5 = 対象勢力
			LOCAL:6 = MIN(UNIT_SOLDIER:対象勢力:対象部隊 * 10 / 100, 2000)
			PRINTFORML %ANAME(GET_COUNTRY_BOSS(LOCAL:5)), 10, RIGHT%軍:{UNIT_SOLDIER:対象勢力:対象部隊, 6, RIGHT} → {UNIT_SOLDIER:対象勢力:対象部隊 - LOCAL:6, 6, RIGHT}
			UNIT_SOLDIER:対象勢力:対象部隊 -= LOCAL:6
		ELSE
			LOCAL:5 = CITY_OWNER:対象勢力
			LOCAL:6 = MIN(CITY_SOLDIER:対象勢力 * 10 / 100, 2000)
			PRINTFORML %@"\@ GET_COUNTRY_BOSS(LOCAL:5) >= 0 ? %ANAME(GET_COUNTRY_BOSS(LOCAL:5))% # 無所属 \@", 10, RIGHT%軍:{CITY_SOLDIER:対象勢力, 6, RIGHT} → {CITY_SOLDIER:対象勢力 - LOCAL:6, 6, RIGHT}
			CITY_SOLDIER:対象勢力 -= LOCAL:6
		ENDIF
	ENDIF
	
	;ホフゴブリン。援軍を呼ぶ。
	IF TALENT:発動キャラ:特殊勢力素質 == 特殊勢力_ホフゴブリン && 25 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は仲間を呼んだ！
		LOCAL:6 = RAND(500, MAX(500 + SP_COUNTRY_RANK:(特殊勢力_ホフゴブリン) * 500))
		PRINTFORML 援軍が現れた！
		IF 発動部隊 >= 0
			PRINTFORML %ANAME(GET_COUNTRY_BOSS(CFLAG:発動キャラ:所属)), 10, RIGHT%軍:{UNIT_SOLDIER:発動勢力:発動部隊, 6, RIGHT} → {UNIT_SOLDIER:発動勢力:発動部隊 + LOCAL:6, 6, RIGHT}
			UNIT_SOLDIER:発動勢力:発動部隊 += LOCAL:6
		ELSE
			PRINTFORML %ANAME(GET_COUNTRY_BOSS(CFLAG:発動キャラ:所属)), 10, RIGHT%軍:{CITY_SOLDIER:発動勢力, 6, RIGHT} → {CITY_SOLDIER:発動勢力 + LOCAL:6, 6, RIGHT}
			CITY_SOLDIER:発動勢力 += LOCAL:6
		ENDIF
	ENDIF

	SIF FINDELEMENT(BATTLE_COMMANDER_NUM, 0) != -1
		CONTINUE
	;-----------ここから対象をとる素質------------------
	;暗殺。相手武将の中から一人選択し、その能力を一時的に0にする（戦闘参加不能と解釈）
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_暗殺) && 15 > RAND:100
		LOCAL:1 = RAND:(BATTLE_COMMANDER_NUM:発動側)
		対象キャラ = BATTLE_COMMANDER:対象側:(LOCAL:1)
		IF 対象キャラ >= 0
			PRINTFORML %ANAME(発動キャラ)%は、%ANAME(対象キャラ)%に暗殺をしかけた！
			PRINTFORML %ANAME(対象キャラ)%はこの戦闘に参加できない！
			BATTLE_武闘:(対象側):(LOCAL:1) = 0
			BATTLE_知略:(対象側):(LOCAL:1) = 0
			BATTLE_政治:(対象側):(LOCAL:1) = 0
			BATTLE_妖術:(対象側):(LOCAL:1) = 0
			BATTLE_料理:(対象側):(LOCAL:1) = 0
			BATTLE_歌唱:(対象側):(LOCAL:1) = 0
			BATTLE_SKILL_SEALED:対象側:(LOCAL:1) = 1
		ENDIF
	ENDIF

	;封魔。対象の素質発動を封じる。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_封魔) && 20 > RAND:100
		LOCAL:1 = RAND:(BATTLE_COMMANDER_NUM:対象側)
		対象キャラ = BATTLE_COMMANDER:対象側:(LOCAL:1)
		IF 対象キャラ >= 0
			PRINTFORML %ANAME(発動キャラ)%は%ANAME(対象キャラ)%に封魔の術をかけた！
			PRINTFORML %ANAME(対象キャラ)%はこの戦闘で素質を発動できない！
			BATTLE_SKILL_SEALED:(対象側):(LOCAL:1) = 1
		ENDIF
	ENDIF

	;触手。パーティに女がいると援軍を得る
	IF TALENT:発動キャラ:特殊勢力素質 == 特殊勢力_触手 && 20 > RAND:100
		FOR LOCAL, 0, BATTLE_COMMANDER_NUM:発動側
			LOCAL:1 = BATTLE_COMMANDER:発動側:LOCAL
			IF LOCAL:1 >= 0 && IS_FEMALE(LOCAL:1) && BATTLE_武闘:発動側:LOCAL > 0
				PRINTFORML %ANAME(LOCAL:1)%の身体に触手が群がっていく……！
				PRINTFORML %ANAME(LOCAL:1)%を母体として、触手は増殖した！
				LOCAL:6 = RAND(500, MAX(1000 + SP_COUNTRY_RANK:(特殊勢力_触手) * 500))
				IF 発動部隊 >= 0
					PRINTFORML %ANAME(GET_COUNTRY_BOSS(CFLAG:発動キャラ:所属)), 10, RIGHT%軍:{UNIT_SOLDIER:発動勢力:発動部隊, 6, RIGHT} → {UNIT_SOLDIER:発動勢力:発動部隊 + LOCAL:6, 6, RIGHT}
					UNIT_SOLDIER:発動勢力:発動部隊 += LOCAL:6
				ELSE
					PRINTFORML %ANAME(GET_COUNTRY_BOSS(CFLAG:発動キャラ:所属)), 10, RIGHT%軍:{CITY_SOLDIER:発動勢力, 6, RIGHT} → {CITY_SOLDIER:発動勢力 + LOCAL:6, 6, RIGHT}
					CITY_SOLDIER:発動勢力 += LOCAL:6
				ENDIF
				RESETCOLOR
				BREAK
			ENDIF
		NEXT
	ENDIF
	
	;サキュバス。暗殺
	IF TALENT:発動キャラ:特殊勢力素質 == 特殊勢力_サキュバス && 5 + 2 * SP_COUNTRY_RANK:(特殊勢力_サキュバス) > RAND:100
		LOCAL:1 = RAND:(BATTLE_COMMANDER_NUM:対象側)
		対象キャラ = BATTLE_COMMANDER:対象側:(LOCAL:1)
		IF 対象キャラ >= 0
			PRINTFORML %ANAME(対象キャラ)%は、%ANAME(発動キャラ)%に見とれている！
			PRINTFORML %ANAME(対象キャラ)%はこの戦闘に参加できない！
			BATTLE_武闘:(対象側):(LOCAL:1) = 0
			BATTLE_知略:(対象側):(LOCAL:1) = 0
			BATTLE_政治:(対象側):(LOCAL:1) = 0
			BATTLE_妖術:(対象側):(LOCAL:1) = 0
			BATTLE_料理:(対象側):(LOCAL:1) = 0
			BATTLE_歌唱:(対象側):(LOCAL:1) = 0
		ENDIF
	ENDIF


	;野盗。対象部隊の女の数だけ強化される。強化量はSP_COUNTRY_RANK:(特殊勢力_野盗)に依存する。
	IF TALENT:発動キャラ:特殊勢力素質 == 特殊勢力_野盗 && SP_COUNTRY_RANK:(特殊勢力_野盗) * 10 > RAND:100
		LOCAL:2 = 0
		FOR LOCAL:1, 0, (BATTLE_COMMANDER_NUM:対象側)
			対象キャラ = BATTLE_COMMANDER:対象側:(LOCAL:1)
			IF 対象キャラ >= 0 && IS_FEMALE(対象キャラ)
				LOCAL:2 ++
				PRINTFORML %ANAME(発動キャラ)%は、%ANAME(対象キャラ)%の姿にテンションをあげている！
			ENDIF
		NEXT
		BATTLE_武闘:発動側:LOCAL += MIN(SP_COUNTRY_RANK:(特殊勢力_野盗) / 2, 1) * LOCAL:2
		BATTLE_知略:発動側:LOCAL += MIN(SP_COUNTRY_RANK:(特殊勢力_野盗) / 2, 1) * LOCAL:2
	ENDIF
	
	RESETCOLOR
NEXT


;-------------------------------------------------
;優先して発動する特殊計略の処理
;引数0～1には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=対象側
;※部隊が0未満の場合防衛部隊とみなし、勢力を都市番号として使用
;-------------------------------------------------
@BATTLE_BASE_SKILL(発動側, 発動勢力, 発動部隊, 対象勢力, 対象部隊)
#DIM 勢力
#DIM 部隊
#DIM 発動側
#DIM 対象側
#DIM 発動勢力
#DIM 発動部隊
#DIM 対象勢力
#DIM 対象部隊
#DIM 発動側キャラ, 3
#DIM 対象側キャラ, 3
#DIM 発動キャラ
#DIM 対象キャラ
#DIM 発動キャラ素質

VARSET 発動側キャラ, -1
VARSET 対象側キャラ, -1

対象側 = !発動側

FOR LOCAL:0, 0, BATTLE_COMMANDER_NUM:発動側
	発動キャラ = BATTLE_COMMANDER:発動側:LOCAL

	SIF 発動キャラ < 0 || BATTLE_SKILL_SEALED:(発動側):(LOCAL:0)
		CONTINUE

	;スキル呼び出し
	FOR LOCAL:1, 0, MAX_SKILLS
		CALL SKILL_COMBAT_TRY_INVOKE(発動キャラ, LOCAL:0, LOCAL:1, "BASE", 発動側, 発動勢力, 発動部隊, 対象勢力, 対象部隊)
		SIF RESULT == -1
			BREAK
	NEXT

	SETCOLOR COLOR("素質発動")

	発動キャラ素質 = BATTLE_素質:発動側:LOCAL
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_三種の神器) && 20 > RAND:100
		SELECTCASE RAND:3
			CASE 0
				PRINTFORML %ANAME(発動キャラ)%の三種の神器・剣！
				PRINTFORML 部隊の攻撃力が上昇する！
				TIMES BATTLE_ATC:発動側, 1.3
			CASE 1
				PRINTFORML %ANAME(発動キャラ)%の三種の神器・玉！
				PRINTFORML 部隊の防御力が上昇する！
				TIMES BATTLE_DEF:発動側, 1.3
			CASE 2
				PRINTFORML %ANAME(発動キャラ)%の三種の神器・鏡！
				PRINTFORML 部隊が割合ダメージを与える！
				BATTLE_RATE_DMG:発動側 = 10
		ENDSELECT
	ENDIF
	;策士。計略が発動する。
	;相手のBATTLE_INTの1.3倍がこちらのBATTLE_INTより高い場合、そちらを利用する（反計を防止）
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_策士) && 10 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は策を張り巡らせる……！
		BATTLE_INT:発動側 = MAX(BATTLE_INT:発動側, BATTLE_INT:対象側 * 13 / 10)
		BATTLE_FORCE_SCHEME = 発動側
	ENDIF
	;明察。反計の確定(たぶん)発動。
	;具体的には自軍のBATTLE_INTを敵軍の4倍にしつつ（反計の発動を確実にしつつ）、相手側にFORCE_SCHEMEを入れる
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_明察) && 7 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は敵部隊の計略を見透かした！
		BATTLE_INT:発動側 = BATTLE_INT:対象側 * 4
		BATTLE_FORCE_SCHEME = 対象側
	ENDIF
	;ステゴロ。両軍割合ダメージ。一応自軍に有利。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_ステゴロ) && 30 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は大暴れしている！
		BATTLE_RATE_DMG:発動側 += RAND(10,15)
		BATTLE_RATE_DMG:対象側 += RAND(5,10)
	ENDIF
	;突貫。攻撃力が増えるが防御力が減る。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_突貫) && 15 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は捨て身の陣をしいた！
		TIMES BATTLE_ATC:発動側, 1.2
		TIMES BATTLE_DEF:発動側, 0.7
	ENDIF
	;下克上等。相手より弱ければ弱いほど発動率は高まる。野戦部隊にのみ発動する。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_下克上等) && BATTLE_F_UNIT:対象側
		LOCAL:1 = (100 - (BATTLE_ATC:発動側 + BATTLE_DEF:発動側 + BATTLE_INT:発動側 + BATTLE_MAG:発動側) * 100  / (BATTLE_ATC:対象側 + BATTLE_DEF:対象側 + BATTLE_INT:対象側 + BATTLE_MAG:対象側)) / 2
		IF LOCAL:1 > RAND:100
			PRINTFORML %ANAME(発動キャラ)%の下克上等！
			PRINTFORML 自らは強く、相手は弱くなる！
			TIMES BATTLE_ATC:発動側 , 1.50
			TIMES BATTLE_DEF:発動側 , 1.50
			TIMES BATTLE_INT:発動側 , 1.50
			TIMES BATTLE_MAG:発動側 , 1.50
			TIMES BATTLE_ATC:対象側 , 0.75
			TIMES BATTLE_DEF:対象側 , 0.75
			TIMES BATTLE_INT:対象側 , 0.75
			TIMES BATTLE_MAG:対象側 , 0.75
		ENDIF
	ENDIF
	;魔力転換。攻撃力の2割を割合ダメージ基礎値とする。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_魔力転換) && 15 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は攻撃力を魔力に転換した！
		BATTLE_MAG:発動側 += BATTLE_ATC:発動側 * 2 / 10
		BATTLE_ATC:発動側 = BATTLE_ATC:発動側 * 8 / 10
	ENDIF
	
	;バンドガール。歌唱（料理も）の補正が二重にかかる。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_バンドガール) && 5 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は楽器演奏で士気を高めた！
		IF 発動部隊 < 0
			BATTLE_ATC:発動側 = MAX(BATTLE_ATC:発動側, ABL_50_POWER) * SUPPORT_LEVEL(発動側, 勢力) / 1000
			BATTLE_DEF:発動側 = MAX(BATTLE_DEF:発動側, ABL_50_POWER) * SUPPORT_LEVEL(発動側, 勢力) / 1000
			BATTLE_INT:発動側 = MAX(BATTLE_INT:発動側, ABL_50_POWER) * SUPPORT_LEVEL(発動側, 勢力) / 1000
		ELSE
			BATTLE_ATC:発動側 = MAX(BATTLE_ATC:発動側, ABL_50_POWER) * SUPPORT_LEVEL(発動側, 勢力) / 1000
			BATTLE_DEF:発動側 = MAX(BATTLE_DEF:発動側, ABL_50_POWER) * SUPPORT_LEVEL(発動側, 勢力) / 1000
			BATTLE_INT:発動側 = MAX(BATTLE_INT:発動側, ABL_50_POWER) * SUPPORT_LEVEL(発動側, 勢力) / 1000
		ENDIF
	ENDIF
	
	;哨戒。被害軽減率を僅かに得る。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_哨戒) && 15 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は周囲を警戒している！
		BATTLE_RATE_GRD:発動側 += 10
	ENDIF
	
	;都市防衛。自軍が都市である場合のみ、防御力が上昇し被害軽減率を得る。
	IF 発動部隊 < 0 && GETBIT(発動キャラ素質, 素質_ＳＬＧ_防衛戦術) && 25 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は防衛に巧みな戦術を発揮した！
		TIMES BATTLE_DEF:発動側 , 1.20
		BATTLE_RATE_GRD:発動側 += 20
	ENDIF
	
	;統率力。攻撃力・防御力・知略が上昇
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_統率力) && 15 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は優れた統率力を発揮した！
		TIMES BATTLE_ATC:発動側, 1.15
		TIMES BATTLE_DEF:発動側, 1.15
		TIMES BATTLE_INT:発動側, 1.15
	ENDIF
	
	;遅滞戦術。互いの被害をほぼ０にする。
	;ものごっつい戦力差がある場合は普通にすりつぶされる。
	IF GETBIT(発動キャラ素質, 素質_ＳＬＧ_遅滞戦術) && 15 > RAND:100
		PRINTFORML %ANAME(発動キャラ)%は時間稼ぎを始めた！
		PRINTFORML この戦闘での互いの被害は極めて小さくなる！
		BATTLE_RATE_GRD_B:発動側 = 95
		BATTLE_RATE_GRD_B:対象側 = 95
	ENDIF
	RESETCOLOR
NEXT

FOR LOCAL:0, 0, 3
	発動キャラ = 発動側キャラ:LOCAL
	IF 発動キャラ >= 0
		;外来人。敵部隊の自部隊より高い能力を、自部隊の能力以下にせしめる。発動判定は1回の戦闘で1度のみで、発動率はSP_COUNTRY_RANK:(特殊勢力_外来人)に依存する。
		IF TALENT:発動キャラ:特殊勢力素質 == 特殊勢力_外来人
			;SP_COUNTRY_RANK:(特殊勢力_外来人)に応じて確率が上昇。
			IF SP_COUNTRY_RANK:(特殊勢力_外来人) * 10 > RAND:100
				SETCOLOR COLOR("桃")
				PRINTFORML %ANAME(発動キャラ)%は敵に怪しげな桃色の霧を吹きかける……！
				SIF BATTLE_ATC:対象側 > BATTLE_ATC:発動側
					BATTLE_ATC:対象側 = BATTLE_ATC:発動側 * 7 / 10
				SIF BATTLE_DEF:対象側 > BATTLE_DEF:発動側
					BATTLE_DEF:対象側 = BATTLE_DEF:発動側 * 7 / 10
				SIF BATTLE_INT:対象側 > BATTLE_INT:発動側
					BATTLE_INT:対象側 = BATTLE_INT:発動側 * 7 / 10
				SETCOLOR COLOR("素質発動")
			ENDIF
			BREAK
		ENDIF
	ENDIF
NEXT

RESETCOLOR
;-------------------------------------------------
;計略の発動
;引数0～1には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=対象側
;引数 2:発動側勢力 3:発動側部隊 4:対象勢力 5:対象部隊
;-------------------------------------------------
@TRY_SCHEME(発動側, 対象側, 発動勢力, 発動部隊, 対象勢力, 対象部隊)
#DIM 発動側
#DIM 対象側
#DIM 発動勢力
#DIM 発動部隊
#DIM 対象勢力
#DIM 対象部隊
SETCOLOR COLOR("シアン")
PRINTFORML %BATTLE_NAME:(発動側)%軍の計略発動！

;対象勢力勢力部隊の《反計》判定
;・対象側知略パワーが発動側知略パワーの半分を超えている
;・「対象側知略パワー＋対象側知略パワー以下の乱数」が「発動側知略パワーの2倍＋発動側の知略パワーの2倍以下の乱数」以上であること
;の2つの条件を満たせば対象側が「反計」計略を発動した扱いになる
;つまり、対象側知略パワーが発動側知略パワーの4倍以上であれば確定で反計が成立する
IF RAND:(BATTLE_INT:(対象側)) + BATTLE_INT:(対象側) >= RAND:(BATTLE_INT:(発動側) * 2) + BATTLE_INT:(発動側) * 2
	SETCOLOR COLOR("警告")
	PRINT 《反計》
	RESETCOLOR
	PRINTDATAL
		DATAFORM %BATTLE_NAME:(対象側)%軍は計略を先読みし%BATTLE_NAME:(発動側)%軍に大きな被害を与えた
		DATAFORM %BATTLE_NAME:(対象側)%軍は相手の動きを読みきり%BATTLE_NAME:(発動側)%軍の計略の隙を突いた
		DATAFORM %BATTLE_NAME:(対象側)%軍は%BATTLE_NAME:(発動側)%軍の稚拙な計略を逆に利用して被害を与えた
		DATAFORM %BATTLE_NAME:(対象側)%は%BATTLE_NAME:(発動側)%軍に送った諜報の情報をもとに、伏兵を使い被害を与えた
		DATAFORM %BATTLE_NAME:(発動側)%軍の策は、%BATTLE_NAME:(発動側)%軍自身に牙をむいた
		DATAFORM %BATTLE_NAME:(発動側)%は策を逆に利用され、手ひどい打撃を受けた
		DATAFORM %BATTLE_NAME:(発動側)%の策は%BATTLE_NAME:(対象側)%軍に読み切られていた
	ENDDATA
	;反計実行者の決定及び口上
	IF GROUPMATCH(CFLAG:MASTER:所属, 発動勢力, 対象勢力)
		CALL WHOES_SCHEME(対象側, 対象勢力, 対象部隊, 51)
		IF RESULT >= 0
			RESETCOLOR
			;口上の表示
			CALL KOJO_EVENT(RESULT, 311)
		ENDIF
	ELSEIF GROUPMATCH(CFLAG:MASTER:所属, 対象側, 発動部隊)
		CALL WHOES_SCHEME(対象側, 対象勢力, 対象部隊, 51)
		IF RESULT >= 0
			RESETCOLOR
			;口上の表示
			CALL KOJO_EVENT(RESULT, 314)
		ENDIF
	ENDIF

	BATTLE_RATE_DMG:(対象側) += 8
	BATTLE_RATE_ATC:(対象側) += 50
	BATTLE_RATE_GRD:(対象側) += 50
ELSE
	;発動勢力勢力部隊の《貫計》判定(愛情)
	LOCAL:5 = 1
	IF 対象勢力 == CFLAG:MASTER:所属
		FOR LOCAL:0, 0, 3
			IF BATTLE_F_UNIT:(対象側)
				LOCAL:2 = GET_UNIT_COMMANDER(対象勢力, 対象部隊, LOCAL:0)
			ELSE
				IF LOCAL:0 >= 2
					BREAK
				ELSE
					LOCAL:2 = GET_CITY_COMMANDER(対象勢力, LOCAL:0)
				ENDIF
			ENDIF

			IF LOCAL:2 >= 0
				LOCAL:3 = MAX(ABL_POWER_X(50, LOCAL:2) - ABL_50_POWER, 1)
				IF RAND:(LOCAL:3 * 2) + LOCAL:3 >= RAND:(BATTLE_INT:(発動側) * 3) + BATTLE_INT:(発動側)
					SETCOLOR COLOR("黄緑")
					PRINTFORM 《貫計》
					PRINTDATAL
						DATAFORM %BATTLE_NAME:(対象側)%軍の%NAME:(LOCAL:2)%は圧倒的な勢いで%BATTLE_NAME:(発動側)%軍の計略をねじ伏せ無効化した
						DATAFORM %BATTLE_NAME:(対象側)%軍は%NAME:(LOCAL:2)%の執念で%BATTLE_NAME:(発動側)%軍の計略を潰した
					ENDDATA
					RESETCOLOR
					LOCAL:5 = 0

					RESETCOLOR
					;口上の表示
					CALL KOJO_EVENT(LOCAL:2, 313)
					BREAK
				ENDIF
			ENDIF
		NEXT
	ENDIF

	IF LOCAL:5
		;発動勢力勢力部隊の《貫計》判定(武力)
		IF RAND:(BATTLE_ATC:(対象側)) + BATTLE_ATC:(対象側) >= RAND:(BATTLE_INT:(発動側) * 3) + BATTLE_INT:(発動側)
			SETCOLOR COLOR("黄緑")
			PRINTFORM 《貫計》
			PRINTDATAL
				DATAFORM %BATTLE_NAME:(対象側)%軍は力で%BATTLE_NAME:(発動側)%軍の計略をねじ伏せ無効化した
				DATAFORM %BATTLE_NAME:(対象側)%軍は%BATTLE_NAME:(発動側)%軍の計略を圧倒的な力で無効化した
				DATAFORM %BATTLE_NAME:(発動側)%軍の計略は%BATTLE_NAME:(対象側)%軍がもつ力の前では無意味だった
			ENDDATA
			IF 発動勢力 == CFLAG:MASTER:所属 || 対象勢力 == CFLAG:MASTER:所属
				CALL WHOES_SCHEME(対象側, 対象勢力, 対象部隊, 50)
				IF RESULT >= 0
					RESETCOLOR
					;口上の表示
					CALL KOJO_EVENT(RESULT, 312)
				ENDIF
			ENDIF

		;計略がそのまま通った場合
		ELSE
			;計略の選択
			CALL SELECT_SCHEME(発動側, 対象側)

			IF 発動勢力 == CFLAG:MASTER:所属 || 対象勢力 == CFLAG:MASTER:所属
				CALL WHOES_SCHEME(発動側, 発動勢力, 発動部隊, 51)
				IF RESULT >= 0
					RESETCOLOR
					;口上の表示
					CALL KOJO_EVENT(RESULT, 310)
				ENDIF
			ENDIF
		ENDIF
	ENDIF
ENDIF
RESETCOLOR

;-------------------------------------------------
;どのキャラが計略を発動させたか決定する関数(口上表示の対象を決める)
;引数0には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側
;引数 1:発動側勢力(or都市) 2:発動側部隊 3:関連能力
;-------------------------------------------------
@WHOES_SCHEME(ARG:0, ARG:1, ARG:2, ARG:3)
VARSET LOCAL, 0
FOR LOCAL:0, 0, 3
	IF BATTLE_F_UNIT:(ARG:0)
		LOCAL:2 = GET_UNIT_COMMANDER(ARG:1, ARG:2, LOCAL:0)
	ELSE
		IF LOCAL:0 >= 2
			BREAK
		ELSE
			LOCAL:2 = GET_CITY_COMMANDER(ARG:1, LOCAL:0)
		ENDIF
	ENDIF

	IF LOCAL:2 >= 0
		LOCAL:(LOCAL:0 + 10) = LOCAL:2
		LOCAL:(LOCAL:0 + 20) = ABL_POWER_X(ABL:(LOCAL:2):(ARG:3), LOCAL:2)
	ELSE
		LOCAL:(LOCAL:0 + 10) = -1
	ENDIF
NEXT

LOCAL:6 = MAX(LOCAL:20, LOCAL:21, LOCAL:22)
LOCAL:7 = 0

IF LOCAL:6 <= 0
	RETURN -1
ENDIF

FOR LOCAL:0, 0, 3
	LOCAL:(LOCAL:0 + 20) = MAX(LOCAL:(LOCAL:0 + 20) * 8 / LOCAL:6 - 4, 0)
	LOCAL:7 += LOCAL:(LOCAL:0 + 20)
NEXT

LOCAL:8 = RAND:(LOCAL:7)

FOR LOCAL:0, 0, 3
	LOCAL:8 -= LOCAL:(LOCAL:0 + 20)
	IF LOCAL:8 < 0
		RETURN LOCAL:(LOCAL:0 + 10)
	ENDIF
NEXT
RETURN -1

;-------------------------------------------------
;知略パワーに応じた計略の選択
;引数には計算用変数の配列番号(0 or 1)を取る ARG:0=計略発動側 ARG:1=対象側
;-------------------------------------------------
@SELECT_SCHEME(ARG:0, ARG:1)
VARSET LOCAL, 0

;■知略パワーに応じて選択可能な計略を増やす
;同士討ち
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(110)
	LOCAL:10 = 1
;兵器攻撃
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(100)
	LOCAL:11 = 1
;地形利用
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(90)
	LOCAL:12 = 1
;内通撹乱
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(85)
	LOCAL:13 = 1
;分断
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(75)
	LOCAL:14 = 1
;夜襲
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(70)
	LOCAL:18 = 1
;包囲殲滅
SIF BATTLE_INT:(ARG:0) >= ABL_POWER(65)
	LOCAL:15 = 1
;釣り出し
LOCAL:16 = 1
;挑発
LOCAL:17 = 1

;計略発動側が防衛部隊
IF !BATTLE_F_UNIT:(ARG:0)
	LOCAL:12 = 0
	LOCAL:14 = 0
	LOCAL:15 = 0
	;LOCAL:16 = 0
	LOCAL:17 = 0
;対象側が防衛部隊
ELSEIF !BATTLE_F_UNIT:(ARG:1)
	LOCAL:12 = 0
	LOCAL:14 = 0
	LOCAL:15 = 0
	LOCAL:16 = 0
	LOCAL:18 = 0
;遭遇戦
ELSE
	LOCAL:17 = 0
ENDIF

LOCAL:2 = 0
FOR LOCAL:0, 10, 30
	IF LOCAL:(LOCAL:0)
		LOCAL:2 ++
	ENDIF
NEXT
LOCAL:3 = RAND:(LOCAL:2)
LOCAL:4 = 0
FOR LOCAL:0, 10, 30
	IF LOCAL:(LOCAL:0)
		IF LOCAL:3 == LOCAL:4
			LOCAL:5 = LOCAL:0
		ENDIF
		LOCAL:4 ++
	ENDIF
NEXT

SELECTCASE LOCAL:5
	CASE 10
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は周到な策謀により%BATTLE_NAME:(ARG:1)%軍を同士討ちさせることに成功した
		BATTLE_RATE_DMG:(ARG:0) += 20
		BATTLE_RATE_ATC:(ARG:0) += 50
		BATTLE_RATE_GRD:(ARG:0) += 80
	CASE 11
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は兵器を利用して%BATTLE_NAME:(ARG:1)%軍に大攻勢を仕掛けました
		BATTLE_RATE_DMG:(ARG:0) += 5
		BATTLE_RATE_ATC:(ARG:0) += 120
		BATTLE_RATE_GRD:(ARG:0) += 55
	CASE 12
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍を有利な地形に誘い込んで大打撃を与えた
		BATTLE_RATE_DMG:(ARG:0) += 12
		BATTLE_RATE_ATC:(ARG:0) += 60
		BATTLE_RATE_GRD:(ARG:0) += 70
	CASE 13
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は内通者を利用して%BATTLE_NAME:(ARG:1)%軍を撹乱した
		BATTLE_RATE_DMG:(ARG:0) += 4
		BATTLE_RATE_ATC:(ARG:0) += 80
		BATTLE_RATE_GRD:(ARG:0) += 45
	CASE 14
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍の部隊を分断し指揮系統を混乱させた
		BATTLE_RATE_DMG:(ARG:0) += 2
		BATTLE_RATE_ATC:(ARG:0) += 80
		BATTLE_RATE_GRD:(ARG:0) += 40
	CASE 15
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍の突出した部隊を包囲し各個撃破した
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 55
		BATTLE_RATE_GRD:(ARG:0) += 30
	CASE 16
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍の先鋒部隊を誘い出して孤立させ、優位に戦闘を進めた
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 40
		BATTLE_RATE_GRD:(ARG:0) += 20
	CASE 17
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍を挑発し、城から討って出させた
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 60
		BATTLE_RATE_GRD:(ARG:0) += 0
	CASE 18
		PRINTFORML %BATTLE_NAME:(ARG:0)%軍は%BATTLE_NAME:(ARG:1)%軍に夜襲を掛けて戦果を上げた
		BATTLE_RATE_DMG:(ARG:0) += 0
		BATTLE_RATE_ATC:(ARG:0) += 70
		BATTLE_RATE_GRD:(ARG:0) += 30
ENDSELECT

;	同士討ち……100[○○○]敵部隊に大被害、味方の被害大幅軽減
;	兵器　　…… 95[○○○]敵部隊に大被害、味方の被害軽減
;	地形利用…… 90[○××]敵部隊に中被害、味方の被害大幅軽減
;	追撃　　…… 85[※※※]敵部隊の離脱時に大被害
;	降伏　　…… 85[○○×]敵部隊に中被害、味方の兵数上昇
;	内通撹乱…… 80[○○○]敵部隊に中被害、味方の被害軽減
;	分断　　…… 75[○××]攻撃／防御を低い値に固定
;	補給襲撃…… 70[○○○]部隊の攻撃力を持続的に低下
;	包囲殲滅…… 65[○××]敵部隊に中被害、味方の被害軽減
;	釣り出し…… 55[○××]敵部隊に小被害、味方の被害軽減
;	挑発　　…… 50[×○×]敵部隊の防御倍率を低下させる→強制的に遭遇戦と同様の計算に

;-------------------------------------------------
;部隊壊滅時の士官の捕獲
;ARG:0=勝利した勢力 ARG:1=勝利した部隊の番号 ARG:2=敗北した勢力 ARG:3=敗北した部隊の番号
;※ARG:1、ARG:3が負のときはARG:0、ARG:2を都市番号とみなす
;-------------------------------------------------
@UNIT_BREAK_CAPTURE(ARG:0, ARG:1, ARG:2, ARG:3)
;勝利側の将のキャラ番号
#DIM COMMANDER_W, 3

;敗北側の将のキャラ番号
#DIM COMMANDER_L, 3

;勝利側・敗北側の勢力番号
#DIM COUNTRY_W
#DIM COUNTRY_L

;戦死率
#DIM DEATH_RATE

;勝利側が素質<現代兵術>を持っているか
#DIM IS_GAIRAI

;逃走阻止率
#DIM CAPTURE_RATE

#DIM アップ能力
#DIM アップ経験値
#DIM アップ量



;遊撃部隊・防衛部隊のそれぞれに合わせて必要な変数をセット(勝利側)
CALL GET_COMMANDER_ALL(ARG:0, ARG:1)
FOR LOCAL:0, 0, MAX_UNIT_COMMANDER
	COMMANDER_W:(LOCAL:0) = RESULT:LOCAL
NEXT
COUNTRY_W = (ARG:1 >= 0 ? ARG:0 # CITY_OWNER:(ARG:0))

CALL GET_COMMANDER_ALL(ARG:2, ARG:3)
FOR LOCAL:0, 0, MAX_UNIT_COMMANDER
	COMMANDER_L:(LOCAL:0) = RESULT:LOCAL
NEXT
COUNTRY_L = (ARG:3 >= 0 ? ARG:2 # CITY_OWNER:(ARG:2))

;戦死設定が有効の場合
IF CONFIG:305 >= 1
	;設定に応じた戦死率を設定(DEATH_RATE / 1000)
	IF CONFIG:305 == 3
		DEATH_RATE = 250
	ELSEIF CONFIG:305 == 2
		DEATH_RATE = 100
	ELSE
		DEATH_RATE = 20
	ENDIF

	FOR LOCAL:0, 0, 3
		LOCAL:4 = COMMANDER_L:(LOCAL:0)

		;戦死判定、君主およびイベントキャラ(NOが2000以上)は戦死しない
		IF LOCAL:4 >= 0 && LOCAL:4 != GET_COUNTRY_BOSS(COUNTRY_L) && NO:(LOCAL:4) < 2000 && RAND:1000 < DEATH_RATE
			IF LOCAL:4 == MASTER
				SETCOLOR COLOR("警告")
				PRINTFORML %NAME:(LOCAL:4)%は戦死しました…
				RESETCOLOR
				;戦死エンドフラグ
				FLAG:戦死エンドフラグ = 1
			ELSE
				;戦死口上
				CALL KOJO_EVENT(LOCAL:4, 337)

				IF COUNTRY_W == CFLAG:MASTER:所属
					SETCOLOR COLOR("警告")
					PRINTFORML %NAME:(LOCAL:4)%を討ち取りました！
					RESETCOLOR
				ELSEIF COUNTRY_L == CFLAG:MASTER:所属
					SETCOLOR COLOR("警告")
					PRINTFORMW %NAME:(LOCAL:4)%は戦死しました…
					RESETCOLOR
				ELSE
					SETCOLOR COLOR("警告")
					PRINTFORML %NAME:(LOCAL:4)%は戦死したようです
					RESETCOLOR
				ENDIF
				CALL CHANGE_COUNTRY(LOCAL:4, 0, 1)
			ENDIF
		ENDIF
	NEXT
ENDIF

FOR LOCAL:0, 0, 3
	LOCAL:4 = COMMANDER_L:(LOCAL:0)
	IF LOCAL:4 >= 0
		;捕獲率を計算する。三能力に基づいて決定する。ただし武闘には倍の重み付けを行う
		CAPTURE_RATE = (400 - (ABL:(LOCAL:4):武闘  * 2 + ABL:(LOCAL:4):知略 + ABL:(LOCAL:4):政治)) / 4
		SELECTCASE CONFIG:306
			CASE 0
				;素の値
				CAPTURE_RATE = LIMIT(CAPTURE_RATE, 10, 60)
			CASE 1
				;高い
				TIMES CAPTURE_RATE, 1.5
				CAPTURE_RATE = LIMIT(CAPTURE_RATE, 10, 80)
			CASE 2
				CAPTURE_RATE = 100
			CASE 3
				CAPTURE_RATE = 0
			CASE 4
				;低い
				TIMES CAPTURE_RATE, 0.5
				CAPTURE_RATE = MAX(CAPTURE_RATE, 5, 50)
		ENDSELECT
		IF GETBIT(TALENT:(LOCAL:4):ＳＬＧ素質, 素質_ＳＬＧ_早足) && RAND:3 && CAPTURE_RATE != 100
			SETCOLOR COLOR("素質発動")
			PRINTFORML %ANAME(LOCAL:4)%は早足を利用して逃げ回る！
			RESETCOLOR
			CAPTURE_RATE /= 2
		ENDIF
	ELSE
		CAPTURE_RATE = 0
	ENDIF
	;戦死したキャラはスキップ
	IF LOCAL:4 >= 0 && CFLAG:(LOCAL:4):特殊状態 != 2 && !(LOCAL:4 == MASTER && FLAG:戦死エンドフラグ)
		;捕縛判定(君主は捕縛されない)
		;イベントキャラ(NOが2000以上)は捕獲できない
		IF RAND:100 < CAPTURE_RATE && LOCAL:4 != GET_COUNTRY_BOSS(COUNTRY_L) && NO:(LOCAL:4) < 2000 
			IF COUNTRY_L == CFLAG:MASTER:所属
				CALL COLORPRINTFORM(@"%NAME:(LOCAL:4)%は捕らえられました…", COLOR("警告"), "W")
			ELSEIF COUNTRY_W == CFLAG:MASTER:所属
				CALL COLORPRINTFORM(@"%NAME:(LOCAL:4)%を捕らえました！", COLOR("注意"), "W")
			ELSE
				PRINTFORML %NAME:(LOCAL:4)%は捕らえられた模様です
			ENDIF

			;捕虜の扱いを決定
			CALL TREAT_PRISONER(COUNTRY_L, COUNTRY_W, LOCAL:4, 1)
			;解放したなら自勢力に戻ってもらう
			IF RESULT == 1
				CFLAG:(LOCAL:4):特殊状態 = 0
				CFLAG:(LOCAL:4):恨む君主 = 0
				CFLAG:(LOCAL:4):滅亡前の君主 = 0
			;処刑したなら無所属に
			ELSEIF RESULT == 3
				CALL CHANGE_COUNTRY(LOCAL:4, 0, 1)
			ENDIF

		;逃走した場合
		ELSE
			IF COUNTRY_L == CFLAG:MASTER:所属
				PRINTFORML %NAME:(LOCAL:4)%は何とか逃げ帰りました
			ELSEIF COUNTRY_W == CFLAG:MASTER:所属
				PRINTFORML %NAME:(LOCAL:4)%は逃走したようです…
			ELSE
				PRINTFORML %NAME:(LOCAL:4)%は逃走した模様です
			ENDIF
			;とりま25%の確率で負傷
			IF !RAND:4
				CALL SET_COOLTIME(LOCAL:4, RAND:3 + 2)
				IF CFLAG:(LOCAL:4):所属 == CFLAG:MASTER:所属
					SETCOLOR COLOR("警告")
					PRINTFORML 逃走中、%NAME:(LOCAL:4)%は負傷しました……
					PRINTFORML 全治{COOLTIME:(LOCAL:4):0}ターンです
				ELSE
					SETCOLOR COLOR("DARKRED")
					PRINTFORML 逃走中、%NAME:(LOCAL:4)%は負傷しました
					PRINTFORML 全治{COOLTIME:(LOCAL:4):0}ターンです
				ENDIF
				;蓬莱人は1/3の確率で怪我を無効化
				IF TALENT:(LOCAL:4):蓬莱人 && !RAND:3
					COOLTIME:(LOCAL:4):0 = 0
					SETCOLOR COLOR("素質発動")
					PRINTFORML 蓬莱人である%NAME:(LOCAL:4)%の怪我は、あっという間にふさがりました
					PRINTFORML クールタイムが無効化されました
				ENDIF
				RESETCOLOR
				LOCAL:5 = 0
				;治療持ちが同じ勢力にいる場合は確率、本人が治療持ちの場合は確定で、負傷を軽減
				FOR LOCAL:1, 0, CHARANUM
					IF COOLTIME:(LOCAL:4):0 > 1 && (GETBIT(TALENT:(LOCAL:1):ＳＬＧ素質, 素質_ＳＬＧ_治療) && CFLAG:(LOCAL:1):所属 == CFLAG:(LOCAL:4):所属 && CFLAG:(LOCAL:1):捕虜先 == 0 && RAND:100 < 10) || (GETBIT(TALENT:(LOCAL:4):ＳＬＧ素質, 素質_ＳＬＧ_治療) && !LOCAL:5)
						IF GETBIT(TALENT:(LOCAL:4):ＳＬＧ素質, 素質_ＳＬＧ_治療)
							COOLTIME:(LOCAL:4):0 = 1
							LOCAL:5 = 1
							SETCOLOR COLOR("素質発動")
							PRINTFORML %NAME:(LOCAL:4)%は怪我を自ら治療しました
							PRINTFORML 全治{COOLTIME:(LOCAL:4):0}ターンになりました
							RESETCOLOR
						ELSE
							COOLTIME:(LOCAL:4):0 = MAX(1, COOLTIME:(LOCAL:4):0 - (RAND:2 + 1))
							SETCOLOR COLOR("素質発動")
							PRINTFORML %NAME:(LOCAL:1)%の治療により、%NAME:(LOCAL:4)%の怪我は軽く済みました
							PRINTFORML 全治{COOLTIME:(LOCAL:4):0}ターンになりました
							RESETCOLOR
						ENDIF
					ENDIF
				NEXT
			ENDIF
		ENDIF
	ENDIF
NEXT
FOR LOCAL,0, 3
	LOCAL:1 = COMMANDER_W:LOCAL
	IF LOCAL:1 > 0
		アップ量 = 0
		SELECTCASE RAND:100
			CASE IS < 30
				アップ能力 = GETNUM(ABL, "武闘")
				アップ経験値 = GETNUM(EXP, "武闘経験値")
			CASE IS < 60
				アップ能力 = GETNUM(ABL, "知略")
				アップ経験値 = GETNUM(EXP, "知略経験値")
			CASE IS < 80
				アップ能力 = GETNUM(ABL, "政治")
				アップ経験値 = GETNUM(EXP, "政治経験値")
			CASE IS < 90
				アップ能力 = GETNUM(ABL, "歌唱")
				アップ経験値 = GETNUM(EXP, "歌唱経験値")
			CASEELSE
				アップ能力 = GETNUM(ABL, "料理")
				アップ経験値 = GETNUM(EXP, "料理経験値")
		ENDSELECT
		IF TALENT:(LOCAL:1):妖術知識 && ABL:(LOCAL:1):妖術 < 50
			アップ能力 = GETNUM(ABL, "妖術")
			アップ経験値 = GETNUM(EXP, "妖術経験値")
		ENDIF
		SELECTCASE アップ能力
			CASE GETNUM(ABL, "武闘"), GETNUM(ABL, "知略"), GETNUM(ABL, "政治"), GETNUM(ABL, "妖術")
				LOCAL:2 = ABLUP_NEED_EXP_SLG_THREE(ABL:(LOCAL:1):アップ能力)
				SELECTCASE ABL:(LOCAL:1):アップ能力
					CASE IS >= ランク閾値:ランク_三能力:ランク_A
						アップ量 = 0
					CASE IS >= ランク閾値:ランク_三能力:ランク_B
						アップ量 = RAND(0, LOCAL:2 / 2)
					CASE IS >= ランク閾値:ランク_三能力:ランク_C
						アップ量 = RAND(0, LOCAL:2)
					CASE IS >= ランク閾値:ランク_三能力:ランク_F
						アップ量 = RAND(0, LOCAL:2 * 2)
					CASEELSE
						アップ量 = RAND(LOCAL:2, LOCAL:2 * 3)
				ENDSELECT
			CASEELSE
				LOCAL:2 = ABLUP_NEED_EXP_SLG_TWO(ABL:(LOCAL:1):アップ能力)
				SELECTCASE ABL:(LOCAL:1):アップ能力
					CASE IS >= ランク閾値:ランク_料理歌唱:ランク_A
						アップ量 = 0
					CASE IS >= ランク閾値:ランク_料理歌唱:ランク_B
						アップ量 = RAND(0, LOCAL:2 / 2)
					CASE IS >= ランク閾値:ランク_料理歌唱:ランク_C
						アップ量 = RAND(0, LOCAL:2)
					CASE IS >= ランク閾値:ランク_料理歌唱:ランク_E
						アップ量 = RAND(0, LOCAL:2 * 3 / 2)
					CASEELSE
						アップ量 = RAND(LOCAL:2 / 2, LOCAL:2 * 2)
				ENDSELECT
		ENDSELECT
		;妖術の場合は必要経験値が三能力の20倍なので、とりま20倍で
		SIF アップ能力 == GETNUM(ABL, "妖術")
			アップ量 *= 20
		IF アップ量
			SIF GETBIT(TALENT:(LOCAL:1):ＳＬＧ素質, 素質_ＳＬＧ_超成長力)
				アップ量 += RAND(0, LOCAL:2)
			IF TALENT:(LOCAL:1):習得早い
				SELECTCASE RAND:100
					CASE IS < 20
						アップ量 += RAND(0, LOCAL:2 / 2)
					CASE IS < 30
						アップ量 += RAND(LOCAL:2 / 2 , LOCAL:2)
				ENDSELECT
			ENDIF
			;LOCAL:2には本来の必要経験値の100倍が入ってるので、100で割っとく
			アップ量 /= 100
			SETCOLOR COLOR("灰色")
			CALL PRINT_ADD_EXP(LOCAL:1, EXPNAME:(アップ経験値), アップ量, 1)
			RESETCOLOR
			CALL TRAIN_AUTO_ABLUP(LOCAL:1)
		ENDIF
	ENDIF
NEXT

;-------------------------------------------------
;都市ARG:0の防衛倍率を計算
;-------------------------------------------------
@CITY_GUARD_RATE(ARG:0)
#FUNCTION
LOCAL:0 = CITY_GUARD:(ARG:0) * (CITY_ECONOMY:(ARG:0) / 100 + 10000) / 100

;政策補正
SELECTCASE COUNTRY_POLICY:(CITY_OWNER:(ARG:0))
;防衛ランク3
CASE 8
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 3.00
;防衛ランク2
CASE 5
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 2.00
;防衛ランク1
CASE 2
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 1.50
;防衛ランク-1
CASE 3, 7
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 0.90
;防衛ランク-2
CASE 6
	SIF IS_COUNTRY(CITY_OWNER:(ARG:0))
		TIMES LOCAL:0, 0.70
CASEELSE
ENDSELECT

;防衛AIなら1.1倍
;IF IS_COUNTRY(CITY_OWNER:(ARG:0)) && CITY_OWNER:(ARG:0) != CFLAG:MASTER:所属 && COUNTRY_AI_TYPE:(CITY_OWNER:(ARG:0)) == AI_防衛
;	TIMES LOCAL:0, 1.10
;ENDIF

IF !IS_COUNTRY(CITY_OWNER:(ARG:0))
	LOCAL:0 = 10000
ENDIF
RETURNF LOCAL:0 / 100
