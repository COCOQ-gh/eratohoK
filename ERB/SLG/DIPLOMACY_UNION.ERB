;連合の処理

;-------------------------------------------------
;連合の発議  戦略フェイズの終わりに呼び出される
;-------------------------------------------------
@UNION_CONFERENCE
#DIM TMP_UNION_COUNTRY, MAX_COUNTRY

VARSET TMP_UNION_COUNTRY
;開始直後の{SLG_PP:2}期は処理を行わない
SIF DAY < SLG_PP:2
	RETURN

;必要なデータマップを作成
CALL TMP_CREATE_RELATION_MAP
CALL TMP_CREATE_COUNTRY_NEIBORING_MAP

FOR LOCAL:0, 1, MAX_COUNTRY
	IF IS_COUNTRY(LOCAL:0)
		;各国の外交計画をチェック
		CALL AI_DIPLOMACY_CHECK(LOCAL:0)
	ENDIF
NEXT

;現在組まれている連合があるかどうかを調べる
;LOCAL:1 = 0
;FOR LOCAL:0, 0, MAX_TREATY_U
;	IF TREATY_U_TERM:(LOCAL:0) >= 1
;		LOCAL:1 = 1
;		BREAK
;	ENDIF
;NEXT
;IF LOCAL:1
	;既に連合が組まれているなら戻る
;	RETURN
;ENDIF

;討伐対象となり得る勢力を取得
RESULT = 0
CALL EXPLORE_UNION_TARGET
IF !RESULT
	;討伐対象となり得る勢力が存在しなければ戻る
	;DEBUGPRINTFORML {DAY,3}:討伐対象なし
	RETURN 0
ENDIF

LOCAL:5 = RESULT
LOCAL:6 = GET_COUNTRY_BOSS(LOCAL:5)

;連合が組まれた主な原因を判定(脅威:LOCAL:8=0 悪名:LOCAL:8=1)
LOCAL:7 = 0
LOCAL:8 = 0
FOR LOCAL:0, 1, MAX_COUNTRY
	SIF IS_COUNTRY(LOCAL:0)
		LOCAL:7 += GET_SUM_ECONOMY(LOCAL:0)
NEXT
SIF GET_SUM_ECONOMY(LOCAL:5) * 100 / LOCAL:7 < 35
	LOCAL:8 = 1

;空いている連合の番号を取得
LOCAL:10 = -1
FOR LOCAL:0, 0, MAX_TREATY_U
	IF TREATY_U_TERM:(LOCAL:0) <= 0
		LOCAL:10 = LOCAL:0
		BREAK
	ENDIF
NEXT
IF LOCAL:10 < 0
	RETURN
ENDIF

SETCOLOR COLOR_CAUTION
IF LOCAL:8
	PRINTFORMW %NAME:(LOCAL:6)%の悪名の高まりに応じて、諸国から%NAME:(LOCAL:6)%への非難決議が出されました！
ELSE
	PRINTFORMW %NAME:(LOCAL:6)%の増長に対抗するため、諸国から反%NAME:(LOCAL:6)%連合の発議がなされました！
ENDIF
RESETCOLOR

LOCAL:2 = 0
FOR LOCAL:0, 1, MAX_COUNTRY
	;参加予定フラグが立っているなら加盟させる(主人公勢力は一旦除く)
	IF COUNTRY_IS_UNION:(LOCAL:0) && LOCAL:0 != CFLAG:MASTER:1
		PRINTFORML %NAME:GET_COUNTRY_BOSS(LOCAL:0)%は反%NAME:(LOCAL:6)%連合への参加を表明しました
		LOCAL:2 ++
	ENDIF
NEXT

LOCAL:11 = 0

;主人公勢力が連合への参加条件を満たしている場合
IF LOCAL:5 != CFLAG:MASTER:1 && COUNTRY_IS_UNION:(CFLAG:MASTER:1)
	PRINTFORMW 我が国にも連合への加盟を促す書状が届きました
	PRINTFORML 反%NAME:(LOCAL:6)%連合に加盟しますか？
	IF TMP_COUNTRY_RELATION:(CFLAG:MASTER:1):(LOCAL:5) == 1
		PRINTFORML ※%NAME:(LOCAL:6)%勢力と結んでいる停戦条約は解消されます
	ENDIF
	CALL ASK_YN
	IF RESULT == 0
		PRINTFORML 我が国は反%NAME:(LOCAL:6)%連合への参加を表明しました
	ELSEIF RESULT == 1
		PRINTFORML 我が国は反%NAME:(LOCAL:6)%連合に加盟しませんでした
		COUNTRY_IS_UNION:(CFLAG:MASTER:1) = 0
		;参加予定国家が2国しかなければ連合破綻
		IF LOCAL:2 <= 2
			LOCAL:11 = 1
		ELSE
			LOCAL:11 = 1
			;国家同士の隣接関係マップを作成
			CALL TMP_CREATE_COUNTRY_NEIBORING_MAP
			FOR LOCAL:0, 1, MAX_COUNTRY
				;連合参加予定国が対象国と隣接していなければ破綻
				IF COUNTRY_IS_UNION:(LOCAL:0) && TMP_COUNTRY_IS_NEIBORING:(LOCAL:5):(LOCAL:0)
					LOCAL:11 = 0
					BREAK
				ENDIF
			NEXT
		ENDIF
	ENDIF
ENDIF
;連合が結成されなかった場合
IF LOCAL:11
	SETCOLOR COLOR_CAUTION
	PRINTFORMW 反%NAME:(LOCAL:6)%連合は成立しませんでした…
	RESETCOLOR
	PRINTL 
	;連続で連合が発議されるのを防止するため、討伐対象にならない期間を設定
	COUNTRY_NOTARGET_TERM:(LOCAL:5) = 3 + RAND(1, 3)
	RETURN
ENDIF

TREATY_U_TERM:(LOCAL:10) = 6 + RAND:5
TREATY_U_TARGET:(LOCAL:10) = LOCAL:5

SETCOLOR COLOR_CAUTION
PRINTFORMW {TREATY_U_TERM:(LOCAL:10)}期間の反%NAME:(LOCAL:6)%連合が結成されました！
RESETCOLOR
PRINTL 

;連合データの作成
LOCAL:12 = 0
FOR LOCAL:0, 1, MAX_COUNTRY
	IF COUNTRY_IS_UNION:(LOCAL:0)
		TREATY_U_COUNTRY:(LOCAL:10):(LOCAL:12) = LOCAL:0
		TMP_UNION_COUNTRY:(LOCAL:12) = LOCAL:0
		;討伐対象国との敵対値を上げる
		CALL CHANGE_RELATION_C_TO_C(LOCAL:5, LOCAL:0, 0, 150)
		LOCAL:12 ++
	ENDIF
NEXT

;連続で連合が組まれるのを防止するため、討伐対象にならない期間を連合期間より多く設定
COUNTRY_NOTARGET_TERM:(LOCAL:5) = TREATY_U_TERM:(LOCAL:10) + RAND(2, 5)

;LOCAL 5:討伐対象の勢力番号, 
;TMP_UNION_COUNTRY 連合参加国のリスト

;停戦解除
LOCAL:9 = 0
FOR LOCAL:1, 0, MAX_TREATY_C
	IF TREATY_C_TERM:(LOCAL:1) >= 1
		;連合に参加する勢力と討伐対象勢力の両方を含む停戦条約を探す
		LOCAL:8 = 0
		FOR LOCAL:2, 0, MAX_TREATY_COUNTRY
			SIF TREATY_C_COUNTRY:(LOCAL:1):(LOCAL:2) == LOCAL:5
				LOCAL:8 |= 0b01
			SIF MATCH(TMP_UNION_COUNTRY, TREATY_C_COUNTRY:(LOCAL:1):(LOCAL:2))
				LOCAL:8 |= 0b10
			SIF LOCAL:8 == 0b11
				BREAK
		NEXT
		;LOCAL:1番の条約が連合に参加する勢力と討伐対象勢力の両方を含んでいた場合
		IF LOCAL:8 == 0b11
			LOCAL:4 = 0
			FOR LOCAL:2, 0, MAX_TREATY_COUNTRY
				LOCAL:3 = TREATY_C_COUNTRY:(LOCAL:1):(LOCAL:2)
				IF LOCAL:3 == LOCAL:5 || MATCH(TMP_UNION_COUNTRY, TREATY_C_COUNTRY:(LOCAL:1):(LOCAL:2))
					TREATY_C_COUNTRY:(LOCAL:1):(LOCAL:2) = 0
					LOCAL:9 = 1
				ELSEIF IS_COUNTRY(LOCAL:3)
					LOCAL:4 ++
				ENDIF
			NEXT
			IF LOCAL:4 <= 1
				TREATY_C_TERM:(LOCAL:1) = 0
				FOR LOCAL:2, 0, MAX_TREATY_COUNTRY
					TREATY_C_COUNTRY:(LOCAL:1):(LOCAL:2) = 0
				NEXT
			ENDIF
		ENDIF
	ENDIF
NEXT
IF LOCAL:9
	SETCOLOR COLOR_CAUTION
	PRINTFORML 連合参加勢力が%NAME:(LOCAL:6)%と結んでいた停戦条約は解消されました
	RESETCOLOR
	WAIT
ENDIF

;-------------------------------------------------
;連合の討伐対象となる勢力を探して、存在すればその勢力番号を返す(存在しない場合0を返す)
;さらに変数COUNTRY_IS_UNIONに連合に参加する予定の勢力を記録
;※事前に TMP_CREATE_COUNTRY_NEIBORING_MAP 関数による隣接関係マップの作成が必要
;※事前に TMP_CREATE_RELATION_MAP 関数による隣接関係マップの作成が必要
;-------------------------------------------------
@EXPLORE_UNION_TARGET
;連合に参加する予定の勢力を仮記録する変数
#DIM LIST_IS_UNION, MAX_COUNTRY
VARSET LOCAL

;最大の経済規模を持つ勢力を調べてLOCAL:4に代入
FOR LOCAL:0, 1, MAX_COUNTRY
	IF IS_COUNTRY(LOCAL:0)
		LOCAL:2 = GET_SUM_ECONOMY(LOCAL:0)
		IF LOCAL:2 > LOCAL:3 && !MATCH(TREATY_U_TARGET, LOCAL:0)
			LOCAL:3 = LOCAL:2
			LOCAL:4 = LOCAL:0
		ENDIF
		LOCAL:5 += LOCAL:2
	ENDIF
NEXT
;最大勢力の経済力が全勢力合計の35%未満ならLOCAL:4をクリア
SIF LOCAL:5 > 0 && LOCAL:3 * 100 / LOCAL:5 < 35
	LOCAL:4 = 0
;SIF LOCAL:4
	;DEBUGPRINTFORML {DAY,3}【要注意勢力】{LOCAL:4}(%NAME:GET_COUNTRY_BOSS(LOCAL:4)%)

;隣接する勢力を含む３勢力以上に極度に嫌われている場合連合の対象となる
;ただし他を圧倒する最大勢力の場合、閾値が大幅に上昇する
CALL FISHER_YATES_SHAFFLE(MAX_COUNTRY - 1)
FOR LOCAL:2, 0, MAX_COUNTRY
	LOCAL:0 = SHAFFLE_ARRAY:(LOCAL:2) + 1
	VARSET LIST_IS_UNION, 0

	IF IS_COUNTRY(LOCAL:0)
		;DEBUGPRINTFORM %NAME:GET_COUNTRY_BOSS(LOCAL:0)%({LOCAL:0}):
		;連合の討伐対象とならない期間なら除外
		SIF COUNTRY_NOTARGET_TERM:(LOCAL:0) >= 1
			CONTINUE

		;LOCAL 20:対象勢力のAI
		LOCAL:20 = COUNTRY_AI_TYPE:(LOCAL:0)
		LOCAL:10 = 0
		LOCAL:11 = 0
		LOCAL:5 = GET_COUNTRY_BOSS(LOCAL:0)

		;各勢力がLOCAL:0勢力を討伐対象とする連合を組む意思を持っているか判定
		FOR LOCAL:1, 1, MAX_COUNTRY
			;いずれかの連合に加入していれば除外
			SIF GET_UNION_TARGET(LOCAL:1) > 0
				CONTINUE
			;外交禁止フラグが立っている勢力は除外
			IF IS_COUNTRY(LOCAL:1) && LOCAL:0 != LOCAL:1 && !COUNTRY_IS_CLOSED:(LOCAL:1)
				LOCAL:6 = GET_COUNTRY_BOSS(LOCAL:1)
				LOCAL:7 = REL_LIKE:(LOCAL:6):(LOCAL:5)
				LOCAL:8 = REL_HATE:(LOCAL:6):(LOCAL:5)

				;同盟を結んでいる勢力は除外
				IF TMP_COUNTRY_RELATION:(LOCAL:0):(LOCAL:1) <= 1
					;LOCAL 21:検討勢力のAI
					LOCAL:21 = COUNTRY_AI_TYPE:(LOCAL:1)
					;LOCAL 22:好感度の判定値 23:敵対値の判定値
					LOCAL:22 = AI_DECIDE_LIKE:(LOCAL:20) * 100 / AI_RELATION:(LOCAL:21):(LOCAL:20)
					LOCAL:23 = AI_DECIDE_HATE:(LOCAL:20) * AI_RELATION:(LOCAL:21):(LOCAL:20) / 100

					;補正計算、下方判定の好意と上方判定の悪意で補正は逆数にする
					LOCAL:22 *= TMP_COUNTRY_RELATION:(LOCAL:0):(LOCAL:1) ? 4 # 5
					LOCAL:22 /= (LOCAL:4 == LOCAL:0) ? 5 # 10
					LOCAL:23 *= (LOCAL:4 == LOCAL:0) ? 5 # 10 
					LOCAL:23 /= TMP_COUNTRY_RELATION:(LOCAL:0):(LOCAL:1) ? 4 # 5
					
					;「ゆらぎ」：共に20%の範囲でズレを起こす
					LOCAL:22 = LOCAL:22 * (100 + RAND:11 + RAND:11 - RAND:11 - RAND:11) / 100
					LOCAL:23 = LOCAL:23 * (100 + RAND:11 + RAND:11 - RAND:11 - RAND:11) / 100
					
					;他を圧倒する最大勢力の場合
					IF LOCAL:4 == LOCAL:0
						IF LOCAL:7 < LOCAL:22 || LOCAL:8 >= LOCAL:23
							LIST_IS_UNION:(LOCAL:1) = 1
							;DEBUGPRINTFORM %NAME:GET_COUNTRY_BOSS(LOCAL:1)%({LOCAL:1}):1, 
							LOCAL:10 ++
							;隣接する勢力の場合
							SIF TMP_COUNTRY_IS_NEIBORING:(LOCAL:0):(LOCAL:1)
								LOCAL:11 ++
						ENDIF
					;経済面で脅威と見なされていない場合
					ELSE
						IF LOCAL:7 < LOCAL:22 && LOCAL:8 >= LOCAL:23
							LIST_IS_UNION:(LOCAL:1) = 1
							;DEBUGPRINTFORM %NAME:GET_COUNTRY_BOSS(LOCAL:1)%({LOCAL:1}):2, 
							LOCAL:10 ++
							;隣接する勢力の場合
							SIF TMP_COUNTRY_IS_NEIBORING:(LOCAL:0):(LOCAL:1)
								LOCAL:11 ++
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		NEXT
	;DEBUGPRINTFORML [{LOCAL:11}]

		;連合の討伐対象となる条件を満たしている場合(隣接1国を含む3国以上から敵視)
		IF LOCAL:10 >= 2 && LOCAL:11 >= 1
			;連合の優先度に点数を付ける
			LOCAL:15 = LOCAL:10 * 2 + LOCAL:11 + (LOCAL:4 == LOCAL:0) * 3
			IF LOCAL:15 > LOCAL:16
				LOCAL:16 = LOCAL:15
				LOCAL:17 = LOCAL:0
				LOCAL:18 = LOCAL:11
				;仮リストを本リストにコピー
				FOR LOCAL:1, 0, MAX_COUNTRY
					COUNTRY_IS_UNION:(LOCAL:1) = LIST_IS_UNION:(LOCAL:1)
				NEXT
			ENDIF
		ENDIF
	ENDIF
NEXT

IF LOCAL:17
	;対象勢力があればログに残す
	DEBUGPRINTFORML {DAY, 3}【討伐対象仮決定】%NAME:GET_COUNTRY_BOSS(LOCAL:17)%
ENDIF
;連合に参加予定の勢力のうち、経済規模が極端に小さい勢力は除外する
LOCAL:20 = 0
LOCAL:21 = 0
FOR LOCAL:0, 1, MAX_COUNTRY
	IF COUNTRY_IS_UNION:(LOCAL:0)
		LOCAL:20 += GET_SUM_ECONOMY(LOCAL:0)
		LOCAL:21 ++
	ENDIF
NEXT

LOCAL:22 = LOCAL:21
FOR LOCAL:0, 1, MAX_COUNTRY
	IF COUNTRY_IS_UNION:(LOCAL:0) && GET_SUM_ECONOMY(LOCAL:0) <= LOCAL:20 / (6 + LOCAL:21 * 2)
		COUNTRY_IS_UNION:(LOCAL:0) = 0
		LOCAL:22 --
		SIF TMP_COUNTRY_IS_NEIBORING:(LOCAL:17):(LOCAL:0)
			LOCAL:18 --
	ENDIF
NEXT

;参加予定の勢力数が3を切ったらキャンセル
SIF LOCAL:22 < 3 || LOCAL:18 <= 0
	RETURN 0

;連合に参加予定の勢力が全て停戦以上の関係を持つなら連合を組まない
LOCAL:2 = 0
FOR LOCAL:0, 1, MAX_COUNTRY
	IF COUNTRY_IS_UNION:(LOCAL:0)
		FOR LOCAL:1, LOCAL:0 + 1, MAX_COUNTRY
			IF COUNTRY_IS_UNION:(LOCAL:1) && TMP_COUNTRY_RELATION:(LOCAL:0):(LOCAL:1) == 0
				LOCAL:2 = 1
				BREAK
			ENDIF
		NEXT
		SIF LOCAL:2
			BREAK
	ENDIF
NEXT
SIF !LOCAL:2
	RETURN 0

;連合の討伐対象となる勢力が見つかった場合、その勢力番号を返す
RETURN LOCAL:17
