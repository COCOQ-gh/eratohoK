;-------------------------------------------------
;キャラリスト表示　誰かを選べばそのキャラ番号が、「やめる」を選ぶと-1が返る
;表示ロジック、選択ロジックには、「除外したいキャラの特徴を」カンマ区切りで入力する
;利用可能なロジックはSELECT_CHARA_LIST_LOGICを参照のこと
;表示文字にはカラムとして表示したいABLを文字列で指定する
;-------------------------------------------------
@SELECT_CHARA_LIST(表示ロジック="", 選択ロジック = "", 表示文字:0 = "", 表示文字:1 = "", 表示文字:2 = "", 表示文字:3 = "", 表示文字:4 = "", 表示文字:5 = "")
#DIMS 表示ロジック
#DIMS 選択ロジック
#DIMS 表示文字, 6
#DIM 表示数値, 6
#DIM FIRST_LINE
#DIM 対象
#DIM 表示位置
#DIM 表示ページ
#DIM 総ページ数
#DIM キャラ数
#DIM キャラカウンタ
#DIM 表示開始位置
#DIM 表示終了位置
#DIM ランク種別

VARSET キャラ数
VARSET 表示数値, -1

;一行目を用意
FOR LOCAL, 0, VARSIZE("表示文字")
	FOR LOCAL:1, 0, VARSIZE("ABL")
		SIF ABLNAME:(LOCAL:1) == ""
			CONTINUE
		IF 表示文字:LOCAL == ABLNAME:(LOCAL:1)
			表示文字:LOCAL = %TOSTR_SPACE(2)%%SUBSTRINGU(ABLNAME:(LOCAL:1), 0, 1)%\@ LOCAL == VARSIZE("表示文字") - 1 ?   # | \@
			表示数値:LOCAL = LOCAL:1
			BREAK
		ENDIF
	NEXT
	SIF LOCAL:1 == VARSIZE("ABL")
		表示文字:LOCAL = %TOSTR_SPACE(5)%
NEXT

FOR LOCAL, 0, CHARANUM
	CALLFORM SELECT_CHARA_LIST_LOGIC(LOCAL, 表示ロジック)
	SIF RESULT
		キャラ数 ++
NEXT

総ページ数 = (キャラ数 - 1) / 40 + 1
表示ページ = 1

PRINTFORM %TOSTR_SPACE(24)%
FOR LOCAL:1, 0, VARSIZE("表示文字")
	PRINTFORM %表示文字:(LOCAL:1)%
NEXT
PRINTFORM %TOSTR_SPACE(28)%
FOR LOCAL:1, 0, VARSIZE("表示文字")
	PRINTFORM %表示文字:(LOCAL:1)%
NEXT

PRINTL
FIRST_LINE = LINECOUNT
$SHOW_LOOP

VARSET 表示位置
VARSET キャラカウンタ
表示開始位置 = (表示ページ - 1) * 40
表示終了位置 = 表示ページ * 40


FOR LOCAL:0, 0, CHARANUM
	CALLFORM SELECT_CHARA_LIST_LOGIC(LOCAL, 表示ロジック)
	IF RESULT
		IF 表示開始位置 <= キャラカウンタ && キャラカウンタ < 表示終了位置
			IF 表示位置 % 2 != 0
				PRINT     
			ELSEIF 表示位置 > 0
				PRINTL 
			ENDIF
			CALLFORM SELECT_CHARA_LIST_LOGIC(LOCAL, 選択ロジック)
			IF RESULT
				PRINTFORM [{LOCAL:0 + 99, 4}]%ANAME(LOCAL:0), 16, RIGHT%
				PRINTFORM %TOSTR_SPACE(2)%
				FOR LOCAL:1, 0, VARSIZE("表示数値")
					IF 表示数値:(LOCAL:1) != -1
						SELECTCASE 表示数値:(LOCAL:1)
							CASE GETNUM(ABL, "武闘"), GETNUM(ABL, "知略"), GETNUM(ABL, "政治")
								ランク種別 = 0
							CASE GETNUM(ABL, "妖術")
								ランク種別 = 1
							CASE GETNUM(ABL, "料理"), GETNUM(ABL, "歌唱")
								ランク種別 = 2
							CASEELSE
								ランク種別 = 3
						ENDSELECT
						CALL PRINT_ALPHABET_RANK(ランク種別, ABL:(LOCAL:0):(表示数値:(LOCAL:1)))
						PRINTFORM {ABL:(LOCAL:0):(表示数値:(LOCAL:1)), 3}
						SIF LOCAL:1 != VARSIZE("表示数値") -1
							PRINT |
					ELSE
						PRINTFORM %TOSTR_SPACE(5)%
					ENDIF
				NEXT
			ELSE
				LOCALS:0 = [{NO:(LOCAL:0) + 99, 4}]%ANAME(LOCAL:0), 16, RIGHT%%TOSTR_SPACE(2)%
				FOR LOCAL:1, 0, VARSIZE("表示数値")
					IF 表示数値:(LOCAL:1) != -1
						SELECTCASE 表示数値:(LOCAL:1)
							CASE GETNUM(ABL, "武闘"), GETNUM(ABL, "知略"), GETNUM(ABL, "政治")
								ランク種別 = 0
							CASE GETNUM(ABL, "妖術")
								ランク種別 = 1
							CASE GETNUM(ABL, "料理"), GETNUM(ABL, "歌唱")
								ランク種別 = 2
							CASEELSE
								ランク種別 = 3
						ENDSELECT
						LOCALS:0 = %LOCALS:0%%ALPHABET_RANK(ランク種別, ABL:(LOCAL:0):(表示数値:(LOCAL:1)))%{ABL:(LOCAL:0):(表示数値:(LOCAL:1)), 3}
						SIF LOCAL:1 != VARSIZE("表示数値") -1
							LOCALS:0 = %LOCALS:0%|
					ELSE
						 LOCALS:0 = %LOCALS:0%%TOSTR_SPACE(5)%
					ENDIF
				NEXT
				SETCOLOR COLOR("選択不可")
				PRINTPLAINFORM %LOCALS:0%
				RESETCOLOR
			ENDIF
			表示位置 ++
		ENDIF
		キャラカウンタ ++
	ENDIF
NEXT

PRINTL 
DRAWLINE

IF 総ページ数 >= 2
	IF 表示ページ > 1
		PRINT [  8] 前のページ            
	ELSE
		PRINT                             
	ENDIF
	LOCALS:0 = ページ{表示ページ}/{総ページ数}
	PRINTPLAINFORM %LOCALS:0, 28, LEFT%
	IF 表示ページ < 総ページ数
		PRINT [  9] 後のページ
	ENDIF
	PRINTL 
	DRAWLINE
ENDIF

PRINTL [  0] やっぱりやめる

REDRAW 0


$INPUT_LOOP
INPUT
IF RESULT == 8 && 表示ページ > 1
	表示ページ --
	CLEARLINE LINECOUNT - FIRST_LINE
	GOTO SHOW_LOOP
ELSEIF RESULT == 9 && 表示ページ < 総ページ数
	表示ページ ++
	CLEARLINE LINECOUNT - FIRST_LINE
	GOTO SHOW_LOOP
ELSEIF RESULT == 0
	REDRAW 1
	RETURN -1
ENDIF

対象 = RESULT - 99
IF 対象 > CHARANUM || 対象 < 0
	CLEARLINE 1
	GOTO INPUT_LOOP
ENDIF
CALLFORM SELECT_CHARA_LIST_LOGIC(対象, 表示ロジック)
IF !RESULT
	CLEARLINE 1
	GOTO INPUT_LOOP
ENDIF
CALLFORM SELECT_CHARA_LIST_LOGIC(対象, 選択ロジック)
IF !RESULT
	CLEARLINE 1
	GOTO INPUT_LOOP
ENDIF
RETURN 対象

;-------------------------------------------------
;キャラリスト用のロジック関数
;-------------------------------------------------
@SELECT_CHARA_LIST_LOGIC(対象, 利用ロジック指定文字列)
#DIMS 利用ロジック指定文字列
#DIMS 利用ロジック, 100
#DIM 対象
;利用ロジックをリセット。渡された利用ロジック指定文字列を分割し、利用ロジックにそれぞれ格納。
VARSET 利用ロジック
SPLIT 利用ロジック指定文字列, ",", 利用ロジック

FOR LOCAL, 0, VARSIZE("利用ロジック")
	SIF 利用ロジック:LOCAL == ""
		CONTINUE
	;利用できるロジック一覧　必要に応じて追加してくれていいです
	;「除外するキャラを」指定することに注意
	;「死亡」はMASTERがどこかに所属している時に「別勢力」指定で自然と除外できたり、そういうのがあるので注意

	SIF STRFIND(利用ロジック:LOCAL, "男") != -1  && IS_MALE(対象)
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "女") != -1 && IS_FEMALE(対象)
		RETURN 0
	SIF STRFIND(利用ロジック:LOCAL, "異性") != -1 && !IS_SAMESEX(MASTER, 対象)
		RETURN 0
		
	SIF STRFIND(利用ロジック:LOCAL, "同性") != -1 && IS_SAMESEX(MASTER, 対象)
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "育児対象") != -1 && CFLAG:対象:16 == 4
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "動物") != -1 && IS_ANIMAL(対象)
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "君主") != -1 && GET_COUNTRY_BOSS(CFLAG:対象:所属) == 対象
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "別勢力") != -1 && CFLAG:対象:所属 != CFLAG:MASTER:所属
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "同勢力") != -1 && CFLAG:対象:所属 == CFLAG:MASTER:所属
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "所属なし") != -1 && !CFLAG:対象:所属
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "!IS_FREE") != -1 && !IS_FREE(対象)
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "捕虜") != -1 && CFLAG:対象:捕虜先
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "捕虜でない") != -1 && !CFLAG:対象:捕虜先
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "!PENIS") != -1 && !PENIS(対象)
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "!VAGINA") != -1 && !VAGINA(対象)
		RETURN 0
		
	SIF STRFIND(利用ロジック:LOCAL, "生存") != -1 && CFLAG:対象:特殊状態フラグ != 2
		RETURN 0
		
	SIF STRFIND(利用ロジック:LOCAL, "死亡") != -1 && CFLAG:対象:特殊状態フラグ == 2
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "放浪") != -1 && CFLAG:対象:特殊状態フラグ == 1
		RETURN 0
		
	SIF STRFIND(利用ロジック:LOCAL, "未登場") != -1 && ALLSAMES(0, CFLAG:対象:特殊状態フラグ, CFLAG:対象:所属)
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "特殊キャラ") != -1 && NO:対象 >= 2000
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "妊娠") != -1 && TALENT:対象:妊娠
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "MASTER") != -1 && 対象 == MASTER
		RETURN 0
	
	SIF STRFIND(利用ロジック:LOCAL, "淫紋") != -1 && GETBIT(TALENT:対象:デイリー陥落系, 素質_デイリー_淫紋)
		RETURN 0

	SIF STRFIND(利用ロジック:LOCAL, "!TALK_CAN_GIVE_SEX") != -1 && !TALK_CAN_GIVE_SEX(対象)
		RETURN 0

NEXT
RETURN 1

;-------------------------------------------------
;キャラリスト表示用の汎用関数 SLG版
;-------------------------------------------------
@SELECT_CHARA_LIST_SLG
CALL SELECT_CHARA_LIST("育児対象, 別勢力, 放浪, 死亡, 未登場, 動物", "!IS_FREE, 捕虜", "武闘", "知略", "政治", "妖術", "歌唱", "料理")
RETURN RESULT

;-------------------------------------------------
;キャラリスト表示用の汎用関数 SLG版
;-------------------------------------------------
@SELECT_CHARA_LIST_ONLY_LOGIC_SLG(表示ロジック, 選択ロジック)
#DIMS 表示ロジック
#DIMS 選択ロジック
CALL SELECT_CHARA_LIST(表示ロジック, 選択ロジック, "武闘", "知略", "政治", "妖術", "歌唱", "料理")
RETURN RESULT

@SELECT_CHARA_LIST_SEX()
CALL SELECT_CHARA_LIST("育児対象, 別勢力, 放浪, 死亡, 未登場, 動物", "!IS_FREE, 捕虜", "Ｃ感", "Ｖ感", "Ｂ感", "Ａ感", "Ｍ感", "欲望")
RETURN RESULT

@SELECT_CHARA_LIST_ONLY_LOGIC_SEX(表示ロジック, 選択ロジック)
#DIMS 表示ロジック
#DIMS 選択ロジック
CALL SELECT_CHARA_LIST(表示ロジック, 選択ロジック, "Ｃ感", "Ｖ感", "Ｂ感", "Ａ感", "Ｍ感", "欲望")
RETURN RESULT
