;---------------------------
;対象キャラが対象勢力による調教でFORCE_FUCKされたときに、CFLAGが減少するか
;減少「しない」場合、1を返す（@FORCE_FUCKの「CFLAG減少させないフラグ」に対応する）
;---------------------------
@SP_TRAIN_IS_DECREASE_CFLAG(対象, 勢力番号)
#FUNCTION
#DIM 対象
#DIM 勢力番号
SELECTCASE COUNTRY_EVENT_ID:勢力番号
	CASE SP_COUNTRY_ID:特殊勢力_野盗
		;野盗の士官か奴隷としてスタートし、対象が堕ちている
		IF GROUPMATCH(BANDIT_START, 1, 2) && GETBIT(TALENT:対象:特殊勢力陥落系, 特殊勢力_野盗)
			RETURNF 1
		;MASTERが野盗に所属している
		ELSEIF CFLAG:MASTER:所属 == 勢力番号
			RETURNF 1
		;MASTERが野盗の捕虜で、対象が堕ちている
		ELSEIF CFLAG:MASTER:捕虜先 == 勢力番号 && GETBIT(TALENT:対象:特殊勢力陥落系, 特殊勢力_野盗)
			RETURNF 1
		ENDIF
	CASEELSE
		;MASTERが対象勢力に所属している、または捕虜で対象が堕ちている
		RETURNF CFLAG:MASTER:所属 == 勢力番号 || (CFLAG:MASTER:捕虜先 == 対象 && GETBIT(TALENT:対象:特殊勢力陥落系, SP_CONVERT_EVENT_ID_TO_CONST(COUNTRY_EVENT_ID:勢力番号)))
ENDSELECT

;-------------------------------------------------
;渡された勢力番号が特殊勢力であるかを判断する
;-------------------------------------------------	
@IS_SP_COUNTRY(勢力)
#FUNCTION
#DIM 勢力
SIF 勢力 < 0 || 勢力 >= MAX_COUNTRY
	RETURNF 0
FOR LOCAL, 0, VARSIZE("SP_COUNTRY_ID")
	SIF COUNTRY_EVENT_ID:(勢力) == SP_COUNTRY_ID:LOCAL
		RETURNF 1
NEXT
RETURNF 0


;-------------------------------------------------
;渡されたキャラが特殊勢力の陥落系素質を持っているかを判断する
;-------------------------------------------------	
@IS_FALLEN_TO_SP_COUNTRY(対象)
#FUNCTION
#DIM 対象
RETURNF (TALENT:対象:特殊勢力陥落系 != 0)

;-------------------------------------------------
;渡されたキャラが特殊勢力のキャラであるかどうかを判断する
;-------------------------------------------------	
@IS_SP_COUNTRY_CHARA(対象)
#FUNCTION
#DIM 対象
RETURNF TALENT:対象:特殊勢力素質

;-------------------------------------------------
;渡された勢力番号に対応する関数呼び出しよう文字列を返す
;-------------------------------------------------
@TOSTR_SP_COUNTRY_ENG(勢力番号)
#FUNCTIONS
#DIM 勢力番号
SELECTCASE COUNTRY_EVENT_ID:勢力番号
	CASE SP_COUNTRY_ID:特殊勢力_野盗
		RETURNF "BANDIT"
	CASE SP_COUNTRY_ID:特殊勢力_ホフゴブリン
		RETURNF "GOBLIN"
	CASE SP_COUNTRY_ID:特殊勢力_外来人
		RETURNF "GAIRAI"
	CASE SP_COUNTRY_ID:特殊勢力_触手
		RETURNF "TENTACLE"
	CASE SP_COUNTRY_ID:特殊勢力_自警団
		RETURNF "VIGILANTE"
	CASEELSE
		RETURNF ""
ENDSELECT
RETURNF ""

;-------------------------------------------------
;渡された定数割り当てに対応する関数呼び出しよう文字列を返す
;-------------------------------------------------
@TOSTR_SP_COUNTRY_FROM_CONST(定数)
#FUNCTIONS
#DIM 定数
SELECTCASE 定数
	CASE 特殊勢力_野盗
		RETURNF "BANDIT"
	CASE 特殊勢力_ホフゴブリン
		RETURNF "GOBLIN"
	CASE 特殊勢力_外来人
		RETURNF "GAIRAI"
	CASE 特殊勢力_触手
		RETURNF "TENTACLE"
	CASE 特殊勢力_自警団
		RETURNF "VIGILANTE"
	CASEELSE
		RETURNF ""
ENDSELECT
RETURNF ""

;-------------------------------------------------
;渡されたビット番号に対応する陥落素質の文字列を返す
;-------------------------------------------------
@TOSTR_FALLEN_TALENT(ビット)
#FUNCTIONS
#DIM ビット
SELECTCASE ビット
	CASE 特殊勢力_野盗
		RETURNF "野盗の肉便器"
	CASE 特殊勢力_ホフゴブリン
		RETURNF "ホフゴブリンの性奴隷"
	CASE 特殊勢力_外来人
		RETURNF "研究用奴隷"
	CASE 特殊勢力_触手
		RETURNF "触手による寄生"
	CASEELSE
		RETURNF ""
ENDSELECT

;-------------------------------------------------
;渡された定数割り当てに対応する特殊勢力の文字列を返す
;-------------------------------------------------


;---------------------------------------------------
;与えられたCOUNTRY_EVENT_IDを対応する定数割り当てに変換する
;---------------------------------------------------
@SP_CONVERT_EVENT_ID_TO_CONST(EVENT_ID)
#FUNCTION
#DIM EVENT_ID
SELECTCASE EVENT_ID
	CASE SP_COUNTRY_ID:特殊勢力_野盗
		RETURNF 特殊勢力_野盗
	CASE SP_COUNTRY_ID:特殊勢力_触手
		RETURNF 特殊勢力_触手
	CASE SP_COUNTRY_ID:特殊勢力_外来人
		RETURNF 特殊勢力_外来人
	CASE SP_COUNTRY_ID:特殊勢力_自警団
		RETURNF 特殊勢力_自警団
	CASE SP_COUNTRY_ID:特殊勢力_ホフゴブリン
		RETURNF 特殊勢力_ホフゴブリン
ENDSELECT
RETURNF -1
;--------------------------------------
;特殊勢力の蜂起処理
;一応、通常勢力の蜂起イベントにも使える
;--------------------------------------
@SP_COUNTRY_RISE(勢力番号)
#DIM 勢力番号
#DIMS CALLBACK
#DIM 対象

VARSET CALLBACK
CALLBACK = %TOSTR_SP_COUNTRY_ENG(勢力番号)%

;都市選択処理
TRYCCALLFORM %CALLBACK%_RISE_SELECT_CITY
CATCH
	CALL SP_COUNTRY_RISE_SELECT_CITY
ENDCATCH

SIF RESULT == -1
	RETURN 0

対象 = RESULT

;都市簒奪処理
TRYCCALLFORM %CALLBACK%_TAKEOVER_CITY(勢力番号, 対象)
CATCH
	CALL SP_COUNTRY_TAKEOVER_CITY(勢力番号, 対象)
ENDCATCH

SIF RESULT == -1
	RETURN 0

;蜂起メッセージ
TRYCCALLFORM %CALLBACK%_RISE_MESSAGE(勢力番号, 対象)
CATCH
	CALL SP_COUNTRY_RISE_MESSAGE(勢力番号, 対象)
ENDCATCH

RETURN 1

;--------------------------------------
;特殊勢力の蜂起処理における、ランダムな都市を選択するための処理
;--------------------------------------
@SP_COUNTRY_RISE_SELECT_CITY
#DIM 勢力, MAX_COUNTRY
#DIM 判定値, MAX_COUNTRY
#DIM 都市, MAX_CITY
#DIM 対象勢力
#DIM 候補数
#DIM 対象都市
VARSET 勢力
VARSET 判定値
VARSET 都市
VARSET 候補数

;各勢力の都市数に基づいて判定値を算出
FOR LOCAL, 0, MAX_COUNTRY
	IF GET_OWN_CITY(LOCAL) > 1 || (!IS_COUNTRY(LOCAL) && GET_OWN_CITY(LOCAL) > 0)
		勢力:候補数 = LOCAL
		判定値:候補数 = RAND:GET_OWN_CITY(LOCAL)
		候補数 ++
	ENDIF
NEXT

;ありえないはずではある
SIF 候補数 == 0
	RETURN -1

;都市数が多い勢力ほど狙われやすい
対象勢力 = 勢力:FINDELEMENT(判定値, MAXARRAY(判定値, 0, 候補数), 0, 候補数)

VARSET 候補数

;対象都市を選択
FOR LOCAL, 1, CITY_NUM + 1
	IF CITY_OWNER:LOCAL == 対象勢力
		都市:候補数 = LOCAL
		候補数 ++
	ENDIF
NEXT

;一応、ありえないはずではある
SIF 候補数 == 0
	RETURN -1

対象都市 = 都市:(RAND:候補数)


RETURN 対象都市

;--------------------------------------
;特殊勢力の蜂起処理における、与えられた都市の周囲を簒奪する処理
;--------------------------------------
@SP_COUNTRY_TAKEOVER_CITY(勢力, 初期都市)
#DIM 勢力
#DIM 初期都市
#DIM 接続先
#DIM 簒奪数
#DIM 簒奪上限

CALL TAKEOVER_CITY_FROM_NO(勢力, 初期都市)

簒奪数 = 1
;初期都市を中心に、接続されている都市を奪う
;中継点がある場合は80%
FOR LOCAL:0, 0, VARSIZE("CITY_ROOT", 1)
	
	;接続先を取得
	接続先 = CITY_ROOT:初期都市:(LOCAL:0)
	SIF 接続先 == 0
		BREAK
	
	SELECTCASE CITY_TYPE:接続先
		;接続先が都市
		;OWNERの所有都市数を調べ、2以上なら奪う
		CASE 0
			IF !IS_COUNTRY(CITY_OWNER:(接続先))
				CALL TAKEOVER_CITY_FROM_NO(勢力, 接続先)
				簒奪数 ++
			ELSE
				IF GET_OWN_CITY(CITY_OWNER:接続先) >= 2
					CALL TAKEOVER_CITY_FROM_NO(勢力, 接続先)
					簒奪数 ++
				ENDIF
			ENDIF
		;接続先が中継地
		;さらに接続している先を取得し、同様の処理
		CASE 1
			SIF RAND:100 > 80
				CONTINUE
			FOR LOCAL:2, 0, VARSIZE("CITY_ROOT", 1)
				LOCAL:3  = CITY_ROOT:接続先:(LOCAL:2)
				SIF LOCAL:3 == 0
					BREAK
				IF LOCAL:3 != 初期都市
					接続先 = LOCAL:3
					IF !IS_COUNTRY(CITY_OWNER:(接続先))
						CALL TAKEOVER_CITY_FROM_NO(勢力, 接続先)
						簒奪数 ++
						BREAK
					ELSE
						IF GET_OWN_CITY(CITY_OWNER:接続先) >= 2
							CALL TAKEOVER_CITY_FROM_NO(勢力, 接続先)
							簒奪数 ++
							BREAK
						ENDIF
					ENDIF
				ENDIF
			NEXT
	ENDSELECT
NEXT

RETURN 簒奪数